
list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/components/cmake/recipes")
list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/components/cmake")



set(WMTK_COMPONENT_PREFIX "wmtkc" )
set(WMTK_AUTOGEN_COMMENT "// This file was auto-generated with CMake\n")

include(add_component)


#common stuff for all components
add_library("${WMTK_COMPONENT_PREFIX}_base")
add_library(${WMTK_COMPONENT_PREFIX}::base ALIAS ${WMTK_COMPONENT_PREFIX}_base)
add_subdirectory("wmtk_components/base/wmtk/components/base")


#library to link all components libs to
add_library(wildmeshing_components)
add_library(wmtk::components ALIAS wildmeshing_components)
target_include_directories(wildmeshing_components PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/main")
target_link_libraries(wildmeshing_components PUBLIC wmtk::toolkit ${WMTK_COMPONENT_PREFIX}::base jse::jse)
target_compile_definitions(wildmeshing_components PRIVATE WMTK_APP_INPUT_SPEC="${CMAKE_CURRENT_SOURCE_DIR}/wmtk_spec.json")
add_subdirectory("wmtk_components/main/wmtk/components")


# Group source files for IDEs
file(GLOB_RECURSE COMPONENTS_FILES_FOR_SOURCE_GROUP "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/base/*.cpp" "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/base/*.hpp")
source_group(TREE "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/base/wmtk/components/base" PREFIX "src" FILES ${COMPONENTS_FILES_FOR_SOURCE_GROUP})


#clear autogenerated the files
file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/main/wmtk/components/components_include.hpp" ${WMTK_AUTOGEN_COMMENT})
file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/main/wmtk/components/components_map.hpp" ${WMTK_AUTOGEN_COMMENT})
file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/main/wmtk/components/spec_include.hpp" ${WMTK_AUTOGEN_COMMENT}
"spec_engine.include_directories.push_back( \"${CMAKE_CURRENT_SOURCE_DIR}\");\n"
"spec_engine.include_directories.push_back( \"${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/main/wmtk/components\");\n"
)
set(json_components "")

# list of all components
add_component(${WMTK_COMPONENT_PREFIX} "input")
add_component(${WMTK_COMPONENT_PREFIX} "output")
add_component(${WMTK_COMPONENT_PREFIX} "export_cache")
add_component(${WMTK_COMPONENT_PREFIX} "import_cache")
add_component(${WMTK_COMPONENT_PREFIX} "delaunay")
add_component(${WMTK_COMPONENT_PREFIX} "isotropic_remeshing")
add_component(${WMTK_COMPONENT_PREFIX} "marching")
add_component(${WMTK_COMPONENT_PREFIX} "mesh_info")
add_component(${WMTK_COMPONENT_PREFIX} "multimesh")
add_component(${WMTK_COMPONENT_PREFIX} "multimesh_from_tag")
add_component(${WMTK_COMPONENT_PREFIX} "regular_space")
add_component(${WMTK_COMPONENT_PREFIX} "tag_intersection")
add_component(${WMTK_COMPONENT_PREFIX} "wildmeshing")
add_component(${WMTK_COMPONENT_PREFIX} "get_all_meshes")
add_component(${WMTK_COMPONENT_PREFIX} "procedural")
add_component(${WMTK_COMPONENT_PREFIX} "fusion")
add_component(${WMTK_COMPONENT_PREFIX} "triangle_insertion")
add_component(${WMTK_COMPONENT_PREFIX} "to_points")
add_component(${WMTK_COMPONENT_PREFIX} "winding_number")
add_component(${WMTK_COMPONENT_PREFIX} "periodic_optimization")
add_component(${WMTK_COMPONENT_PREFIX} "shortestedge_collapse")

string(LENGTH ${json_components} json_components_length)
math(EXPR json_components_length "${json_components_length}-2")
string(SUBSTRING ${json_components} 0 ${json_components_length} json_components)
file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/wmtk_components/main/wmtk/components/components.json" "[\n${json_components}\n]")



if(WILDMESHING_TOOLKIT_TOPLEVEL_PROJECT)
    add_subdirectory(tests)
    include(jse)
    include(cli11)

endif()






