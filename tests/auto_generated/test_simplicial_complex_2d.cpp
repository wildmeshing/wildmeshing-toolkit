
    #include <catch2/catch_test_macros.hpp>
    #include <wmtk/SimplicialComplex.hpp>
    #include <wmtk/TetMesh.hpp>
    #include <wmtk/TriMesh.hpp>
    #include "../tools/DEBUG_TriMesh.hpp"
    #include <igl/read_triangle_mesh.h>

    using namespace wmtk;

    constexpr PrimitiveType PV = PrimitiveType::Vertex;
    constexpr PrimitiveType PE = PrimitiveType::Edge;
    constexpr PrimitiveType PF = PrimitiveType::Face;
    constexpr PrimitiveType PT = PrimitiveType::Tetrahedron;
    TEST_CASE("open_star_circle", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 5058);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 5058);
    CHECK(sc_v[1][0] == 5033);
    CHECK(sc_v[1][1] == 5058);
    CHECK(sc_v[2][0] == 5034);
    CHECK(sc_v[2][1] == 5058);
    CHECK(sc_v[3][0] == 5057);
    CHECK(sc_v[3][1] == 5058);
    CHECK(sc_v[4][0] == 5058);
    CHECK(sc_v[4][1] == 5059);
    CHECK(sc_v[5][0] == 5058);
    CHECK(sc_v[5][1] == 5083);
    CHECK(sc_v[6][0] == 5058);
    CHECK(sc_v[6][1] == 5084);
    CHECK(sc_v[7][0] == 5033);
    CHECK(sc_v[7][1] == 5034);
    CHECK(sc_v[7][2] == 5058);
    CHECK(sc_v[8][0] == 5033);
    CHECK(sc_v[8][1] == 5057);
    CHECK(sc_v[8][2] == 5058);
    CHECK(sc_v[9][0] == 5034);
    CHECK(sc_v[9][1] == 5058);
    CHECK(sc_v[9][2] == 5059);
    CHECK(sc_v[10][0] == 5057);
    CHECK(sc_v[10][1] == 5058);
    CHECK(sc_v[10][2] == 5083);
    CHECK(sc_v[11][0] == 5058);
    CHECK(sc_v[11][1] == 5059);
    CHECK(sc_v[11][2] == 5084);
    CHECK(sc_v[12][0] == 5058);
    CHECK(sc_v[12][1] == 5083);
    CHECK(sc_v[12][2] == 5084);

    t = m.tuple_from_id(PV, 3999);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 3999);
    CHECK(sc_v[1][0] == 3979);
    CHECK(sc_v[1][1] == 3999);
    CHECK(sc_v[2][0] == 3980);
    CHECK(sc_v[2][1] == 3999);
    CHECK(sc_v[3][0] == 3998);
    CHECK(sc_v[3][1] == 3999);
    CHECK(sc_v[4][0] == 3999);
    CHECK(sc_v[4][1] == 4000);
    CHECK(sc_v[5][0] == 3999);
    CHECK(sc_v[5][1] == 4019);
    CHECK(sc_v[6][0] == 3999);
    CHECK(sc_v[6][1] == 4020);
    CHECK(sc_v[7][0] == 3979);
    CHECK(sc_v[7][1] == 3980);
    CHECK(sc_v[7][2] == 3999);
    CHECK(sc_v[8][0] == 3979);
    CHECK(sc_v[8][1] == 3998);
    CHECK(sc_v[8][2] == 3999);
    CHECK(sc_v[9][0] == 3980);
    CHECK(sc_v[9][1] == 3999);
    CHECK(sc_v[9][2] == 4000);
    CHECK(sc_v[10][0] == 3998);
    CHECK(sc_v[10][1] == 3999);
    CHECK(sc_v[10][2] == 4019);
    CHECK(sc_v[11][0] == 3999);
    CHECK(sc_v[11][1] == 4000);
    CHECK(sc_v[11][2] == 4020);
    CHECK(sc_v[12][0] == 3999);
    CHECK(sc_v[12][1] == 4019);
    CHECK(sc_v[12][2] == 4020);

    t = m.tuple_from_id(PV, 3116);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 3116);
    CHECK(sc_v[1][0] == 3094);
    CHECK(sc_v[1][1] == 3116);
    CHECK(sc_v[2][0] == 3095);
    CHECK(sc_v[2][1] == 3116);
    CHECK(sc_v[3][0] == 3115);
    CHECK(sc_v[3][1] == 3116);
    CHECK(sc_v[4][0] == 3116);
    CHECK(sc_v[4][1] == 3117);
    CHECK(sc_v[5][0] == 3116);
    CHECK(sc_v[5][1] == 3138);
    CHECK(sc_v[6][0] == 3116);
    CHECK(sc_v[6][1] == 3139);
    CHECK(sc_v[7][0] == 3094);
    CHECK(sc_v[7][1] == 3095);
    CHECK(sc_v[7][2] == 3116);
    CHECK(sc_v[8][0] == 3094);
    CHECK(sc_v[8][1] == 3115);
    CHECK(sc_v[8][2] == 3116);
    CHECK(sc_v[9][0] == 3095);
    CHECK(sc_v[9][1] == 3116);
    CHECK(sc_v[9][2] == 3117);
    CHECK(sc_v[10][0] == 3115);
    CHECK(sc_v[10][1] == 3116);
    CHECK(sc_v[10][2] == 3138);
    CHECK(sc_v[11][0] == 3116);
    CHECK(sc_v[11][1] == 3117);
    CHECK(sc_v[11][2] == 3139);
    CHECK(sc_v[12][0] == 3116);
    CHECK(sc_v[12][1] == 3138);
    CHECK(sc_v[12][2] == 3139);

    t = m.tuple_from_id(PV, 1308);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 1308);
    CHECK(sc_v[1][0] == 1292);
    CHECK(sc_v[1][1] == 1308);
    CHECK(sc_v[2][0] == 1293);
    CHECK(sc_v[2][1] == 1308);
    CHECK(sc_v[3][0] == 1308);
    CHECK(sc_v[3][1] == 1309);
    CHECK(sc_v[4][0] == 1308);
    CHECK(sc_v[4][1] == 1324);
    CHECK(sc_v[5][0] == 1292);
    CHECK(sc_v[5][1] == 1293);
    CHECK(sc_v[5][2] == 1308);
    CHECK(sc_v[6][0] == 1293);
    CHECK(sc_v[6][1] == 1308);
    CHECK(sc_v[6][2] == 1309);
    CHECK(sc_v[7][0] == 1308);
    CHECK(sc_v[7][1] == 1309);
    CHECK(sc_v[7][2] == 1324);

    t = m.tuple_from_id(PV, 2092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 2092);
    CHECK(sc_v[1][0] == 2076);
    CHECK(sc_v[1][1] == 2092);
    CHECK(sc_v[2][0] == 2077);
    CHECK(sc_v[2][1] == 2092);
    CHECK(sc_v[3][0] == 2092);
    CHECK(sc_v[3][1] == 2093);
    CHECK(sc_v[4][0] == 2092);
    CHECK(sc_v[4][1] == 2108);
    CHECK(sc_v[5][0] == 2076);
    CHECK(sc_v[5][1] == 2077);
    CHECK(sc_v[5][2] == 2092);
    CHECK(sc_v[6][0] == 2077);
    CHECK(sc_v[6][1] == 2092);
    CHECK(sc_v[6][2] == 2093);
    CHECK(sc_v[7][0] == 2092);
    CHECK(sc_v[7][1] == 2093);
    CHECK(sc_v[7][2] == 2108);

    t = m.tuple_from_id(PV, 713);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 713);
    CHECK(sc_v[1][0] == 698);
    CHECK(sc_v[1][1] == 713);
    CHECK(sc_v[2][0] == 699);
    CHECK(sc_v[2][1] == 713);
    CHECK(sc_v[3][0] == 712);
    CHECK(sc_v[3][1] == 713);
    CHECK(sc_v[4][0] == 713);
    CHECK(sc_v[4][1] == 714);
    CHECK(sc_v[5][0] == 698);
    CHECK(sc_v[5][1] == 699);
    CHECK(sc_v[5][2] == 713);
    CHECK(sc_v[6][0] == 698);
    CHECK(sc_v[6][1] == 712);
    CHECK(sc_v[6][2] == 713);
    CHECK(sc_v[7][0] == 699);
    CHECK(sc_v[7][1] == 713);
    CHECK(sc_v[7][2] == 714);

    t = m.edge_tuple_from_vids(531,542);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 531);
    CHECK(sc_e[0][1] == 542);
    CHECK(sc_e[1][0] == 17);
    CHECK(sc_e[1][1] == 531);
    CHECK(sc_e[1][2] == 542);
    CHECK(sc_e[2][0] == 531);
    CHECK(sc_e[2][1] == 542);
    CHECK(sc_e[2][2] == 543);

    t = m.edge_tuple_from_vids(2197,2207);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 2197);
    CHECK(sc_e[0][1] == 2207);
    CHECK(sc_e[1][0] == 2197);
    CHECK(sc_e[1][1] == 2198);
    CHECK(sc_e[1][2] == 2207);
    CHECK(sc_e[2][0] == 2197);
    CHECK(sc_e[2][1] == 2206);
    CHECK(sc_e[2][2] == 2207);

    t = m.edge_tuple_from_vids(3566,3567);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3566);
    CHECK(sc_e[0][1] == 3567);
    CHECK(sc_e[1][0] == 3546);
    CHECK(sc_e[1][1] == 3566);
    CHECK(sc_e[1][2] == 3567);
    CHECK(sc_e[2][0] == 3566);
    CHECK(sc_e[2][1] == 3567);
    CHECK(sc_e[2][2] == 3588);

    t = m.edge_tuple_from_vids(1308,1324);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1308);
    CHECK(sc_e[0][1] == 1324);
    CHECK(sc_e[1][0] == 1308);
    CHECK(sc_e[1][1] == 1309);
    CHECK(sc_e[1][2] == 1324);

    t = m.edge_tuple_from_vids(2092,2108);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 2092);
    CHECK(sc_e[0][1] == 2108);
    CHECK(sc_e[1][0] == 2092);
    CHECK(sc_e[1][1] == 2093);
    CHECK(sc_e[1][2] == 2108);

    t = m.edge_tuple_from_vids(713,714);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 713);
    CHECK(sc_e[0][1] == 714);
    CHECK(sc_e[1][0] == 699);
    CHECK(sc_e[1][1] == 713);
    CHECK(sc_e[1][2] == 714);

    t = m.face_tuple_from_vids(2030, 2045, 2046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2030);
    CHECK(sc_f[0][1] == 2045);
    CHECK(sc_f[0][2] == 2046);

    t = m.face_tuple_from_vids(4981, 5003, 5004);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4981);
    CHECK(sc_f[0][1] == 5003);
    CHECK(sc_f[0][2] == 5004);

    t = m.face_tuple_from_vids(4102, 4103, 4127);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4102);
    CHECK(sc_f[0][1] == 4103);
    CHECK(sc_f[0][2] == 4127);

}
TEST_CASE("closed_star_circle", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 5058);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 5033);
    CHECK(sc_v[1][0] == 5034);
    CHECK(sc_v[2][0] == 5057);
    CHECK(sc_v[3][0] == 5058);
    CHECK(sc_v[4][0] == 5059);
    CHECK(sc_v[5][0] == 5083);
    CHECK(sc_v[6][0] == 5084);
    CHECK(sc_v[7][0] == 5033);
    CHECK(sc_v[7][1] == 5034);
    CHECK(sc_v[8][0] == 5033);
    CHECK(sc_v[8][1] == 5057);
    CHECK(sc_v[9][0] == 5033);
    CHECK(sc_v[9][1] == 5058);
    CHECK(sc_v[10][0] == 5034);
    CHECK(sc_v[10][1] == 5058);
    CHECK(sc_v[11][0] == 5034);
    CHECK(sc_v[11][1] == 5059);
    CHECK(sc_v[12][0] == 5057);
    CHECK(sc_v[12][1] == 5058);
    CHECK(sc_v[13][0] == 5057);
    CHECK(sc_v[13][1] == 5083);
    CHECK(sc_v[14][0] == 5058);
    CHECK(sc_v[14][1] == 5059);
    CHECK(sc_v[15][0] == 5058);
    CHECK(sc_v[15][1] == 5083);
    CHECK(sc_v[16][0] == 5058);
    CHECK(sc_v[16][1] == 5084);
    CHECK(sc_v[17][0] == 5059);
    CHECK(sc_v[17][1] == 5084);
    CHECK(sc_v[18][0] == 5083);
    CHECK(sc_v[18][1] == 5084);
    CHECK(sc_v[19][0] == 5033);
    CHECK(sc_v[19][1] == 5034);
    CHECK(sc_v[19][2] == 5058);
    CHECK(sc_v[20][0] == 5033);
    CHECK(sc_v[20][1] == 5057);
    CHECK(sc_v[20][2] == 5058);
    CHECK(sc_v[21][0] == 5034);
    CHECK(sc_v[21][1] == 5058);
    CHECK(sc_v[21][2] == 5059);
    CHECK(sc_v[22][0] == 5057);
    CHECK(sc_v[22][1] == 5058);
    CHECK(sc_v[22][2] == 5083);
    CHECK(sc_v[23][0] == 5058);
    CHECK(sc_v[23][1] == 5059);
    CHECK(sc_v[23][2] == 5084);
    CHECK(sc_v[24][0] == 5058);
    CHECK(sc_v[24][1] == 5083);
    CHECK(sc_v[24][2] == 5084);

    t = m.tuple_from_id(PV, 3999);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 3979);
    CHECK(sc_v[1][0] == 3980);
    CHECK(sc_v[2][0] == 3998);
    CHECK(sc_v[3][0] == 3999);
    CHECK(sc_v[4][0] == 4000);
    CHECK(sc_v[5][0] == 4019);
    CHECK(sc_v[6][0] == 4020);
    CHECK(sc_v[7][0] == 3979);
    CHECK(sc_v[7][1] == 3980);
    CHECK(sc_v[8][0] == 3979);
    CHECK(sc_v[8][1] == 3998);
    CHECK(sc_v[9][0] == 3979);
    CHECK(sc_v[9][1] == 3999);
    CHECK(sc_v[10][0] == 3980);
    CHECK(sc_v[10][1] == 3999);
    CHECK(sc_v[11][0] == 3980);
    CHECK(sc_v[11][1] == 4000);
    CHECK(sc_v[12][0] == 3998);
    CHECK(sc_v[12][1] == 3999);
    CHECK(sc_v[13][0] == 3998);
    CHECK(sc_v[13][1] == 4019);
    CHECK(sc_v[14][0] == 3999);
    CHECK(sc_v[14][1] == 4000);
    CHECK(sc_v[15][0] == 3999);
    CHECK(sc_v[15][1] == 4019);
    CHECK(sc_v[16][0] == 3999);
    CHECK(sc_v[16][1] == 4020);
    CHECK(sc_v[17][0] == 4000);
    CHECK(sc_v[17][1] == 4020);
    CHECK(sc_v[18][0] == 4019);
    CHECK(sc_v[18][1] == 4020);
    CHECK(sc_v[19][0] == 3979);
    CHECK(sc_v[19][1] == 3980);
    CHECK(sc_v[19][2] == 3999);
    CHECK(sc_v[20][0] == 3979);
    CHECK(sc_v[20][1] == 3998);
    CHECK(sc_v[20][2] == 3999);
    CHECK(sc_v[21][0] == 3980);
    CHECK(sc_v[21][1] == 3999);
    CHECK(sc_v[21][2] == 4000);
    CHECK(sc_v[22][0] == 3998);
    CHECK(sc_v[22][1] == 3999);
    CHECK(sc_v[22][2] == 4019);
    CHECK(sc_v[23][0] == 3999);
    CHECK(sc_v[23][1] == 4000);
    CHECK(sc_v[23][2] == 4020);
    CHECK(sc_v[24][0] == 3999);
    CHECK(sc_v[24][1] == 4019);
    CHECK(sc_v[24][2] == 4020);

    t = m.tuple_from_id(PV, 3116);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 3094);
    CHECK(sc_v[1][0] == 3095);
    CHECK(sc_v[2][0] == 3115);
    CHECK(sc_v[3][0] == 3116);
    CHECK(sc_v[4][0] == 3117);
    CHECK(sc_v[5][0] == 3138);
    CHECK(sc_v[6][0] == 3139);
    CHECK(sc_v[7][0] == 3094);
    CHECK(sc_v[7][1] == 3095);
    CHECK(sc_v[8][0] == 3094);
    CHECK(sc_v[8][1] == 3115);
    CHECK(sc_v[9][0] == 3094);
    CHECK(sc_v[9][1] == 3116);
    CHECK(sc_v[10][0] == 3095);
    CHECK(sc_v[10][1] == 3116);
    CHECK(sc_v[11][0] == 3095);
    CHECK(sc_v[11][1] == 3117);
    CHECK(sc_v[12][0] == 3115);
    CHECK(sc_v[12][1] == 3116);
    CHECK(sc_v[13][0] == 3115);
    CHECK(sc_v[13][1] == 3138);
    CHECK(sc_v[14][0] == 3116);
    CHECK(sc_v[14][1] == 3117);
    CHECK(sc_v[15][0] == 3116);
    CHECK(sc_v[15][1] == 3138);
    CHECK(sc_v[16][0] == 3116);
    CHECK(sc_v[16][1] == 3139);
    CHECK(sc_v[17][0] == 3117);
    CHECK(sc_v[17][1] == 3139);
    CHECK(sc_v[18][0] == 3138);
    CHECK(sc_v[18][1] == 3139);
    CHECK(sc_v[19][0] == 3094);
    CHECK(sc_v[19][1] == 3095);
    CHECK(sc_v[19][2] == 3116);
    CHECK(sc_v[20][0] == 3094);
    CHECK(sc_v[20][1] == 3115);
    CHECK(sc_v[20][2] == 3116);
    CHECK(sc_v[21][0] == 3095);
    CHECK(sc_v[21][1] == 3116);
    CHECK(sc_v[21][2] == 3117);
    CHECK(sc_v[22][0] == 3115);
    CHECK(sc_v[22][1] == 3116);
    CHECK(sc_v[22][2] == 3138);
    CHECK(sc_v[23][0] == 3116);
    CHECK(sc_v[23][1] == 3117);
    CHECK(sc_v[23][2] == 3139);
    CHECK(sc_v[24][0] == 3116);
    CHECK(sc_v[24][1] == 3138);
    CHECK(sc_v[24][2] == 3139);

    t = m.tuple_from_id(PV, 1308);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 1292);
    CHECK(sc_v[1][0] == 1293);
    CHECK(sc_v[2][0] == 1308);
    CHECK(sc_v[3][0] == 1309);
    CHECK(sc_v[4][0] == 1324);
    CHECK(sc_v[5][0] == 1292);
    CHECK(sc_v[5][1] == 1293);
    CHECK(sc_v[6][0] == 1292);
    CHECK(sc_v[6][1] == 1308);
    CHECK(sc_v[7][0] == 1293);
    CHECK(sc_v[7][1] == 1308);
    CHECK(sc_v[8][0] == 1293);
    CHECK(sc_v[8][1] == 1309);
    CHECK(sc_v[9][0] == 1308);
    CHECK(sc_v[9][1] == 1309);
    CHECK(sc_v[10][0] == 1308);
    CHECK(sc_v[10][1] == 1324);
    CHECK(sc_v[11][0] == 1309);
    CHECK(sc_v[11][1] == 1324);
    CHECK(sc_v[12][0] == 1292);
    CHECK(sc_v[12][1] == 1293);
    CHECK(sc_v[12][2] == 1308);
    CHECK(sc_v[13][0] == 1293);
    CHECK(sc_v[13][1] == 1308);
    CHECK(sc_v[13][2] == 1309);
    CHECK(sc_v[14][0] == 1308);
    CHECK(sc_v[14][1] == 1309);
    CHECK(sc_v[14][2] == 1324);

    t = m.tuple_from_id(PV, 2092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 2076);
    CHECK(sc_v[1][0] == 2077);
    CHECK(sc_v[2][0] == 2092);
    CHECK(sc_v[3][0] == 2093);
    CHECK(sc_v[4][0] == 2108);
    CHECK(sc_v[5][0] == 2076);
    CHECK(sc_v[5][1] == 2077);
    CHECK(sc_v[6][0] == 2076);
    CHECK(sc_v[6][1] == 2092);
    CHECK(sc_v[7][0] == 2077);
    CHECK(sc_v[7][1] == 2092);
    CHECK(sc_v[8][0] == 2077);
    CHECK(sc_v[8][1] == 2093);
    CHECK(sc_v[9][0] == 2092);
    CHECK(sc_v[9][1] == 2093);
    CHECK(sc_v[10][0] == 2092);
    CHECK(sc_v[10][1] == 2108);
    CHECK(sc_v[11][0] == 2093);
    CHECK(sc_v[11][1] == 2108);
    CHECK(sc_v[12][0] == 2076);
    CHECK(sc_v[12][1] == 2077);
    CHECK(sc_v[12][2] == 2092);
    CHECK(sc_v[13][0] == 2077);
    CHECK(sc_v[13][1] == 2092);
    CHECK(sc_v[13][2] == 2093);
    CHECK(sc_v[14][0] == 2092);
    CHECK(sc_v[14][1] == 2093);
    CHECK(sc_v[14][2] == 2108);

    t = m.tuple_from_id(PV, 713);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 698);
    CHECK(sc_v[1][0] == 699);
    CHECK(sc_v[2][0] == 712);
    CHECK(sc_v[3][0] == 713);
    CHECK(sc_v[4][0] == 714);
    CHECK(sc_v[5][0] == 698);
    CHECK(sc_v[5][1] == 699);
    CHECK(sc_v[6][0] == 698);
    CHECK(sc_v[6][1] == 712);
    CHECK(sc_v[7][0] == 698);
    CHECK(sc_v[7][1] == 713);
    CHECK(sc_v[8][0] == 699);
    CHECK(sc_v[8][1] == 713);
    CHECK(sc_v[9][0] == 699);
    CHECK(sc_v[9][1] == 714);
    CHECK(sc_v[10][0] == 712);
    CHECK(sc_v[10][1] == 713);
    CHECK(sc_v[11][0] == 713);
    CHECK(sc_v[11][1] == 714);
    CHECK(sc_v[12][0] == 698);
    CHECK(sc_v[12][1] == 699);
    CHECK(sc_v[12][2] == 713);
    CHECK(sc_v[13][0] == 698);
    CHECK(sc_v[13][1] == 712);
    CHECK(sc_v[13][2] == 713);
    CHECK(sc_v[14][0] == 699);
    CHECK(sc_v[14][1] == 713);
    CHECK(sc_v[14][2] == 714);

    t = m.edge_tuple_from_vids(531,542);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 17);
    CHECK(sc_e[1][0] == 531);
    CHECK(sc_e[2][0] == 542);
    CHECK(sc_e[3][0] == 543);
    CHECK(sc_e[4][0] == 17);
    CHECK(sc_e[4][1] == 531);
    CHECK(sc_e[5][0] == 17);
    CHECK(sc_e[5][1] == 542);
    CHECK(sc_e[6][0] == 531);
    CHECK(sc_e[6][1] == 542);
    CHECK(sc_e[7][0] == 531);
    CHECK(sc_e[7][1] == 543);
    CHECK(sc_e[8][0] == 542);
    CHECK(sc_e[8][1] == 543);
    CHECK(sc_e[9][0] == 17);
    CHECK(sc_e[9][1] == 531);
    CHECK(sc_e[9][2] == 542);
    CHECK(sc_e[10][0] == 531);
    CHECK(sc_e[10][1] == 542);
    CHECK(sc_e[10][2] == 543);

    t = m.edge_tuple_from_vids(2197,2207);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 2197);
    CHECK(sc_e[1][0] == 2198);
    CHECK(sc_e[2][0] == 2206);
    CHECK(sc_e[3][0] == 2207);
    CHECK(sc_e[4][0] == 2197);
    CHECK(sc_e[4][1] == 2198);
    CHECK(sc_e[5][0] == 2197);
    CHECK(sc_e[5][1] == 2206);
    CHECK(sc_e[6][0] == 2197);
    CHECK(sc_e[6][1] == 2207);
    CHECK(sc_e[7][0] == 2198);
    CHECK(sc_e[7][1] == 2207);
    CHECK(sc_e[8][0] == 2206);
    CHECK(sc_e[8][1] == 2207);
    CHECK(sc_e[9][0] == 2197);
    CHECK(sc_e[9][1] == 2198);
    CHECK(sc_e[9][2] == 2207);
    CHECK(sc_e[10][0] == 2197);
    CHECK(sc_e[10][1] == 2206);
    CHECK(sc_e[10][2] == 2207);

    t = m.edge_tuple_from_vids(3566,3567);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 3546);
    CHECK(sc_e[1][0] == 3566);
    CHECK(sc_e[2][0] == 3567);
    CHECK(sc_e[3][0] == 3588);
    CHECK(sc_e[4][0] == 3546);
    CHECK(sc_e[4][1] == 3566);
    CHECK(sc_e[5][0] == 3546);
    CHECK(sc_e[5][1] == 3567);
    CHECK(sc_e[6][0] == 3566);
    CHECK(sc_e[6][1] == 3567);
    CHECK(sc_e[7][0] == 3566);
    CHECK(sc_e[7][1] == 3588);
    CHECK(sc_e[8][0] == 3567);
    CHECK(sc_e[8][1] == 3588);
    CHECK(sc_e[9][0] == 3546);
    CHECK(sc_e[9][1] == 3566);
    CHECK(sc_e[9][2] == 3567);
    CHECK(sc_e[10][0] == 3566);
    CHECK(sc_e[10][1] == 3567);
    CHECK(sc_e[10][2] == 3588);

    t = m.edge_tuple_from_vids(1308,1324);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 1308);
    CHECK(sc_e[1][0] == 1309);
    CHECK(sc_e[2][0] == 1324);
    CHECK(sc_e[3][0] == 1308);
    CHECK(sc_e[3][1] == 1309);
    CHECK(sc_e[4][0] == 1308);
    CHECK(sc_e[4][1] == 1324);
    CHECK(sc_e[5][0] == 1309);
    CHECK(sc_e[5][1] == 1324);
    CHECK(sc_e[6][0] == 1308);
    CHECK(sc_e[6][1] == 1309);
    CHECK(sc_e[6][2] == 1324);

    t = m.edge_tuple_from_vids(2092,2108);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 2092);
    CHECK(sc_e[1][0] == 2093);
    CHECK(sc_e[2][0] == 2108);
    CHECK(sc_e[3][0] == 2092);
    CHECK(sc_e[3][1] == 2093);
    CHECK(sc_e[4][0] == 2092);
    CHECK(sc_e[4][1] == 2108);
    CHECK(sc_e[5][0] == 2093);
    CHECK(sc_e[5][1] == 2108);
    CHECK(sc_e[6][0] == 2092);
    CHECK(sc_e[6][1] == 2093);
    CHECK(sc_e[6][2] == 2108);

    t = m.edge_tuple_from_vids(713,714);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 699);
    CHECK(sc_e[1][0] == 713);
    CHECK(sc_e[2][0] == 714);
    CHECK(sc_e[3][0] == 699);
    CHECK(sc_e[3][1] == 713);
    CHECK(sc_e[4][0] == 699);
    CHECK(sc_e[4][1] == 714);
    CHECK(sc_e[5][0] == 713);
    CHECK(sc_e[5][1] == 714);
    CHECK(sc_e[6][0] == 699);
    CHECK(sc_e[6][1] == 713);
    CHECK(sc_e[6][2] == 714);

    t = m.face_tuple_from_vids(2030, 2045, 2046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2030);
    CHECK(sc_f[1][0] == 2045);
    CHECK(sc_f[2][0] == 2046);
    CHECK(sc_f[3][0] == 2030);
    CHECK(sc_f[3][1] == 2045);
    CHECK(sc_f[4][0] == 2030);
    CHECK(sc_f[4][1] == 2046);
    CHECK(sc_f[5][0] == 2045);
    CHECK(sc_f[5][1] == 2046);
    CHECK(sc_f[6][0] == 2030);
    CHECK(sc_f[6][1] == 2045);
    CHECK(sc_f[6][2] == 2046);

    t = m.face_tuple_from_vids(4981, 5003, 5004);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4981);
    CHECK(sc_f[1][0] == 5003);
    CHECK(sc_f[2][0] == 5004);
    CHECK(sc_f[3][0] == 4981);
    CHECK(sc_f[3][1] == 5003);
    CHECK(sc_f[4][0] == 4981);
    CHECK(sc_f[4][1] == 5004);
    CHECK(sc_f[5][0] == 5003);
    CHECK(sc_f[5][1] == 5004);
    CHECK(sc_f[6][0] == 4981);
    CHECK(sc_f[6][1] == 5003);
    CHECK(sc_f[6][2] == 5004);

    t = m.face_tuple_from_vids(4102, 4103, 4127);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4102);
    CHECK(sc_f[1][0] == 4103);
    CHECK(sc_f[2][0] == 4127);
    CHECK(sc_f[3][0] == 4102);
    CHECK(sc_f[3][1] == 4103);
    CHECK(sc_f[4][0] == 4102);
    CHECK(sc_f[4][1] == 4127);
    CHECK(sc_f[5][0] == 4103);
    CHECK(sc_f[5][1] == 4127);
    CHECK(sc_f[6][0] == 4102);
    CHECK(sc_f[6][1] == 4103);
    CHECK(sc_f[6][2] == 4127);

}
TEST_CASE("link_circle", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 5058);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 5033);
    CHECK(sc_v[1][0] == 5034);
    CHECK(sc_v[2][0] == 5057);
    CHECK(sc_v[3][0] == 5059);
    CHECK(sc_v[4][0] == 5083);
    CHECK(sc_v[5][0] == 5084);
    CHECK(sc_v[6][0] == 5033);
    CHECK(sc_v[6][1] == 5034);
    CHECK(sc_v[7][0] == 5033);
    CHECK(sc_v[7][1] == 5057);
    CHECK(sc_v[8][0] == 5034);
    CHECK(sc_v[8][1] == 5059);
    CHECK(sc_v[9][0] == 5057);
    CHECK(sc_v[9][1] == 5083);
    CHECK(sc_v[10][0] == 5059);
    CHECK(sc_v[10][1] == 5084);
    CHECK(sc_v[11][0] == 5083);
    CHECK(sc_v[11][1] == 5084);

    t = m.tuple_from_id(PV, 3999);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 3979);
    CHECK(sc_v[1][0] == 3980);
    CHECK(sc_v[2][0] == 3998);
    CHECK(sc_v[3][0] == 4000);
    CHECK(sc_v[4][0] == 4019);
    CHECK(sc_v[5][0] == 4020);
    CHECK(sc_v[6][0] == 3979);
    CHECK(sc_v[6][1] == 3980);
    CHECK(sc_v[7][0] == 3979);
    CHECK(sc_v[7][1] == 3998);
    CHECK(sc_v[8][0] == 3980);
    CHECK(sc_v[8][1] == 4000);
    CHECK(sc_v[9][0] == 3998);
    CHECK(sc_v[9][1] == 4019);
    CHECK(sc_v[10][0] == 4000);
    CHECK(sc_v[10][1] == 4020);
    CHECK(sc_v[11][0] == 4019);
    CHECK(sc_v[11][1] == 4020);

    t = m.tuple_from_id(PV, 3116);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 3094);
    CHECK(sc_v[1][0] == 3095);
    CHECK(sc_v[2][0] == 3115);
    CHECK(sc_v[3][0] == 3117);
    CHECK(sc_v[4][0] == 3138);
    CHECK(sc_v[5][0] == 3139);
    CHECK(sc_v[6][0] == 3094);
    CHECK(sc_v[6][1] == 3095);
    CHECK(sc_v[7][0] == 3094);
    CHECK(sc_v[7][1] == 3115);
    CHECK(sc_v[8][0] == 3095);
    CHECK(sc_v[8][1] == 3117);
    CHECK(sc_v[9][0] == 3115);
    CHECK(sc_v[9][1] == 3138);
    CHECK(sc_v[10][0] == 3117);
    CHECK(sc_v[10][1] == 3139);
    CHECK(sc_v[11][0] == 3138);
    CHECK(sc_v[11][1] == 3139);

    t = m.tuple_from_id(PV, 1308);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 1292);
    CHECK(sc_v[1][0] == 1293);
    CHECK(sc_v[2][0] == 1309);
    CHECK(sc_v[3][0] == 1324);
    CHECK(sc_v[4][0] == 1292);
    CHECK(sc_v[4][1] == 1293);
    CHECK(sc_v[5][0] == 1293);
    CHECK(sc_v[5][1] == 1309);
    CHECK(sc_v[6][0] == 1309);
    CHECK(sc_v[6][1] == 1324);

    t = m.tuple_from_id(PV, 2092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 2076);
    CHECK(sc_v[1][0] == 2077);
    CHECK(sc_v[2][0] == 2093);
    CHECK(sc_v[3][0] == 2108);
    CHECK(sc_v[4][0] == 2076);
    CHECK(sc_v[4][1] == 2077);
    CHECK(sc_v[5][0] == 2077);
    CHECK(sc_v[5][1] == 2093);
    CHECK(sc_v[6][0] == 2093);
    CHECK(sc_v[6][1] == 2108);

    t = m.tuple_from_id(PV, 713);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 698);
    CHECK(sc_v[1][0] == 699);
    CHECK(sc_v[2][0] == 712);
    CHECK(sc_v[3][0] == 714);
    CHECK(sc_v[4][0] == 698);
    CHECK(sc_v[4][1] == 699);
    CHECK(sc_v[5][0] == 698);
    CHECK(sc_v[5][1] == 712);
    CHECK(sc_v[6][0] == 699);
    CHECK(sc_v[6][1] == 714);

    t = m.edge_tuple_from_vids(531,542);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 17);
    CHECK(sc_e[1][0] == 543);

    t = m.edge_tuple_from_vids(2197,2207);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 2198);
    CHECK(sc_e[1][0] == 2206);

    t = m.edge_tuple_from_vids(3566,3567);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3546);
    CHECK(sc_e[1][0] == 3588);

    t = m.edge_tuple_from_vids(1308,1324);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 1309);

    t = m.edge_tuple_from_vids(2092,2108);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 2093);

    t = m.edge_tuple_from_vids(713,714);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 699);

    t = m.face_tuple_from_vids(2030, 2045, 2046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(4981, 5003, 5004);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(4102, 4103, 4127);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_circle", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 5058);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 5058);

    t = m.tuple_from_id(PV, 3999);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 3999);

    t = m.tuple_from_id(PV, 3116);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 3116);

    t = m.tuple_from_id(PV, 1308);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 1308);

    t = m.tuple_from_id(PV, 2092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 2092);

    t = m.tuple_from_id(PV, 713);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 713);

    t = m.edge_tuple_from_vids(531,542);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 531);
    CHECK(sc_e[1][0] == 542);
    CHECK(sc_e[2][0] == 531);
    CHECK(sc_e[2][1] == 542);

    t = m.edge_tuple_from_vids(2197,2207);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 2197);
    CHECK(sc_e[1][0] == 2207);
    CHECK(sc_e[2][0] == 2197);
    CHECK(sc_e[2][1] == 2207);

    t = m.edge_tuple_from_vids(3566,3567);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3566);
    CHECK(sc_e[1][0] == 3567);
    CHECK(sc_e[2][0] == 3566);
    CHECK(sc_e[2][1] == 3567);

    t = m.edge_tuple_from_vids(1308,1324);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 1308);
    CHECK(sc_e[1][0] == 1324);
    CHECK(sc_e[2][0] == 1308);
    CHECK(sc_e[2][1] == 1324);

    t = m.edge_tuple_from_vids(2092,2108);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 2092);
    CHECK(sc_e[1][0] == 2108);
    CHECK(sc_e[2][0] == 2092);
    CHECK(sc_e[2][1] == 2108);

    t = m.edge_tuple_from_vids(713,714);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 713);
    CHECK(sc_e[1][0] == 714);
    CHECK(sc_e[2][0] == 713);
    CHECK(sc_e[2][1] == 714);

    t = m.face_tuple_from_vids(2030, 2045, 2046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2030);
    CHECK(sc_f[1][0] == 2045);
    CHECK(sc_f[2][0] == 2046);
    CHECK(sc_f[3][0] == 2030);
    CHECK(sc_f[3][1] == 2045);
    CHECK(sc_f[4][0] == 2030);
    CHECK(sc_f[4][1] == 2046);
    CHECK(sc_f[5][0] == 2045);
    CHECK(sc_f[5][1] == 2046);
    CHECK(sc_f[6][0] == 2030);
    CHECK(sc_f[6][1] == 2045);
    CHECK(sc_f[6][2] == 2046);

    t = m.face_tuple_from_vids(4981, 5003, 5004);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4981);
    CHECK(sc_f[1][0] == 5003);
    CHECK(sc_f[2][0] == 5004);
    CHECK(sc_f[3][0] == 4981);
    CHECK(sc_f[3][1] == 5003);
    CHECK(sc_f[4][0] == 4981);
    CHECK(sc_f[4][1] == 5004);
    CHECK(sc_f[5][0] == 5003);
    CHECK(sc_f[5][1] == 5004);
    CHECK(sc_f[6][0] == 4981);
    CHECK(sc_f[6][1] == 5003);
    CHECK(sc_f[6][2] == 5004);

    t = m.face_tuple_from_vids(4102, 4103, 4127);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4102);
    CHECK(sc_f[1][0] == 4103);
    CHECK(sc_f[2][0] == 4127);
    CHECK(sc_f[3][0] == 4102);
    CHECK(sc_f[3][1] == 4103);
    CHECK(sc_f[4][0] == 4102);
    CHECK(sc_f[4][1] == 4127);
    CHECK(sc_f[5][0] == 4103);
    CHECK(sc_f[5][1] == 4127);
    CHECK(sc_f[6][0] == 4102);
    CHECK(sc_f[6][1] == 4103);
    CHECK(sc_f[6][2] == 4127);

}
TEST_CASE("top_coface_simplex_circle", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 5058);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 5033);
    CHECK(sc_v[0][1] == 5034);
    CHECK(sc_v[0][2] == 5058);
    CHECK(sc_v[1][0] == 5033);
    CHECK(sc_v[1][1] == 5057);
    CHECK(sc_v[1][2] == 5058);
    CHECK(sc_v[2][0] == 5034);
    CHECK(sc_v[2][1] == 5058);
    CHECK(sc_v[2][2] == 5059);
    CHECK(sc_v[3][0] == 5057);
    CHECK(sc_v[3][1] == 5058);
    CHECK(sc_v[3][2] == 5083);
    CHECK(sc_v[4][0] == 5058);
    CHECK(sc_v[4][1] == 5059);
    CHECK(sc_v[4][2] == 5084);
    CHECK(sc_v[5][0] == 5058);
    CHECK(sc_v[5][1] == 5083);
    CHECK(sc_v[5][2] == 5084);

    t = m.tuple_from_id(PV, 3999);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 3979);
    CHECK(sc_v[0][1] == 3980);
    CHECK(sc_v[0][2] == 3999);
    CHECK(sc_v[1][0] == 3979);
    CHECK(sc_v[1][1] == 3998);
    CHECK(sc_v[1][2] == 3999);
    CHECK(sc_v[2][0] == 3980);
    CHECK(sc_v[2][1] == 3999);
    CHECK(sc_v[2][2] == 4000);
    CHECK(sc_v[3][0] == 3998);
    CHECK(sc_v[3][1] == 3999);
    CHECK(sc_v[3][2] == 4019);
    CHECK(sc_v[4][0] == 3999);
    CHECK(sc_v[4][1] == 4000);
    CHECK(sc_v[4][2] == 4020);
    CHECK(sc_v[5][0] == 3999);
    CHECK(sc_v[5][1] == 4019);
    CHECK(sc_v[5][2] == 4020);

    t = m.tuple_from_id(PV, 3116);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 3094);
    CHECK(sc_v[0][1] == 3095);
    CHECK(sc_v[0][2] == 3116);
    CHECK(sc_v[1][0] == 3094);
    CHECK(sc_v[1][1] == 3115);
    CHECK(sc_v[1][2] == 3116);
    CHECK(sc_v[2][0] == 3095);
    CHECK(sc_v[2][1] == 3116);
    CHECK(sc_v[2][2] == 3117);
    CHECK(sc_v[3][0] == 3115);
    CHECK(sc_v[3][1] == 3116);
    CHECK(sc_v[3][2] == 3138);
    CHECK(sc_v[4][0] == 3116);
    CHECK(sc_v[4][1] == 3117);
    CHECK(sc_v[4][2] == 3139);
    CHECK(sc_v[5][0] == 3116);
    CHECK(sc_v[5][1] == 3138);
    CHECK(sc_v[5][2] == 3139);

    t = m.tuple_from_id(PV, 1308);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 1292);
    CHECK(sc_v[0][1] == 1293);
    CHECK(sc_v[0][2] == 1308);
    CHECK(sc_v[1][0] == 1293);
    CHECK(sc_v[1][1] == 1308);
    CHECK(sc_v[1][2] == 1309);
    CHECK(sc_v[2][0] == 1308);
    CHECK(sc_v[2][1] == 1309);
    CHECK(sc_v[2][2] == 1324);

    t = m.tuple_from_id(PV, 2092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 2076);
    CHECK(sc_v[0][1] == 2077);
    CHECK(sc_v[0][2] == 2092);
    CHECK(sc_v[1][0] == 2077);
    CHECK(sc_v[1][1] == 2092);
    CHECK(sc_v[1][2] == 2093);
    CHECK(sc_v[2][0] == 2092);
    CHECK(sc_v[2][1] == 2093);
    CHECK(sc_v[2][2] == 2108);

    t = m.tuple_from_id(PV, 713);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 698);
    CHECK(sc_v[0][1] == 699);
    CHECK(sc_v[0][2] == 713);
    CHECK(sc_v[1][0] == 698);
    CHECK(sc_v[1][1] == 712);
    CHECK(sc_v[1][2] == 713);
    CHECK(sc_v[2][0] == 699);
    CHECK(sc_v[2][1] == 713);
    CHECK(sc_v[2][2] == 714);

    t = m.edge_tuple_from_vids(531,542);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 17);
    CHECK(sc_e[0][1] == 531);
    CHECK(sc_e[0][2] == 542);
    CHECK(sc_e[1][0] == 531);
    CHECK(sc_e[1][1] == 542);
    CHECK(sc_e[1][2] == 543);

    t = m.edge_tuple_from_vids(2197,2207);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 2197);
    CHECK(sc_e[0][1] == 2198);
    CHECK(sc_e[0][2] == 2207);
    CHECK(sc_e[1][0] == 2197);
    CHECK(sc_e[1][1] == 2206);
    CHECK(sc_e[1][2] == 2207);

    t = m.edge_tuple_from_vids(3566,3567);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3546);
    CHECK(sc_e[0][1] == 3566);
    CHECK(sc_e[0][2] == 3567);
    CHECK(sc_e[1][0] == 3566);
    CHECK(sc_e[1][1] == 3567);
    CHECK(sc_e[1][2] == 3588);

    t = m.edge_tuple_from_vids(1308,1324);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 1308);
    CHECK(sc_e[0][1] == 1309);
    CHECK(sc_e[0][2] == 1324);

    t = m.edge_tuple_from_vids(2092,2108);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 2092);
    CHECK(sc_e[0][1] == 2093);
    CHECK(sc_e[0][2] == 2108);

    t = m.edge_tuple_from_vids(713,714);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 699);
    CHECK(sc_e[0][1] == 713);
    CHECK(sc_e[0][2] == 714);

    t = m.face_tuple_from_vids(2030, 2045, 2046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2030);
    CHECK(sc_f[0][1] == 2045);
    CHECK(sc_f[0][2] == 2046);

    t = m.face_tuple_from_vids(4981, 5003, 5004);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4981);
    CHECK(sc_f[0][1] == 5003);
    CHECK(sc_f[0][2] == 5004);

    t = m.face_tuple_from_vids(4102, 4103, 4127);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4102);
    CHECK(sc_f[0][1] == 4103);
    CHECK(sc_f[0][2] == 4127);

}
TEST_CASE("open_star_bunny", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 15194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 15194);
    CHECK(sc_v[1][0] == 5489);
    CHECK(sc_v[1][1] == 15194);
    CHECK(sc_v[2][0] == 15194);
    CHECK(sc_v[2][1] == 19536);
    CHECK(sc_v[3][0] == 15194);
    CHECK(sc_v[3][1] == 20778);
    CHECK(sc_v[4][0] == 15194);
    CHECK(sc_v[4][1] == 21312);
    CHECK(sc_v[5][0] == 15194);
    CHECK(sc_v[5][1] == 21661);
    CHECK(sc_v[6][0] == 15194);
    CHECK(sc_v[6][1] == 21662);
    CHECK(sc_v[7][0] == 5489);
    CHECK(sc_v[7][1] == 15194);
    CHECK(sc_v[7][2] == 21312);
    CHECK(sc_v[8][0] == 5489);
    CHECK(sc_v[8][1] == 15194);
    CHECK(sc_v[8][2] == 21662);
    CHECK(sc_v[9][0] == 15194);
    CHECK(sc_v[9][1] == 19536);
    CHECK(sc_v[9][2] == 20778);
    CHECK(sc_v[10][0] == 15194);
    CHECK(sc_v[10][1] == 19536);
    CHECK(sc_v[10][2] == 21312);
    CHECK(sc_v[11][0] == 15194);
    CHECK(sc_v[11][1] == 20778);
    CHECK(sc_v[11][2] == 21661);
    CHECK(sc_v[12][0] == 15194);
    CHECK(sc_v[12][1] == 21661);
    CHECK(sc_v[12][2] == 21662);

    t = m.tuple_from_id(PV, 14921);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 14921);
    CHECK(sc_v[1][0] == 3612);
    CHECK(sc_v[1][1] == 14921);
    CHECK(sc_v[2][0] == 14393);
    CHECK(sc_v[2][1] == 14921);
    CHECK(sc_v[3][0] == 14921);
    CHECK(sc_v[3][1] == 15481);
    CHECK(sc_v[4][0] == 14921);
    CHECK(sc_v[4][1] == 16330);
    CHECK(sc_v[5][0] == 14921);
    CHECK(sc_v[5][1] == 16953);
    CHECK(sc_v[6][0] == 14921);
    CHECK(sc_v[6][1] == 21313);
    CHECK(sc_v[7][0] == 14921);
    CHECK(sc_v[7][1] == 21402);
    CHECK(sc_v[8][0] == 3612);
    CHECK(sc_v[8][1] == 14393);
    CHECK(sc_v[8][2] == 14921);
    CHECK(sc_v[9][0] == 3612);
    CHECK(sc_v[9][1] == 14921);
    CHECK(sc_v[9][2] == 16953);
    CHECK(sc_v[10][0] == 14393);
    CHECK(sc_v[10][1] == 14921);
    CHECK(sc_v[10][2] == 16330);
    CHECK(sc_v[11][0] == 14921);
    CHECK(sc_v[11][1] == 15481);
    CHECK(sc_v[11][2] == 16330);
    CHECK(sc_v[12][0] == 14921);
    CHECK(sc_v[12][1] == 15481);
    CHECK(sc_v[12][2] == 21402);
    CHECK(sc_v[13][0] == 14921);
    CHECK(sc_v[13][1] == 16953);
    CHECK(sc_v[13][2] == 21313);
    CHECK(sc_v[14][0] == 14921);
    CHECK(sc_v[14][1] == 21313);
    CHECK(sc_v[14][2] == 21402);

    t = m.tuple_from_id(PV, 2778);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 2778);
    CHECK(sc_v[1][0] == 2310);
    CHECK(sc_v[1][1] == 2778);
    CHECK(sc_v[2][0] == 2442);
    CHECK(sc_v[2][1] == 2778);
    CHECK(sc_v[3][0] == 2642);
    CHECK(sc_v[3][1] == 2778);
    CHECK(sc_v[4][0] == 2643);
    CHECK(sc_v[4][1] == 2778);
    CHECK(sc_v[5][0] == 2644);
    CHECK(sc_v[5][1] == 2778);
    CHECK(sc_v[6][0] == 2777);
    CHECK(sc_v[6][1] == 2778);
    CHECK(sc_v[7][0] == 2778);
    CHECK(sc_v[7][1] == 2780);
    CHECK(sc_v[8][0] == 2310);
    CHECK(sc_v[8][1] == 2442);
    CHECK(sc_v[8][2] == 2778);
    CHECK(sc_v[9][0] == 2310);
    CHECK(sc_v[9][1] == 2778);
    CHECK(sc_v[9][2] == 2780);
    CHECK(sc_v[10][0] == 2442);
    CHECK(sc_v[10][1] == 2777);
    CHECK(sc_v[10][2] == 2778);
    CHECK(sc_v[11][0] == 2642);
    CHECK(sc_v[11][1] == 2643);
    CHECK(sc_v[11][2] == 2778);
    CHECK(sc_v[12][0] == 2642);
    CHECK(sc_v[12][1] == 2777);
    CHECK(sc_v[12][2] == 2778);
    CHECK(sc_v[13][0] == 2643);
    CHECK(sc_v[13][1] == 2644);
    CHECK(sc_v[13][2] == 2778);
    CHECK(sc_v[14][0] == 2644);
    CHECK(sc_v[14][1] == 2778);
    CHECK(sc_v[14][2] == 2780);

    t = m.tuple_from_id(PV, 34038);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 34038);
    CHECK(sc_v[1][0] == 33902);
    CHECK(sc_v[1][1] == 34038);
    CHECK(sc_v[2][0] == 33903);
    CHECK(sc_v[2][1] == 34038);
    CHECK(sc_v[3][0] == 33904);
    CHECK(sc_v[3][1] == 34038);
    CHECK(sc_v[4][0] == 34037);
    CHECK(sc_v[4][1] == 34038);
    CHECK(sc_v[5][0] == 33902);
    CHECK(sc_v[5][1] == 33903);
    CHECK(sc_v[5][2] == 34038);
    CHECK(sc_v[6][0] == 33902);
    CHECK(sc_v[6][1] == 34037);
    CHECK(sc_v[6][2] == 34038);
    CHECK(sc_v[7][0] == 33903);
    CHECK(sc_v[7][1] == 33904);
    CHECK(sc_v[7][2] == 34038);

    t = m.tuple_from_id(PV, 34699);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 34699);
    CHECK(sc_v[1][0] == 34570);
    CHECK(sc_v[1][1] == 34699);
    CHECK(sc_v[2][0] == 34571);
    CHECK(sc_v[2][1] == 34699);
    CHECK(sc_v[3][0] == 34698);
    CHECK(sc_v[3][1] == 34699);
    CHECK(sc_v[4][0] == 34699);
    CHECK(sc_v[4][1] == 34700);
    CHECK(sc_v[5][0] == 34570);
    CHECK(sc_v[5][1] == 34571);
    CHECK(sc_v[5][2] == 34699);
    CHECK(sc_v[6][0] == 34570);
    CHECK(sc_v[6][1] == 34698);
    CHECK(sc_v[6][2] == 34699);
    CHECK(sc_v[7][0] == 34571);
    CHECK(sc_v[7][1] == 34699);
    CHECK(sc_v[7][2] == 34700);

    t = m.tuple_from_id(PV, 34694);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 34694);
    CHECK(sc_v[1][0] == 34565);
    CHECK(sc_v[1][1] == 34694);
    CHECK(sc_v[2][0] == 34566);
    CHECK(sc_v[2][1] == 34694);
    CHECK(sc_v[3][0] == 34693);
    CHECK(sc_v[3][1] == 34694);
    CHECK(sc_v[4][0] == 34694);
    CHECK(sc_v[4][1] == 34695);
    CHECK(sc_v[5][0] == 34565);
    CHECK(sc_v[5][1] == 34566);
    CHECK(sc_v[5][2] == 34694);
    CHECK(sc_v[6][0] == 34565);
    CHECK(sc_v[6][1] == 34693);
    CHECK(sc_v[6][2] == 34694);
    CHECK(sc_v[7][0] == 34566);
    CHECK(sc_v[7][1] == 34694);
    CHECK(sc_v[7][2] == 34695);

    t = m.edge_tuple_from_vids(17593,17594);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 17593);
    CHECK(sc_e[0][1] == 17594);
    CHECK(sc_e[1][0] == 17500);
    CHECK(sc_e[1][1] == 17593);
    CHECK(sc_e[1][2] == 17594);
    CHECK(sc_e[2][0] == 17593);
    CHECK(sc_e[2][1] == 17594);
    CHECK(sc_e[2][2] == 17688);

    t = m.edge_tuple_from_vids(29241,29377);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 29241);
    CHECK(sc_e[0][1] == 29377);
    CHECK(sc_e[1][0] == 29240);
    CHECK(sc_e[1][1] == 29241);
    CHECK(sc_e[1][2] == 29377);
    CHECK(sc_e[2][0] == 29241);
    CHECK(sc_e[2][1] == 29377);
    CHECK(sc_e[2][2] == 29378);

    t = m.edge_tuple_from_vids(32256,32359);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 32256);
    CHECK(sc_e[0][1] == 32359);
    CHECK(sc_e[1][0] == 32256);
    CHECK(sc_e[1][1] == 32358);
    CHECK(sc_e[1][2] == 32359);
    CHECK(sc_e[2][0] == 32256);
    CHECK(sc_e[2][1] == 32359);
    CHECK(sc_e[2][2] == 32360);

    t = m.edge_tuple_from_vids(34037,34038);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 34037);
    CHECK(sc_e[0][1] == 34038);
    CHECK(sc_e[1][0] == 33902);
    CHECK(sc_e[1][1] == 34037);
    CHECK(sc_e[1][2] == 34038);

    t = m.edge_tuple_from_vids(34698,34699);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 34698);
    CHECK(sc_e[0][1] == 34699);
    CHECK(sc_e[1][0] == 34570);
    CHECK(sc_e[1][1] == 34698);
    CHECK(sc_e[1][2] == 34699);

    t = m.edge_tuple_from_vids(34693,34694);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 34693);
    CHECK(sc_e[0][1] == 34694);
    CHECK(sc_e[1][0] == 34565);
    CHECK(sc_e[1][1] == 34693);
    CHECK(sc_e[1][2] == 34694);

    t = m.face_tuple_from_vids(1753, 2367, 13096);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1753);
    CHECK(sc_f[0][1] == 2367);
    CHECK(sc_f[0][2] == 13096);

    t = m.face_tuple_from_vids(10570, 10571, 11386);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 10570);
    CHECK(sc_f[0][1] == 10571);
    CHECK(sc_f[0][2] == 11386);

    t = m.face_tuple_from_vids(20852, 20932, 20933);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 20852);
    CHECK(sc_f[0][1] == 20932);
    CHECK(sc_f[0][2] == 20933);

}
TEST_CASE("closed_star_bunny", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 15194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 5489);
    CHECK(sc_v[1][0] == 15194);
    CHECK(sc_v[2][0] == 19536);
    CHECK(sc_v[3][0] == 20778);
    CHECK(sc_v[4][0] == 21312);
    CHECK(sc_v[5][0] == 21661);
    CHECK(sc_v[6][0] == 21662);
    CHECK(sc_v[7][0] == 5489);
    CHECK(sc_v[7][1] == 15194);
    CHECK(sc_v[8][0] == 5489);
    CHECK(sc_v[8][1] == 21312);
    CHECK(sc_v[9][0] == 5489);
    CHECK(sc_v[9][1] == 21662);
    CHECK(sc_v[10][0] == 15194);
    CHECK(sc_v[10][1] == 19536);
    CHECK(sc_v[11][0] == 15194);
    CHECK(sc_v[11][1] == 20778);
    CHECK(sc_v[12][0] == 15194);
    CHECK(sc_v[12][1] == 21312);
    CHECK(sc_v[13][0] == 15194);
    CHECK(sc_v[13][1] == 21661);
    CHECK(sc_v[14][0] == 15194);
    CHECK(sc_v[14][1] == 21662);
    CHECK(sc_v[15][0] == 19536);
    CHECK(sc_v[15][1] == 20778);
    CHECK(sc_v[16][0] == 19536);
    CHECK(sc_v[16][1] == 21312);
    CHECK(sc_v[17][0] == 20778);
    CHECK(sc_v[17][1] == 21661);
    CHECK(sc_v[18][0] == 21661);
    CHECK(sc_v[18][1] == 21662);
    CHECK(sc_v[19][0] == 5489);
    CHECK(sc_v[19][1] == 15194);
    CHECK(sc_v[19][2] == 21312);
    CHECK(sc_v[20][0] == 5489);
    CHECK(sc_v[20][1] == 15194);
    CHECK(sc_v[20][2] == 21662);
    CHECK(sc_v[21][0] == 15194);
    CHECK(sc_v[21][1] == 19536);
    CHECK(sc_v[21][2] == 20778);
    CHECK(sc_v[22][0] == 15194);
    CHECK(sc_v[22][1] == 19536);
    CHECK(sc_v[22][2] == 21312);
    CHECK(sc_v[23][0] == 15194);
    CHECK(sc_v[23][1] == 20778);
    CHECK(sc_v[23][2] == 21661);
    CHECK(sc_v[24][0] == 15194);
    CHECK(sc_v[24][1] == 21661);
    CHECK(sc_v[24][2] == 21662);

    t = m.tuple_from_id(PV, 14921);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 29);
    CHECK(sc_v[0][0] == 3612);
    CHECK(sc_v[1][0] == 14393);
    CHECK(sc_v[2][0] == 14921);
    CHECK(sc_v[3][0] == 15481);
    CHECK(sc_v[4][0] == 16330);
    CHECK(sc_v[5][0] == 16953);
    CHECK(sc_v[6][0] == 21313);
    CHECK(sc_v[7][0] == 21402);
    CHECK(sc_v[8][0] == 3612);
    CHECK(sc_v[8][1] == 14393);
    CHECK(sc_v[9][0] == 3612);
    CHECK(sc_v[9][1] == 14921);
    CHECK(sc_v[10][0] == 3612);
    CHECK(sc_v[10][1] == 16953);
    CHECK(sc_v[11][0] == 14393);
    CHECK(sc_v[11][1] == 14921);
    CHECK(sc_v[12][0] == 14393);
    CHECK(sc_v[12][1] == 16330);
    CHECK(sc_v[13][0] == 14921);
    CHECK(sc_v[13][1] == 15481);
    CHECK(sc_v[14][0] == 14921);
    CHECK(sc_v[14][1] == 16330);
    CHECK(sc_v[15][0] == 14921);
    CHECK(sc_v[15][1] == 16953);
    CHECK(sc_v[16][0] == 14921);
    CHECK(sc_v[16][1] == 21313);
    CHECK(sc_v[17][0] == 14921);
    CHECK(sc_v[17][1] == 21402);
    CHECK(sc_v[18][0] == 15481);
    CHECK(sc_v[18][1] == 16330);
    CHECK(sc_v[19][0] == 15481);
    CHECK(sc_v[19][1] == 21402);
    CHECK(sc_v[20][0] == 16953);
    CHECK(sc_v[20][1] == 21313);
    CHECK(sc_v[21][0] == 21313);
    CHECK(sc_v[21][1] == 21402);
    CHECK(sc_v[22][0] == 3612);
    CHECK(sc_v[22][1] == 14393);
    CHECK(sc_v[22][2] == 14921);
    CHECK(sc_v[23][0] == 3612);
    CHECK(sc_v[23][1] == 14921);
    CHECK(sc_v[23][2] == 16953);
    CHECK(sc_v[24][0] == 14393);
    CHECK(sc_v[24][1] == 14921);
    CHECK(sc_v[24][2] == 16330);
    CHECK(sc_v[25][0] == 14921);
    CHECK(sc_v[25][1] == 15481);
    CHECK(sc_v[25][2] == 16330);
    CHECK(sc_v[26][0] == 14921);
    CHECK(sc_v[26][1] == 15481);
    CHECK(sc_v[26][2] == 21402);
    CHECK(sc_v[27][0] == 14921);
    CHECK(sc_v[27][1] == 16953);
    CHECK(sc_v[27][2] == 21313);
    CHECK(sc_v[28][0] == 14921);
    CHECK(sc_v[28][1] == 21313);
    CHECK(sc_v[28][2] == 21402);

    t = m.tuple_from_id(PV, 2778);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 29);
    CHECK(sc_v[0][0] == 2310);
    CHECK(sc_v[1][0] == 2442);
    CHECK(sc_v[2][0] == 2642);
    CHECK(sc_v[3][0] == 2643);
    CHECK(sc_v[4][0] == 2644);
    CHECK(sc_v[5][0] == 2777);
    CHECK(sc_v[6][0] == 2778);
    CHECK(sc_v[7][0] == 2780);
    CHECK(sc_v[8][0] == 2310);
    CHECK(sc_v[8][1] == 2442);
    CHECK(sc_v[9][0] == 2310);
    CHECK(sc_v[9][1] == 2778);
    CHECK(sc_v[10][0] == 2310);
    CHECK(sc_v[10][1] == 2780);
    CHECK(sc_v[11][0] == 2442);
    CHECK(sc_v[11][1] == 2777);
    CHECK(sc_v[12][0] == 2442);
    CHECK(sc_v[12][1] == 2778);
    CHECK(sc_v[13][0] == 2642);
    CHECK(sc_v[13][1] == 2643);
    CHECK(sc_v[14][0] == 2642);
    CHECK(sc_v[14][1] == 2777);
    CHECK(sc_v[15][0] == 2642);
    CHECK(sc_v[15][1] == 2778);
    CHECK(sc_v[16][0] == 2643);
    CHECK(sc_v[16][1] == 2644);
    CHECK(sc_v[17][0] == 2643);
    CHECK(sc_v[17][1] == 2778);
    CHECK(sc_v[18][0] == 2644);
    CHECK(sc_v[18][1] == 2778);
    CHECK(sc_v[19][0] == 2644);
    CHECK(sc_v[19][1] == 2780);
    CHECK(sc_v[20][0] == 2777);
    CHECK(sc_v[20][1] == 2778);
    CHECK(sc_v[21][0] == 2778);
    CHECK(sc_v[21][1] == 2780);
    CHECK(sc_v[22][0] == 2310);
    CHECK(sc_v[22][1] == 2442);
    CHECK(sc_v[22][2] == 2778);
    CHECK(sc_v[23][0] == 2310);
    CHECK(sc_v[23][1] == 2778);
    CHECK(sc_v[23][2] == 2780);
    CHECK(sc_v[24][0] == 2442);
    CHECK(sc_v[24][1] == 2777);
    CHECK(sc_v[24][2] == 2778);
    CHECK(sc_v[25][0] == 2642);
    CHECK(sc_v[25][1] == 2643);
    CHECK(sc_v[25][2] == 2778);
    CHECK(sc_v[26][0] == 2642);
    CHECK(sc_v[26][1] == 2777);
    CHECK(sc_v[26][2] == 2778);
    CHECK(sc_v[27][0] == 2643);
    CHECK(sc_v[27][1] == 2644);
    CHECK(sc_v[27][2] == 2778);
    CHECK(sc_v[28][0] == 2644);
    CHECK(sc_v[28][1] == 2778);
    CHECK(sc_v[28][2] == 2780);

    t = m.tuple_from_id(PV, 34038);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 33902);
    CHECK(sc_v[1][0] == 33903);
    CHECK(sc_v[2][0] == 33904);
    CHECK(sc_v[3][0] == 34037);
    CHECK(sc_v[4][0] == 34038);
    CHECK(sc_v[5][0] == 33902);
    CHECK(sc_v[5][1] == 33903);
    CHECK(sc_v[6][0] == 33902);
    CHECK(sc_v[6][1] == 34037);
    CHECK(sc_v[7][0] == 33902);
    CHECK(sc_v[7][1] == 34038);
    CHECK(sc_v[8][0] == 33903);
    CHECK(sc_v[8][1] == 33904);
    CHECK(sc_v[9][0] == 33903);
    CHECK(sc_v[9][1] == 34038);
    CHECK(sc_v[10][0] == 33904);
    CHECK(sc_v[10][1] == 34038);
    CHECK(sc_v[11][0] == 34037);
    CHECK(sc_v[11][1] == 34038);
    CHECK(sc_v[12][0] == 33902);
    CHECK(sc_v[12][1] == 33903);
    CHECK(sc_v[12][2] == 34038);
    CHECK(sc_v[13][0] == 33902);
    CHECK(sc_v[13][1] == 34037);
    CHECK(sc_v[13][2] == 34038);
    CHECK(sc_v[14][0] == 33903);
    CHECK(sc_v[14][1] == 33904);
    CHECK(sc_v[14][2] == 34038);

    t = m.tuple_from_id(PV, 34699);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 34570);
    CHECK(sc_v[1][0] == 34571);
    CHECK(sc_v[2][0] == 34698);
    CHECK(sc_v[3][0] == 34699);
    CHECK(sc_v[4][0] == 34700);
    CHECK(sc_v[5][0] == 34570);
    CHECK(sc_v[5][1] == 34571);
    CHECK(sc_v[6][0] == 34570);
    CHECK(sc_v[6][1] == 34698);
    CHECK(sc_v[7][0] == 34570);
    CHECK(sc_v[7][1] == 34699);
    CHECK(sc_v[8][0] == 34571);
    CHECK(sc_v[8][1] == 34699);
    CHECK(sc_v[9][0] == 34571);
    CHECK(sc_v[9][1] == 34700);
    CHECK(sc_v[10][0] == 34698);
    CHECK(sc_v[10][1] == 34699);
    CHECK(sc_v[11][0] == 34699);
    CHECK(sc_v[11][1] == 34700);
    CHECK(sc_v[12][0] == 34570);
    CHECK(sc_v[12][1] == 34571);
    CHECK(sc_v[12][2] == 34699);
    CHECK(sc_v[13][0] == 34570);
    CHECK(sc_v[13][1] == 34698);
    CHECK(sc_v[13][2] == 34699);
    CHECK(sc_v[14][0] == 34571);
    CHECK(sc_v[14][1] == 34699);
    CHECK(sc_v[14][2] == 34700);

    t = m.tuple_from_id(PV, 34694);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 34565);
    CHECK(sc_v[1][0] == 34566);
    CHECK(sc_v[2][0] == 34693);
    CHECK(sc_v[3][0] == 34694);
    CHECK(sc_v[4][0] == 34695);
    CHECK(sc_v[5][0] == 34565);
    CHECK(sc_v[5][1] == 34566);
    CHECK(sc_v[6][0] == 34565);
    CHECK(sc_v[6][1] == 34693);
    CHECK(sc_v[7][0] == 34565);
    CHECK(sc_v[7][1] == 34694);
    CHECK(sc_v[8][0] == 34566);
    CHECK(sc_v[8][1] == 34694);
    CHECK(sc_v[9][0] == 34566);
    CHECK(sc_v[9][1] == 34695);
    CHECK(sc_v[10][0] == 34693);
    CHECK(sc_v[10][1] == 34694);
    CHECK(sc_v[11][0] == 34694);
    CHECK(sc_v[11][1] == 34695);
    CHECK(sc_v[12][0] == 34565);
    CHECK(sc_v[12][1] == 34566);
    CHECK(sc_v[12][2] == 34694);
    CHECK(sc_v[13][0] == 34565);
    CHECK(sc_v[13][1] == 34693);
    CHECK(sc_v[13][2] == 34694);
    CHECK(sc_v[14][0] == 34566);
    CHECK(sc_v[14][1] == 34694);
    CHECK(sc_v[14][2] == 34695);

    t = m.edge_tuple_from_vids(17593,17594);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 17500);
    CHECK(sc_e[1][0] == 17593);
    CHECK(sc_e[2][0] == 17594);
    CHECK(sc_e[3][0] == 17688);
    CHECK(sc_e[4][0] == 17500);
    CHECK(sc_e[4][1] == 17593);
    CHECK(sc_e[5][0] == 17500);
    CHECK(sc_e[5][1] == 17594);
    CHECK(sc_e[6][0] == 17593);
    CHECK(sc_e[6][1] == 17594);
    CHECK(sc_e[7][0] == 17593);
    CHECK(sc_e[7][1] == 17688);
    CHECK(sc_e[8][0] == 17594);
    CHECK(sc_e[8][1] == 17688);
    CHECK(sc_e[9][0] == 17500);
    CHECK(sc_e[9][1] == 17593);
    CHECK(sc_e[9][2] == 17594);
    CHECK(sc_e[10][0] == 17593);
    CHECK(sc_e[10][1] == 17594);
    CHECK(sc_e[10][2] == 17688);

    t = m.edge_tuple_from_vids(29241,29377);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 29240);
    CHECK(sc_e[1][0] == 29241);
    CHECK(sc_e[2][0] == 29377);
    CHECK(sc_e[3][0] == 29378);
    CHECK(sc_e[4][0] == 29240);
    CHECK(sc_e[4][1] == 29241);
    CHECK(sc_e[5][0] == 29240);
    CHECK(sc_e[5][1] == 29377);
    CHECK(sc_e[6][0] == 29241);
    CHECK(sc_e[6][1] == 29377);
    CHECK(sc_e[7][0] == 29241);
    CHECK(sc_e[7][1] == 29378);
    CHECK(sc_e[8][0] == 29377);
    CHECK(sc_e[8][1] == 29378);
    CHECK(sc_e[9][0] == 29240);
    CHECK(sc_e[9][1] == 29241);
    CHECK(sc_e[9][2] == 29377);
    CHECK(sc_e[10][0] == 29241);
    CHECK(sc_e[10][1] == 29377);
    CHECK(sc_e[10][2] == 29378);

    t = m.edge_tuple_from_vids(32256,32359);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 32256);
    CHECK(sc_e[1][0] == 32358);
    CHECK(sc_e[2][0] == 32359);
    CHECK(sc_e[3][0] == 32360);
    CHECK(sc_e[4][0] == 32256);
    CHECK(sc_e[4][1] == 32358);
    CHECK(sc_e[5][0] == 32256);
    CHECK(sc_e[5][1] == 32359);
    CHECK(sc_e[6][0] == 32256);
    CHECK(sc_e[6][1] == 32360);
    CHECK(sc_e[7][0] == 32358);
    CHECK(sc_e[7][1] == 32359);
    CHECK(sc_e[8][0] == 32359);
    CHECK(sc_e[8][1] == 32360);
    CHECK(sc_e[9][0] == 32256);
    CHECK(sc_e[9][1] == 32358);
    CHECK(sc_e[9][2] == 32359);
    CHECK(sc_e[10][0] == 32256);
    CHECK(sc_e[10][1] == 32359);
    CHECK(sc_e[10][2] == 32360);

    t = m.edge_tuple_from_vids(34037,34038);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 33902);
    CHECK(sc_e[1][0] == 34037);
    CHECK(sc_e[2][0] == 34038);
    CHECK(sc_e[3][0] == 33902);
    CHECK(sc_e[3][1] == 34037);
    CHECK(sc_e[4][0] == 33902);
    CHECK(sc_e[4][1] == 34038);
    CHECK(sc_e[5][0] == 34037);
    CHECK(sc_e[5][1] == 34038);
    CHECK(sc_e[6][0] == 33902);
    CHECK(sc_e[6][1] == 34037);
    CHECK(sc_e[6][2] == 34038);

    t = m.edge_tuple_from_vids(34698,34699);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 34570);
    CHECK(sc_e[1][0] == 34698);
    CHECK(sc_e[2][0] == 34699);
    CHECK(sc_e[3][0] == 34570);
    CHECK(sc_e[3][1] == 34698);
    CHECK(sc_e[4][0] == 34570);
    CHECK(sc_e[4][1] == 34699);
    CHECK(sc_e[5][0] == 34698);
    CHECK(sc_e[5][1] == 34699);
    CHECK(sc_e[6][0] == 34570);
    CHECK(sc_e[6][1] == 34698);
    CHECK(sc_e[6][2] == 34699);

    t = m.edge_tuple_from_vids(34693,34694);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 34565);
    CHECK(sc_e[1][0] == 34693);
    CHECK(sc_e[2][0] == 34694);
    CHECK(sc_e[3][0] == 34565);
    CHECK(sc_e[3][1] == 34693);
    CHECK(sc_e[4][0] == 34565);
    CHECK(sc_e[4][1] == 34694);
    CHECK(sc_e[5][0] == 34693);
    CHECK(sc_e[5][1] == 34694);
    CHECK(sc_e[6][0] == 34565);
    CHECK(sc_e[6][1] == 34693);
    CHECK(sc_e[6][2] == 34694);

    t = m.face_tuple_from_vids(1753, 2367, 13096);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1753);
    CHECK(sc_f[1][0] == 2367);
    CHECK(sc_f[2][0] == 13096);
    CHECK(sc_f[3][0] == 1753);
    CHECK(sc_f[3][1] == 2367);
    CHECK(sc_f[4][0] == 1753);
    CHECK(sc_f[4][1] == 13096);
    CHECK(sc_f[5][0] == 2367);
    CHECK(sc_f[5][1] == 13096);
    CHECK(sc_f[6][0] == 1753);
    CHECK(sc_f[6][1] == 2367);
    CHECK(sc_f[6][2] == 13096);

    t = m.face_tuple_from_vids(10570, 10571, 11386);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 10570);
    CHECK(sc_f[1][0] == 10571);
    CHECK(sc_f[2][0] == 11386);
    CHECK(sc_f[3][0] == 10570);
    CHECK(sc_f[3][1] == 10571);
    CHECK(sc_f[4][0] == 10570);
    CHECK(sc_f[4][1] == 11386);
    CHECK(sc_f[5][0] == 10571);
    CHECK(sc_f[5][1] == 11386);
    CHECK(sc_f[6][0] == 10570);
    CHECK(sc_f[6][1] == 10571);
    CHECK(sc_f[6][2] == 11386);

    t = m.face_tuple_from_vids(20852, 20932, 20933);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 20852);
    CHECK(sc_f[1][0] == 20932);
    CHECK(sc_f[2][0] == 20933);
    CHECK(sc_f[3][0] == 20852);
    CHECK(sc_f[3][1] == 20932);
    CHECK(sc_f[4][0] == 20852);
    CHECK(sc_f[4][1] == 20933);
    CHECK(sc_f[5][0] == 20932);
    CHECK(sc_f[5][1] == 20933);
    CHECK(sc_f[6][0] == 20852);
    CHECK(sc_f[6][1] == 20932);
    CHECK(sc_f[6][2] == 20933);

}
TEST_CASE("link_bunny", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 15194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 5489);
    CHECK(sc_v[1][0] == 19536);
    CHECK(sc_v[2][0] == 20778);
    CHECK(sc_v[3][0] == 21312);
    CHECK(sc_v[4][0] == 21661);
    CHECK(sc_v[5][0] == 21662);
    CHECK(sc_v[6][0] == 5489);
    CHECK(sc_v[6][1] == 21312);
    CHECK(sc_v[7][0] == 5489);
    CHECK(sc_v[7][1] == 21662);
    CHECK(sc_v[8][0] == 19536);
    CHECK(sc_v[8][1] == 20778);
    CHECK(sc_v[9][0] == 19536);
    CHECK(sc_v[9][1] == 21312);
    CHECK(sc_v[10][0] == 20778);
    CHECK(sc_v[10][1] == 21661);
    CHECK(sc_v[11][0] == 21661);
    CHECK(sc_v[11][1] == 21662);

    t = m.tuple_from_id(PV, 14921);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 14);
    CHECK(sc_v[0][0] == 3612);
    CHECK(sc_v[1][0] == 14393);
    CHECK(sc_v[2][0] == 15481);
    CHECK(sc_v[3][0] == 16330);
    CHECK(sc_v[4][0] == 16953);
    CHECK(sc_v[5][0] == 21313);
    CHECK(sc_v[6][0] == 21402);
    CHECK(sc_v[7][0] == 3612);
    CHECK(sc_v[7][1] == 14393);
    CHECK(sc_v[8][0] == 3612);
    CHECK(sc_v[8][1] == 16953);
    CHECK(sc_v[9][0] == 14393);
    CHECK(sc_v[9][1] == 16330);
    CHECK(sc_v[10][0] == 15481);
    CHECK(sc_v[10][1] == 16330);
    CHECK(sc_v[11][0] == 15481);
    CHECK(sc_v[11][1] == 21402);
    CHECK(sc_v[12][0] == 16953);
    CHECK(sc_v[12][1] == 21313);
    CHECK(sc_v[13][0] == 21313);
    CHECK(sc_v[13][1] == 21402);

    t = m.tuple_from_id(PV, 2778);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 14);
    CHECK(sc_v[0][0] == 2310);
    CHECK(sc_v[1][0] == 2442);
    CHECK(sc_v[2][0] == 2642);
    CHECK(sc_v[3][0] == 2643);
    CHECK(sc_v[4][0] == 2644);
    CHECK(sc_v[5][0] == 2777);
    CHECK(sc_v[6][0] == 2780);
    CHECK(sc_v[7][0] == 2310);
    CHECK(sc_v[7][1] == 2442);
    CHECK(sc_v[8][0] == 2310);
    CHECK(sc_v[8][1] == 2780);
    CHECK(sc_v[9][0] == 2442);
    CHECK(sc_v[9][1] == 2777);
    CHECK(sc_v[10][0] == 2642);
    CHECK(sc_v[10][1] == 2643);
    CHECK(sc_v[11][0] == 2642);
    CHECK(sc_v[11][1] == 2777);
    CHECK(sc_v[12][0] == 2643);
    CHECK(sc_v[12][1] == 2644);
    CHECK(sc_v[13][0] == 2644);
    CHECK(sc_v[13][1] == 2780);

    t = m.tuple_from_id(PV, 34038);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 33902);
    CHECK(sc_v[1][0] == 33903);
    CHECK(sc_v[2][0] == 33904);
    CHECK(sc_v[3][0] == 34037);
    CHECK(sc_v[4][0] == 33902);
    CHECK(sc_v[4][1] == 33903);
    CHECK(sc_v[5][0] == 33902);
    CHECK(sc_v[5][1] == 34037);
    CHECK(sc_v[6][0] == 33903);
    CHECK(sc_v[6][1] == 33904);

    t = m.tuple_from_id(PV, 34699);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 34570);
    CHECK(sc_v[1][0] == 34571);
    CHECK(sc_v[2][0] == 34698);
    CHECK(sc_v[3][0] == 34700);
    CHECK(sc_v[4][0] == 34570);
    CHECK(sc_v[4][1] == 34571);
    CHECK(sc_v[5][0] == 34570);
    CHECK(sc_v[5][1] == 34698);
    CHECK(sc_v[6][0] == 34571);
    CHECK(sc_v[6][1] == 34700);

    t = m.tuple_from_id(PV, 34694);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 34565);
    CHECK(sc_v[1][0] == 34566);
    CHECK(sc_v[2][0] == 34693);
    CHECK(sc_v[3][0] == 34695);
    CHECK(sc_v[4][0] == 34565);
    CHECK(sc_v[4][1] == 34566);
    CHECK(sc_v[5][0] == 34565);
    CHECK(sc_v[5][1] == 34693);
    CHECK(sc_v[6][0] == 34566);
    CHECK(sc_v[6][1] == 34695);

    t = m.edge_tuple_from_vids(17593,17594);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 17500);
    CHECK(sc_e[1][0] == 17688);

    t = m.edge_tuple_from_vids(29241,29377);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 29240);
    CHECK(sc_e[1][0] == 29378);

    t = m.edge_tuple_from_vids(32256,32359);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 32358);
    CHECK(sc_e[1][0] == 32360);

    t = m.edge_tuple_from_vids(34037,34038);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 33902);

    t = m.edge_tuple_from_vids(34698,34699);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 34570);

    t = m.edge_tuple_from_vids(34693,34694);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 34565);

    t = m.face_tuple_from_vids(1753, 2367, 13096);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(10570, 10571, 11386);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(20852, 20932, 20933);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_bunny", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 15194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 15194);

    t = m.tuple_from_id(PV, 14921);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 14921);

    t = m.tuple_from_id(PV, 2778);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 2778);

    t = m.tuple_from_id(PV, 34038);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 34038);

    t = m.tuple_from_id(PV, 34699);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 34699);

    t = m.tuple_from_id(PV, 34694);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 34694);

    t = m.edge_tuple_from_vids(17593,17594);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 17593);
    CHECK(sc_e[1][0] == 17594);
    CHECK(sc_e[2][0] == 17593);
    CHECK(sc_e[2][1] == 17594);

    t = m.edge_tuple_from_vids(29241,29377);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 29241);
    CHECK(sc_e[1][0] == 29377);
    CHECK(sc_e[2][0] == 29241);
    CHECK(sc_e[2][1] == 29377);

    t = m.edge_tuple_from_vids(32256,32359);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 32256);
    CHECK(sc_e[1][0] == 32359);
    CHECK(sc_e[2][0] == 32256);
    CHECK(sc_e[2][1] == 32359);

    t = m.edge_tuple_from_vids(34037,34038);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 34037);
    CHECK(sc_e[1][0] == 34038);
    CHECK(sc_e[2][0] == 34037);
    CHECK(sc_e[2][1] == 34038);

    t = m.edge_tuple_from_vids(34698,34699);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 34698);
    CHECK(sc_e[1][0] == 34699);
    CHECK(sc_e[2][0] == 34698);
    CHECK(sc_e[2][1] == 34699);

    t = m.edge_tuple_from_vids(34693,34694);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 34693);
    CHECK(sc_e[1][0] == 34694);
    CHECK(sc_e[2][0] == 34693);
    CHECK(sc_e[2][1] == 34694);

    t = m.face_tuple_from_vids(1753, 2367, 13096);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1753);
    CHECK(sc_f[1][0] == 2367);
    CHECK(sc_f[2][0] == 13096);
    CHECK(sc_f[3][0] == 1753);
    CHECK(sc_f[3][1] == 2367);
    CHECK(sc_f[4][0] == 1753);
    CHECK(sc_f[4][1] == 13096);
    CHECK(sc_f[5][0] == 2367);
    CHECK(sc_f[5][1] == 13096);
    CHECK(sc_f[6][0] == 1753);
    CHECK(sc_f[6][1] == 2367);
    CHECK(sc_f[6][2] == 13096);

    t = m.face_tuple_from_vids(10570, 10571, 11386);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 10570);
    CHECK(sc_f[1][0] == 10571);
    CHECK(sc_f[2][0] == 11386);
    CHECK(sc_f[3][0] == 10570);
    CHECK(sc_f[3][1] == 10571);
    CHECK(sc_f[4][0] == 10570);
    CHECK(sc_f[4][1] == 11386);
    CHECK(sc_f[5][0] == 10571);
    CHECK(sc_f[5][1] == 11386);
    CHECK(sc_f[6][0] == 10570);
    CHECK(sc_f[6][1] == 10571);
    CHECK(sc_f[6][2] == 11386);

    t = m.face_tuple_from_vids(20852, 20932, 20933);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 20852);
    CHECK(sc_f[1][0] == 20932);
    CHECK(sc_f[2][0] == 20933);
    CHECK(sc_f[3][0] == 20852);
    CHECK(sc_f[3][1] == 20932);
    CHECK(sc_f[4][0] == 20852);
    CHECK(sc_f[4][1] == 20933);
    CHECK(sc_f[5][0] == 20932);
    CHECK(sc_f[5][1] == 20933);
    CHECK(sc_f[6][0] == 20852);
    CHECK(sc_f[6][1] == 20932);
    CHECK(sc_f[6][2] == 20933);

}
TEST_CASE("top_coface_simplex_bunny", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 15194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 5489);
    CHECK(sc_v[0][1] == 15194);
    CHECK(sc_v[0][2] == 21312);
    CHECK(sc_v[1][0] == 5489);
    CHECK(sc_v[1][1] == 15194);
    CHECK(sc_v[1][2] == 21662);
    CHECK(sc_v[2][0] == 15194);
    CHECK(sc_v[2][1] == 19536);
    CHECK(sc_v[2][2] == 20778);
    CHECK(sc_v[3][0] == 15194);
    CHECK(sc_v[3][1] == 19536);
    CHECK(sc_v[3][2] == 21312);
    CHECK(sc_v[4][0] == 15194);
    CHECK(sc_v[4][1] == 20778);
    CHECK(sc_v[4][2] == 21661);
    CHECK(sc_v[5][0] == 15194);
    CHECK(sc_v[5][1] == 21661);
    CHECK(sc_v[5][2] == 21662);

    t = m.tuple_from_id(PV, 14921);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 3612);
    CHECK(sc_v[0][1] == 14393);
    CHECK(sc_v[0][2] == 14921);
    CHECK(sc_v[1][0] == 3612);
    CHECK(sc_v[1][1] == 14921);
    CHECK(sc_v[1][2] == 16953);
    CHECK(sc_v[2][0] == 14393);
    CHECK(sc_v[2][1] == 14921);
    CHECK(sc_v[2][2] == 16330);
    CHECK(sc_v[3][0] == 14921);
    CHECK(sc_v[3][1] == 15481);
    CHECK(sc_v[3][2] == 16330);
    CHECK(sc_v[4][0] == 14921);
    CHECK(sc_v[4][1] == 15481);
    CHECK(sc_v[4][2] == 21402);
    CHECK(sc_v[5][0] == 14921);
    CHECK(sc_v[5][1] == 16953);
    CHECK(sc_v[5][2] == 21313);
    CHECK(sc_v[6][0] == 14921);
    CHECK(sc_v[6][1] == 21313);
    CHECK(sc_v[6][2] == 21402);

    t = m.tuple_from_id(PV, 2778);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 2310);
    CHECK(sc_v[0][1] == 2442);
    CHECK(sc_v[0][2] == 2778);
    CHECK(sc_v[1][0] == 2310);
    CHECK(sc_v[1][1] == 2778);
    CHECK(sc_v[1][2] == 2780);
    CHECK(sc_v[2][0] == 2442);
    CHECK(sc_v[2][1] == 2777);
    CHECK(sc_v[2][2] == 2778);
    CHECK(sc_v[3][0] == 2642);
    CHECK(sc_v[3][1] == 2643);
    CHECK(sc_v[3][2] == 2778);
    CHECK(sc_v[4][0] == 2642);
    CHECK(sc_v[4][1] == 2777);
    CHECK(sc_v[4][2] == 2778);
    CHECK(sc_v[5][0] == 2643);
    CHECK(sc_v[5][1] == 2644);
    CHECK(sc_v[5][2] == 2778);
    CHECK(sc_v[6][0] == 2644);
    CHECK(sc_v[6][1] == 2778);
    CHECK(sc_v[6][2] == 2780);

    t = m.tuple_from_id(PV, 34038);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 33902);
    CHECK(sc_v[0][1] == 33903);
    CHECK(sc_v[0][2] == 34038);
    CHECK(sc_v[1][0] == 33902);
    CHECK(sc_v[1][1] == 34037);
    CHECK(sc_v[1][2] == 34038);
    CHECK(sc_v[2][0] == 33903);
    CHECK(sc_v[2][1] == 33904);
    CHECK(sc_v[2][2] == 34038);

    t = m.tuple_from_id(PV, 34699);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 34570);
    CHECK(sc_v[0][1] == 34571);
    CHECK(sc_v[0][2] == 34699);
    CHECK(sc_v[1][0] == 34570);
    CHECK(sc_v[1][1] == 34698);
    CHECK(sc_v[1][2] == 34699);
    CHECK(sc_v[2][0] == 34571);
    CHECK(sc_v[2][1] == 34699);
    CHECK(sc_v[2][2] == 34700);

    t = m.tuple_from_id(PV, 34694);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 34565);
    CHECK(sc_v[0][1] == 34566);
    CHECK(sc_v[0][2] == 34694);
    CHECK(sc_v[1][0] == 34565);
    CHECK(sc_v[1][1] == 34693);
    CHECK(sc_v[1][2] == 34694);
    CHECK(sc_v[2][0] == 34566);
    CHECK(sc_v[2][1] == 34694);
    CHECK(sc_v[2][2] == 34695);

    t = m.edge_tuple_from_vids(17593,17594);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 17500);
    CHECK(sc_e[0][1] == 17593);
    CHECK(sc_e[0][2] == 17594);
    CHECK(sc_e[1][0] == 17593);
    CHECK(sc_e[1][1] == 17594);
    CHECK(sc_e[1][2] == 17688);

    t = m.edge_tuple_from_vids(29241,29377);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 29240);
    CHECK(sc_e[0][1] == 29241);
    CHECK(sc_e[0][2] == 29377);
    CHECK(sc_e[1][0] == 29241);
    CHECK(sc_e[1][1] == 29377);
    CHECK(sc_e[1][2] == 29378);

    t = m.edge_tuple_from_vids(32256,32359);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 32256);
    CHECK(sc_e[0][1] == 32358);
    CHECK(sc_e[0][2] == 32359);
    CHECK(sc_e[1][0] == 32256);
    CHECK(sc_e[1][1] == 32359);
    CHECK(sc_e[1][2] == 32360);

    t = m.edge_tuple_from_vids(34037,34038);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 33902);
    CHECK(sc_e[0][1] == 34037);
    CHECK(sc_e[0][2] == 34038);

    t = m.edge_tuple_from_vids(34698,34699);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 34570);
    CHECK(sc_e[0][1] == 34698);
    CHECK(sc_e[0][2] == 34699);

    t = m.edge_tuple_from_vids(34693,34694);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 34565);
    CHECK(sc_e[0][1] == 34693);
    CHECK(sc_e[0][2] == 34694);

    t = m.face_tuple_from_vids(1753, 2367, 13096);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1753);
    CHECK(sc_f[0][1] == 2367);
    CHECK(sc_f[0][2] == 13096);

    t = m.face_tuple_from_vids(10570, 10571, 11386);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 10570);
    CHECK(sc_f[0][1] == 10571);
    CHECK(sc_f[0][2] == 11386);

    t = m.face_tuple_from_vids(20852, 20932, 20933);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 20852);
    CHECK(sc_f[0][1] == 20932);
    CHECK(sc_f[0][2] == 20933);

}
TEST_CASE("open_star_Octocat", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 2399);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 2399);
    CHECK(sc_v[1][0] == 2361);
    CHECK(sc_v[1][1] == 2399);
    CHECK(sc_v[2][0] == 2362);
    CHECK(sc_v[2][1] == 2399);
    CHECK(sc_v[3][0] == 2399);
    CHECK(sc_v[3][1] == 2400);
    CHECK(sc_v[4][0] == 2399);
    CHECK(sc_v[4][1] == 2425);
    CHECK(sc_v[5][0] == 2399);
    CHECK(sc_v[5][1] == 2426);
    CHECK(sc_v[6][0] == 2399);
    CHECK(sc_v[6][1] == 2438);
    CHECK(sc_v[7][0] == 2361);
    CHECK(sc_v[7][1] == 2362);
    CHECK(sc_v[7][2] == 2399);
    CHECK(sc_v[8][0] == 2361);
    CHECK(sc_v[8][1] == 2399);
    CHECK(sc_v[8][2] == 2425);
    CHECK(sc_v[9][0] == 2362);
    CHECK(sc_v[9][1] == 2399);
    CHECK(sc_v[9][2] == 2400);
    CHECK(sc_v[10][0] == 2399);
    CHECK(sc_v[10][1] == 2400);
    CHECK(sc_v[10][2] == 2426);
    CHECK(sc_v[11][0] == 2399);
    CHECK(sc_v[11][1] == 2425);
    CHECK(sc_v[11][2] == 2438);
    CHECK(sc_v[12][0] == 2399);
    CHECK(sc_v[12][1] == 2426);
    CHECK(sc_v[12][2] == 2438);

    t = m.tuple_from_id(PV, 11024);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 11024);
    CHECK(sc_v[1][0] == 10544);
    CHECK(sc_v[1][1] == 11024);
    CHECK(sc_v[2][0] == 11023);
    CHECK(sc_v[2][1] == 11024);
    CHECK(sc_v[3][0] == 11024);
    CHECK(sc_v[3][1] == 11025);
    CHECK(sc_v[4][0] == 11024);
    CHECK(sc_v[4][1] == 11164);
    CHECK(sc_v[5][0] == 11024);
    CHECK(sc_v[5][1] == 11165);
    CHECK(sc_v[6][0] == 11024);
    CHECK(sc_v[6][1] == 11166);
    CHECK(sc_v[7][0] == 10544);
    CHECK(sc_v[7][1] == 11023);
    CHECK(sc_v[7][2] == 11024);
    CHECK(sc_v[8][0] == 10544);
    CHECK(sc_v[8][1] == 11024);
    CHECK(sc_v[8][2] == 11025);
    CHECK(sc_v[9][0] == 11023);
    CHECK(sc_v[9][1] == 11024);
    CHECK(sc_v[9][2] == 11164);
    CHECK(sc_v[10][0] == 11024);
    CHECK(sc_v[10][1] == 11025);
    CHECK(sc_v[10][2] == 11166);
    CHECK(sc_v[11][0] == 11024);
    CHECK(sc_v[11][1] == 11164);
    CHECK(sc_v[11][2] == 11165);
    CHECK(sc_v[12][0] == 11024);
    CHECK(sc_v[12][1] == 11165);
    CHECK(sc_v[12][2] == 11166);

    t = m.tuple_from_id(PV, 17832);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 17832);
    CHECK(sc_v[1][0] == 17794);
    CHECK(sc_v[1][1] == 17832);
    CHECK(sc_v[2][0] == 17831);
    CHECK(sc_v[2][1] == 17832);
    CHECK(sc_v[3][0] == 17832);
    CHECK(sc_v[3][1] == 17833);
    CHECK(sc_v[4][0] == 17832);
    CHECK(sc_v[4][1] == 18063);
    CHECK(sc_v[5][0] == 17832);
    CHECK(sc_v[5][1] == 18064);
    CHECK(sc_v[6][0] == 17832);
    CHECK(sc_v[6][1] == 18065);
    CHECK(sc_v[7][0] == 17794);
    CHECK(sc_v[7][1] == 17831);
    CHECK(sc_v[7][2] == 17832);
    CHECK(sc_v[8][0] == 17794);
    CHECK(sc_v[8][1] == 17832);
    CHECK(sc_v[8][2] == 17833);
    CHECK(sc_v[9][0] == 17831);
    CHECK(sc_v[9][1] == 17832);
    CHECK(sc_v[9][2] == 18063);
    CHECK(sc_v[10][0] == 17832);
    CHECK(sc_v[10][1] == 17833);
    CHECK(sc_v[10][2] == 18065);
    CHECK(sc_v[11][0] == 17832);
    CHECK(sc_v[11][1] == 18063);
    CHECK(sc_v[11][2] == 18064);
    CHECK(sc_v[12][0] == 17832);
    CHECK(sc_v[12][1] == 18064);
    CHECK(sc_v[12][2] == 18065);

    t = m.edge_tuple_from_vids(5306,5391);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 5306);
    CHECK(sc_e[0][1] == 5391);
    CHECK(sc_e[1][0] == 5305);
    CHECK(sc_e[1][1] == 5306);
    CHECK(sc_e[1][2] == 5391);
    CHECK(sc_e[2][0] == 5306);
    CHECK(sc_e[2][1] == 5391);
    CHECK(sc_e[2][2] == 5392);

    t = m.edge_tuple_from_vids(5815,5869);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 5815);
    CHECK(sc_e[0][1] == 5869);
    CHECK(sc_e[1][0] == 5815);
    CHECK(sc_e[1][1] == 5816);
    CHECK(sc_e[1][2] == 5869);
    CHECK(sc_e[2][0] == 5815);
    CHECK(sc_e[2][1] == 5869);
    CHECK(sc_e[2][2] == 5870);

    t = m.edge_tuple_from_vids(4357,4437);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 4357);
    CHECK(sc_e[0][1] == 4437);
    CHECK(sc_e[1][0] == 4357);
    CHECK(sc_e[1][1] == 4380);
    CHECK(sc_e[1][2] == 4437);
    CHECK(sc_e[2][0] == 4357);
    CHECK(sc_e[2][1] == 4381);
    CHECK(sc_e[2][2] == 4437);

    t = m.face_tuple_from_vids(9252, 9292, 9355);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 9252);
    CHECK(sc_f[0][1] == 9292);
    CHECK(sc_f[0][2] == 9355);

    t = m.face_tuple_from_vids(2025, 2063, 2108);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2025);
    CHECK(sc_f[0][1] == 2063);
    CHECK(sc_f[0][2] == 2108);

    t = m.face_tuple_from_vids(7896, 7912, 7913);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 7896);
    CHECK(sc_f[0][1] == 7912);
    CHECK(sc_f[0][2] == 7913);

}
TEST_CASE("closed_star_Octocat", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 2399);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 2361);
    CHECK(sc_v[1][0] == 2362);
    CHECK(sc_v[2][0] == 2399);
    CHECK(sc_v[3][0] == 2400);
    CHECK(sc_v[4][0] == 2425);
    CHECK(sc_v[5][0] == 2426);
    CHECK(sc_v[6][0] == 2438);
    CHECK(sc_v[7][0] == 2361);
    CHECK(sc_v[7][1] == 2362);
    CHECK(sc_v[8][0] == 2361);
    CHECK(sc_v[8][1] == 2399);
    CHECK(sc_v[9][0] == 2361);
    CHECK(sc_v[9][1] == 2425);
    CHECK(sc_v[10][0] == 2362);
    CHECK(sc_v[10][1] == 2399);
    CHECK(sc_v[11][0] == 2362);
    CHECK(sc_v[11][1] == 2400);
    CHECK(sc_v[12][0] == 2399);
    CHECK(sc_v[12][1] == 2400);
    CHECK(sc_v[13][0] == 2399);
    CHECK(sc_v[13][1] == 2425);
    CHECK(sc_v[14][0] == 2399);
    CHECK(sc_v[14][1] == 2426);
    CHECK(sc_v[15][0] == 2399);
    CHECK(sc_v[15][1] == 2438);
    CHECK(sc_v[16][0] == 2400);
    CHECK(sc_v[16][1] == 2426);
    CHECK(sc_v[17][0] == 2425);
    CHECK(sc_v[17][1] == 2438);
    CHECK(sc_v[18][0] == 2426);
    CHECK(sc_v[18][1] == 2438);
    CHECK(sc_v[19][0] == 2361);
    CHECK(sc_v[19][1] == 2362);
    CHECK(sc_v[19][2] == 2399);
    CHECK(sc_v[20][0] == 2361);
    CHECK(sc_v[20][1] == 2399);
    CHECK(sc_v[20][2] == 2425);
    CHECK(sc_v[21][0] == 2362);
    CHECK(sc_v[21][1] == 2399);
    CHECK(sc_v[21][2] == 2400);
    CHECK(sc_v[22][0] == 2399);
    CHECK(sc_v[22][1] == 2400);
    CHECK(sc_v[22][2] == 2426);
    CHECK(sc_v[23][0] == 2399);
    CHECK(sc_v[23][1] == 2425);
    CHECK(sc_v[23][2] == 2438);
    CHECK(sc_v[24][0] == 2399);
    CHECK(sc_v[24][1] == 2426);
    CHECK(sc_v[24][2] == 2438);

    t = m.tuple_from_id(PV, 11024);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 10544);
    CHECK(sc_v[1][0] == 11023);
    CHECK(sc_v[2][0] == 11024);
    CHECK(sc_v[3][0] == 11025);
    CHECK(sc_v[4][0] == 11164);
    CHECK(sc_v[5][0] == 11165);
    CHECK(sc_v[6][0] == 11166);
    CHECK(sc_v[7][0] == 10544);
    CHECK(sc_v[7][1] == 11023);
    CHECK(sc_v[8][0] == 10544);
    CHECK(sc_v[8][1] == 11024);
    CHECK(sc_v[9][0] == 10544);
    CHECK(sc_v[9][1] == 11025);
    CHECK(sc_v[10][0] == 11023);
    CHECK(sc_v[10][1] == 11024);
    CHECK(sc_v[11][0] == 11023);
    CHECK(sc_v[11][1] == 11164);
    CHECK(sc_v[12][0] == 11024);
    CHECK(sc_v[12][1] == 11025);
    CHECK(sc_v[13][0] == 11024);
    CHECK(sc_v[13][1] == 11164);
    CHECK(sc_v[14][0] == 11024);
    CHECK(sc_v[14][1] == 11165);
    CHECK(sc_v[15][0] == 11024);
    CHECK(sc_v[15][1] == 11166);
    CHECK(sc_v[16][0] == 11025);
    CHECK(sc_v[16][1] == 11166);
    CHECK(sc_v[17][0] == 11164);
    CHECK(sc_v[17][1] == 11165);
    CHECK(sc_v[18][0] == 11165);
    CHECK(sc_v[18][1] == 11166);
    CHECK(sc_v[19][0] == 10544);
    CHECK(sc_v[19][1] == 11023);
    CHECK(sc_v[19][2] == 11024);
    CHECK(sc_v[20][0] == 10544);
    CHECK(sc_v[20][1] == 11024);
    CHECK(sc_v[20][2] == 11025);
    CHECK(sc_v[21][0] == 11023);
    CHECK(sc_v[21][1] == 11024);
    CHECK(sc_v[21][2] == 11164);
    CHECK(sc_v[22][0] == 11024);
    CHECK(sc_v[22][1] == 11025);
    CHECK(sc_v[22][2] == 11166);
    CHECK(sc_v[23][0] == 11024);
    CHECK(sc_v[23][1] == 11164);
    CHECK(sc_v[23][2] == 11165);
    CHECK(sc_v[24][0] == 11024);
    CHECK(sc_v[24][1] == 11165);
    CHECK(sc_v[24][2] == 11166);

    t = m.tuple_from_id(PV, 17832);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 17794);
    CHECK(sc_v[1][0] == 17831);
    CHECK(sc_v[2][0] == 17832);
    CHECK(sc_v[3][0] == 17833);
    CHECK(sc_v[4][0] == 18063);
    CHECK(sc_v[5][0] == 18064);
    CHECK(sc_v[6][0] == 18065);
    CHECK(sc_v[7][0] == 17794);
    CHECK(sc_v[7][1] == 17831);
    CHECK(sc_v[8][0] == 17794);
    CHECK(sc_v[8][1] == 17832);
    CHECK(sc_v[9][0] == 17794);
    CHECK(sc_v[9][1] == 17833);
    CHECK(sc_v[10][0] == 17831);
    CHECK(sc_v[10][1] == 17832);
    CHECK(sc_v[11][0] == 17831);
    CHECK(sc_v[11][1] == 18063);
    CHECK(sc_v[12][0] == 17832);
    CHECK(sc_v[12][1] == 17833);
    CHECK(sc_v[13][0] == 17832);
    CHECK(sc_v[13][1] == 18063);
    CHECK(sc_v[14][0] == 17832);
    CHECK(sc_v[14][1] == 18064);
    CHECK(sc_v[15][0] == 17832);
    CHECK(sc_v[15][1] == 18065);
    CHECK(sc_v[16][0] == 17833);
    CHECK(sc_v[16][1] == 18065);
    CHECK(sc_v[17][0] == 18063);
    CHECK(sc_v[17][1] == 18064);
    CHECK(sc_v[18][0] == 18064);
    CHECK(sc_v[18][1] == 18065);
    CHECK(sc_v[19][0] == 17794);
    CHECK(sc_v[19][1] == 17831);
    CHECK(sc_v[19][2] == 17832);
    CHECK(sc_v[20][0] == 17794);
    CHECK(sc_v[20][1] == 17832);
    CHECK(sc_v[20][2] == 17833);
    CHECK(sc_v[21][0] == 17831);
    CHECK(sc_v[21][1] == 17832);
    CHECK(sc_v[21][2] == 18063);
    CHECK(sc_v[22][0] == 17832);
    CHECK(sc_v[22][1] == 17833);
    CHECK(sc_v[22][2] == 18065);
    CHECK(sc_v[23][0] == 17832);
    CHECK(sc_v[23][1] == 18063);
    CHECK(sc_v[23][2] == 18064);
    CHECK(sc_v[24][0] == 17832);
    CHECK(sc_v[24][1] == 18064);
    CHECK(sc_v[24][2] == 18065);

    t = m.edge_tuple_from_vids(5306,5391);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 5305);
    CHECK(sc_e[1][0] == 5306);
    CHECK(sc_e[2][0] == 5391);
    CHECK(sc_e[3][0] == 5392);
    CHECK(sc_e[4][0] == 5305);
    CHECK(sc_e[4][1] == 5306);
    CHECK(sc_e[5][0] == 5305);
    CHECK(sc_e[5][1] == 5391);
    CHECK(sc_e[6][0] == 5306);
    CHECK(sc_e[6][1] == 5391);
    CHECK(sc_e[7][0] == 5306);
    CHECK(sc_e[7][1] == 5392);
    CHECK(sc_e[8][0] == 5391);
    CHECK(sc_e[8][1] == 5392);
    CHECK(sc_e[9][0] == 5305);
    CHECK(sc_e[9][1] == 5306);
    CHECK(sc_e[9][2] == 5391);
    CHECK(sc_e[10][0] == 5306);
    CHECK(sc_e[10][1] == 5391);
    CHECK(sc_e[10][2] == 5392);

    t = m.edge_tuple_from_vids(5815,5869);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 5815);
    CHECK(sc_e[1][0] == 5816);
    CHECK(sc_e[2][0] == 5869);
    CHECK(sc_e[3][0] == 5870);
    CHECK(sc_e[4][0] == 5815);
    CHECK(sc_e[4][1] == 5816);
    CHECK(sc_e[5][0] == 5815);
    CHECK(sc_e[5][1] == 5869);
    CHECK(sc_e[6][0] == 5815);
    CHECK(sc_e[6][1] == 5870);
    CHECK(sc_e[7][0] == 5816);
    CHECK(sc_e[7][1] == 5869);
    CHECK(sc_e[8][0] == 5869);
    CHECK(sc_e[8][1] == 5870);
    CHECK(sc_e[9][0] == 5815);
    CHECK(sc_e[9][1] == 5816);
    CHECK(sc_e[9][2] == 5869);
    CHECK(sc_e[10][0] == 5815);
    CHECK(sc_e[10][1] == 5869);
    CHECK(sc_e[10][2] == 5870);

    t = m.edge_tuple_from_vids(4357,4437);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 4357);
    CHECK(sc_e[1][0] == 4380);
    CHECK(sc_e[2][0] == 4381);
    CHECK(sc_e[3][0] == 4437);
    CHECK(sc_e[4][0] == 4357);
    CHECK(sc_e[4][1] == 4380);
    CHECK(sc_e[5][0] == 4357);
    CHECK(sc_e[5][1] == 4381);
    CHECK(sc_e[6][0] == 4357);
    CHECK(sc_e[6][1] == 4437);
    CHECK(sc_e[7][0] == 4380);
    CHECK(sc_e[7][1] == 4437);
    CHECK(sc_e[8][0] == 4381);
    CHECK(sc_e[8][1] == 4437);
    CHECK(sc_e[9][0] == 4357);
    CHECK(sc_e[9][1] == 4380);
    CHECK(sc_e[9][2] == 4437);
    CHECK(sc_e[10][0] == 4357);
    CHECK(sc_e[10][1] == 4381);
    CHECK(sc_e[10][2] == 4437);

    t = m.face_tuple_from_vids(9252, 9292, 9355);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 9252);
    CHECK(sc_f[1][0] == 9292);
    CHECK(sc_f[2][0] == 9355);
    CHECK(sc_f[3][0] == 9252);
    CHECK(sc_f[3][1] == 9292);
    CHECK(sc_f[4][0] == 9252);
    CHECK(sc_f[4][1] == 9355);
    CHECK(sc_f[5][0] == 9292);
    CHECK(sc_f[5][1] == 9355);
    CHECK(sc_f[6][0] == 9252);
    CHECK(sc_f[6][1] == 9292);
    CHECK(sc_f[6][2] == 9355);

    t = m.face_tuple_from_vids(2025, 2063, 2108);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2025);
    CHECK(sc_f[1][0] == 2063);
    CHECK(sc_f[2][0] == 2108);
    CHECK(sc_f[3][0] == 2025);
    CHECK(sc_f[3][1] == 2063);
    CHECK(sc_f[4][0] == 2025);
    CHECK(sc_f[4][1] == 2108);
    CHECK(sc_f[5][0] == 2063);
    CHECK(sc_f[5][1] == 2108);
    CHECK(sc_f[6][0] == 2025);
    CHECK(sc_f[6][1] == 2063);
    CHECK(sc_f[6][2] == 2108);

    t = m.face_tuple_from_vids(7896, 7912, 7913);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 7896);
    CHECK(sc_f[1][0] == 7912);
    CHECK(sc_f[2][0] == 7913);
    CHECK(sc_f[3][0] == 7896);
    CHECK(sc_f[3][1] == 7912);
    CHECK(sc_f[4][0] == 7896);
    CHECK(sc_f[4][1] == 7913);
    CHECK(sc_f[5][0] == 7912);
    CHECK(sc_f[5][1] == 7913);
    CHECK(sc_f[6][0] == 7896);
    CHECK(sc_f[6][1] == 7912);
    CHECK(sc_f[6][2] == 7913);

}
TEST_CASE("link_Octocat", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 2399);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 2361);
    CHECK(sc_v[1][0] == 2362);
    CHECK(sc_v[2][0] == 2400);
    CHECK(sc_v[3][0] == 2425);
    CHECK(sc_v[4][0] == 2426);
    CHECK(sc_v[5][0] == 2438);
    CHECK(sc_v[6][0] == 2361);
    CHECK(sc_v[6][1] == 2362);
    CHECK(sc_v[7][0] == 2361);
    CHECK(sc_v[7][1] == 2425);
    CHECK(sc_v[8][0] == 2362);
    CHECK(sc_v[8][1] == 2400);
    CHECK(sc_v[9][0] == 2400);
    CHECK(sc_v[9][1] == 2426);
    CHECK(sc_v[10][0] == 2425);
    CHECK(sc_v[10][1] == 2438);
    CHECK(sc_v[11][0] == 2426);
    CHECK(sc_v[11][1] == 2438);

    t = m.tuple_from_id(PV, 11024);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 10544);
    CHECK(sc_v[1][0] == 11023);
    CHECK(sc_v[2][0] == 11025);
    CHECK(sc_v[3][0] == 11164);
    CHECK(sc_v[4][0] == 11165);
    CHECK(sc_v[5][0] == 11166);
    CHECK(sc_v[6][0] == 10544);
    CHECK(sc_v[6][1] == 11023);
    CHECK(sc_v[7][0] == 10544);
    CHECK(sc_v[7][1] == 11025);
    CHECK(sc_v[8][0] == 11023);
    CHECK(sc_v[8][1] == 11164);
    CHECK(sc_v[9][0] == 11025);
    CHECK(sc_v[9][1] == 11166);
    CHECK(sc_v[10][0] == 11164);
    CHECK(sc_v[10][1] == 11165);
    CHECK(sc_v[11][0] == 11165);
    CHECK(sc_v[11][1] == 11166);

    t = m.tuple_from_id(PV, 17832);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 17794);
    CHECK(sc_v[1][0] == 17831);
    CHECK(sc_v[2][0] == 17833);
    CHECK(sc_v[3][0] == 18063);
    CHECK(sc_v[4][0] == 18064);
    CHECK(sc_v[5][0] == 18065);
    CHECK(sc_v[6][0] == 17794);
    CHECK(sc_v[6][1] == 17831);
    CHECK(sc_v[7][0] == 17794);
    CHECK(sc_v[7][1] == 17833);
    CHECK(sc_v[8][0] == 17831);
    CHECK(sc_v[8][1] == 18063);
    CHECK(sc_v[9][0] == 17833);
    CHECK(sc_v[9][1] == 18065);
    CHECK(sc_v[10][0] == 18063);
    CHECK(sc_v[10][1] == 18064);
    CHECK(sc_v[11][0] == 18064);
    CHECK(sc_v[11][1] == 18065);

    t = m.edge_tuple_from_vids(5306,5391);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 5305);
    CHECK(sc_e[1][0] == 5392);

    t = m.edge_tuple_from_vids(5815,5869);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 5816);
    CHECK(sc_e[1][0] == 5870);

    t = m.edge_tuple_from_vids(4357,4437);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 4380);
    CHECK(sc_e[1][0] == 4381);

    t = m.face_tuple_from_vids(9252, 9292, 9355);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(2025, 2063, 2108);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(7896, 7912, 7913);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_Octocat", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 2399);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 2399);

    t = m.tuple_from_id(PV, 11024);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 11024);

    t = m.tuple_from_id(PV, 17832);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 17832);

    t = m.edge_tuple_from_vids(5306,5391);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 5306);
    CHECK(sc_e[1][0] == 5391);
    CHECK(sc_e[2][0] == 5306);
    CHECK(sc_e[2][1] == 5391);

    t = m.edge_tuple_from_vids(5815,5869);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 5815);
    CHECK(sc_e[1][0] == 5869);
    CHECK(sc_e[2][0] == 5815);
    CHECK(sc_e[2][1] == 5869);

    t = m.edge_tuple_from_vids(4357,4437);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 4357);
    CHECK(sc_e[1][0] == 4437);
    CHECK(sc_e[2][0] == 4357);
    CHECK(sc_e[2][1] == 4437);

    t = m.face_tuple_from_vids(9252, 9292, 9355);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 9252);
    CHECK(sc_f[1][0] == 9292);
    CHECK(sc_f[2][0] == 9355);
    CHECK(sc_f[3][0] == 9252);
    CHECK(sc_f[3][1] == 9292);
    CHECK(sc_f[4][0] == 9252);
    CHECK(sc_f[4][1] == 9355);
    CHECK(sc_f[5][0] == 9292);
    CHECK(sc_f[5][1] == 9355);
    CHECK(sc_f[6][0] == 9252);
    CHECK(sc_f[6][1] == 9292);
    CHECK(sc_f[6][2] == 9355);

    t = m.face_tuple_from_vids(2025, 2063, 2108);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2025);
    CHECK(sc_f[1][0] == 2063);
    CHECK(sc_f[2][0] == 2108);
    CHECK(sc_f[3][0] == 2025);
    CHECK(sc_f[3][1] == 2063);
    CHECK(sc_f[4][0] == 2025);
    CHECK(sc_f[4][1] == 2108);
    CHECK(sc_f[5][0] == 2063);
    CHECK(sc_f[5][1] == 2108);
    CHECK(sc_f[6][0] == 2025);
    CHECK(sc_f[6][1] == 2063);
    CHECK(sc_f[6][2] == 2108);

    t = m.face_tuple_from_vids(7896, 7912, 7913);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 7896);
    CHECK(sc_f[1][0] == 7912);
    CHECK(sc_f[2][0] == 7913);
    CHECK(sc_f[3][0] == 7896);
    CHECK(sc_f[3][1] == 7912);
    CHECK(sc_f[4][0] == 7896);
    CHECK(sc_f[4][1] == 7913);
    CHECK(sc_f[5][0] == 7912);
    CHECK(sc_f[5][1] == 7913);
    CHECK(sc_f[6][0] == 7896);
    CHECK(sc_f[6][1] == 7912);
    CHECK(sc_f[6][2] == 7913);

}
TEST_CASE("top_coface_simplex_Octocat", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 2399);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 2361);
    CHECK(sc_v[0][1] == 2362);
    CHECK(sc_v[0][2] == 2399);
    CHECK(sc_v[1][0] == 2361);
    CHECK(sc_v[1][1] == 2399);
    CHECK(sc_v[1][2] == 2425);
    CHECK(sc_v[2][0] == 2362);
    CHECK(sc_v[2][1] == 2399);
    CHECK(sc_v[2][2] == 2400);
    CHECK(sc_v[3][0] == 2399);
    CHECK(sc_v[3][1] == 2400);
    CHECK(sc_v[3][2] == 2426);
    CHECK(sc_v[4][0] == 2399);
    CHECK(sc_v[4][1] == 2425);
    CHECK(sc_v[4][2] == 2438);
    CHECK(sc_v[5][0] == 2399);
    CHECK(sc_v[5][1] == 2426);
    CHECK(sc_v[5][2] == 2438);

    t = m.tuple_from_id(PV, 11024);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 10544);
    CHECK(sc_v[0][1] == 11023);
    CHECK(sc_v[0][2] == 11024);
    CHECK(sc_v[1][0] == 10544);
    CHECK(sc_v[1][1] == 11024);
    CHECK(sc_v[1][2] == 11025);
    CHECK(sc_v[2][0] == 11023);
    CHECK(sc_v[2][1] == 11024);
    CHECK(sc_v[2][2] == 11164);
    CHECK(sc_v[3][0] == 11024);
    CHECK(sc_v[3][1] == 11025);
    CHECK(sc_v[3][2] == 11166);
    CHECK(sc_v[4][0] == 11024);
    CHECK(sc_v[4][1] == 11164);
    CHECK(sc_v[4][2] == 11165);
    CHECK(sc_v[5][0] == 11024);
    CHECK(sc_v[5][1] == 11165);
    CHECK(sc_v[5][2] == 11166);

    t = m.tuple_from_id(PV, 17832);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 17794);
    CHECK(sc_v[0][1] == 17831);
    CHECK(sc_v[0][2] == 17832);
    CHECK(sc_v[1][0] == 17794);
    CHECK(sc_v[1][1] == 17832);
    CHECK(sc_v[1][2] == 17833);
    CHECK(sc_v[2][0] == 17831);
    CHECK(sc_v[2][1] == 17832);
    CHECK(sc_v[2][2] == 18063);
    CHECK(sc_v[3][0] == 17832);
    CHECK(sc_v[3][1] == 17833);
    CHECK(sc_v[3][2] == 18065);
    CHECK(sc_v[4][0] == 17832);
    CHECK(sc_v[4][1] == 18063);
    CHECK(sc_v[4][2] == 18064);
    CHECK(sc_v[5][0] == 17832);
    CHECK(sc_v[5][1] == 18064);
    CHECK(sc_v[5][2] == 18065);

    t = m.edge_tuple_from_vids(5306,5391);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 5305);
    CHECK(sc_e[0][1] == 5306);
    CHECK(sc_e[0][2] == 5391);
    CHECK(sc_e[1][0] == 5306);
    CHECK(sc_e[1][1] == 5391);
    CHECK(sc_e[1][2] == 5392);

    t = m.edge_tuple_from_vids(5815,5869);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 5815);
    CHECK(sc_e[0][1] == 5816);
    CHECK(sc_e[0][2] == 5869);
    CHECK(sc_e[1][0] == 5815);
    CHECK(sc_e[1][1] == 5869);
    CHECK(sc_e[1][2] == 5870);

    t = m.edge_tuple_from_vids(4357,4437);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 4357);
    CHECK(sc_e[0][1] == 4380);
    CHECK(sc_e[0][2] == 4437);
    CHECK(sc_e[1][0] == 4357);
    CHECK(sc_e[1][1] == 4381);
    CHECK(sc_e[1][2] == 4437);

    t = m.face_tuple_from_vids(9252, 9292, 9355);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 9252);
    CHECK(sc_f[0][1] == 9292);
    CHECK(sc_f[0][2] == 9355);

    t = m.face_tuple_from_vids(2025, 2063, 2108);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2025);
    CHECK(sc_f[0][1] == 2063);
    CHECK(sc_f[0][2] == 2108);

    t = m.face_tuple_from_vids(7896, 7912, 7913);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 7896);
    CHECK(sc_f[0][1] == 7912);
    CHECK(sc_f[0][2] == 7913);

}
