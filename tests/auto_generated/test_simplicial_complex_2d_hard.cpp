
    #include <catch2/catch_test_macros.hpp>
    #include <wmtk/SimplicialComplex.hpp>
    #include <wmtk/TetMesh.hpp>
    #include <wmtk/TriMesh.hpp>
    #include "../tools/DEBUG_TriMesh.hpp"
    #include <igl/read_triangle_mesh.h>

    using namespace wmtk;

    constexpr PrimitiveType PV = PrimitiveType::Vertex;
    constexpr PrimitiveType PE = PrimitiveType::Edge;
    constexpr PrimitiveType PF = PrimitiveType::Face;
    constexpr PrimitiveType PT = PrimitiveType::Tetrahedron;
    TEST_CASE("open_star_circle_0", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 954);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 954);
    CHECK(sc_v[1][0] == 947);
    CHECK(sc_v[1][1] == 954);
    CHECK(sc_v[2][0] == 948);
    CHECK(sc_v[2][1] == 954);
    CHECK(sc_v[3][0] == 953);
    CHECK(sc_v[3][1] == 954);
    CHECK(sc_v[4][0] == 954);
    CHECK(sc_v[4][1] == 955);
    CHECK(sc_v[5][0] == 954);
    CHECK(sc_v[5][1] == 961);
    CHECK(sc_v[6][0] == 954);
    CHECK(sc_v[6][1] == 962);
    CHECK(sc_v[7][0] == 947);
    CHECK(sc_v[7][1] == 948);
    CHECK(sc_v[7][2] == 954);
    CHECK(sc_v[8][0] == 947);
    CHECK(sc_v[8][1] == 953);
    CHECK(sc_v[8][2] == 954);
    CHECK(sc_v[9][0] == 953);
    CHECK(sc_v[9][1] == 954);
    CHECK(sc_v[9][2] == 961);
    CHECK(sc_v[10][0] == 954);
    CHECK(sc_v[10][1] == 955);
    CHECK(sc_v[10][2] == 962);
    CHECK(sc_v[11][0] == 954);
    CHECK(sc_v[11][1] == 961);
    CHECK(sc_v[11][2] == 962);

    t = m.tuple_from_id(PV, 777);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 777);
    CHECK(sc_v[1][0] == 764);
    CHECK(sc_v[1][1] == 777);
    CHECK(sc_v[2][0] == 765);
    CHECK(sc_v[2][1] == 777);
    CHECK(sc_v[3][0] == 776);
    CHECK(sc_v[3][1] == 777);
    CHECK(sc_v[4][0] == 777);
    CHECK(sc_v[4][1] == 778);
    CHECK(sc_v[5][0] == 777);
    CHECK(sc_v[5][1] == 791);
    CHECK(sc_v[6][0] == 764);
    CHECK(sc_v[6][1] == 765);
    CHECK(sc_v[6][2] == 777);
    CHECK(sc_v[7][0] == 764);
    CHECK(sc_v[7][1] == 776);
    CHECK(sc_v[7][2] == 777);
    CHECK(sc_v[8][0] == 765);
    CHECK(sc_v[8][1] == 777);
    CHECK(sc_v[8][2] == 778);
    CHECK(sc_v[9][0] == 777);
    CHECK(sc_v[9][1] == 778);
    CHECK(sc_v[9][2] == 791);

    t = m.tuple_from_id(PV, 2309);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 2309);
    CHECK(sc_v[1][0] == 2295);
    CHECK(sc_v[1][1] == 2309);
    CHECK(sc_v[2][0] == 2309);
    CHECK(sc_v[2][1] == 2310);
    CHECK(sc_v[3][0] == 2309);
    CHECK(sc_v[3][1] == 2324);
    CHECK(sc_v[4][0] == 2309);
    CHECK(sc_v[4][1] == 2325);
    CHECK(sc_v[5][0] == 2295);
    CHECK(sc_v[5][1] == 2309);
    CHECK(sc_v[5][2] == 2310);
    CHECK(sc_v[6][0] == 2309);
    CHECK(sc_v[6][1] == 2310);
    CHECK(sc_v[6][2] == 2325);
    CHECK(sc_v[7][0] == 2309);
    CHECK(sc_v[7][1] == 2324);
    CHECK(sc_v[7][2] == 2325);

    t = m.tuple_from_id(PV, 398);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 398);
    CHECK(sc_v[1][0] == 397);
    CHECK(sc_v[1][1] == 398);
    CHECK(sc_v[2][0] == 398);
    CHECK(sc_v[2][1] == 399);
    CHECK(sc_v[3][0] == 398);
    CHECK(sc_v[3][1] == 3458);
    CHECK(sc_v[4][0] == 398);
    CHECK(sc_v[4][1] == 3478);
    CHECK(sc_v[5][0] == 398);
    CHECK(sc_v[5][1] == 3938);
    CHECK(sc_v[6][0] == 398);
    CHECK(sc_v[6][1] == 3959);
    CHECK(sc_v[7][0] == 397);
    CHECK(sc_v[7][1] == 398);
    CHECK(sc_v[7][2] == 3938);
    CHECK(sc_v[8][0] == 398);
    CHECK(sc_v[8][1] == 399);
    CHECK(sc_v[8][2] == 3478);
    CHECK(sc_v[9][0] == 398);
    CHECK(sc_v[9][1] == 399);
    CHECK(sc_v[9][2] == 3959);
    CHECK(sc_v[10][0] == 398);
    CHECK(sc_v[10][1] == 3458);
    CHECK(sc_v[10][2] == 3478);
    CHECK(sc_v[11][0] == 398);
    CHECK(sc_v[11][1] == 3938);
    CHECK(sc_v[11][2] == 3959);

    t = m.tuple_from_id(PV, 4197);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 4197);
    CHECK(sc_v[1][0] == 442);
    CHECK(sc_v[1][1] == 4197);
    CHECK(sc_v[2][0] == 443);
    CHECK(sc_v[2][1] == 4197);
    CHECK(sc_v[3][0] == 4195);
    CHECK(sc_v[3][1] == 4197);
    CHECK(sc_v[4][0] == 4197);
    CHECK(sc_v[4][1] == 4198);
    CHECK(sc_v[5][0] == 442);
    CHECK(sc_v[5][1] == 443);
    CHECK(sc_v[5][2] == 4197);
    CHECK(sc_v[6][0] == 442);
    CHECK(sc_v[6][1] == 4195);
    CHECK(sc_v[6][2] == 4197);
    CHECK(sc_v[7][0] == 4195);
    CHECK(sc_v[7][1] == 4197);
    CHECK(sc_v[7][2] == 4198);

    t = m.edge_tuple_from_vids(973,982);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 973);
    CHECK(sc_e[0][1] == 982);
    CHECK(sc_e[1][0] == 972);
    CHECK(sc_e[1][1] == 973);
    CHECK(sc_e[1][2] == 982);

    t = m.edge_tuple_from_vids(1606,1621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1606);
    CHECK(sc_e[0][1] == 1621);
    CHECK(sc_e[1][0] == 1605);
    CHECK(sc_e[1][1] == 1606);
    CHECK(sc_e[1][2] == 1621);

    t = m.edge_tuple_from_vids(4395,4416);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 4395);
    CHECK(sc_e[0][1] == 4416);
    CHECK(sc_e[1][0] == 4395);
    CHECK(sc_e[1][1] == 4415);
    CHECK(sc_e[1][2] == 4416);

    t = m.edge_tuple_from_vids(1704,1720);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 1704);
    CHECK(sc_e[0][1] == 1720);
    CHECK(sc_e[1][0] == 1704);
    CHECK(sc_e[1][1] == 1705);
    CHECK(sc_e[1][2] == 1720);
    CHECK(sc_e[2][0] == 1704);
    CHECK(sc_e[2][1] == 1719);
    CHECK(sc_e[2][2] == 1720);

    t = m.edge_tuple_from_vids(4658,4663);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 4658);
    CHECK(sc_e[0][1] == 4663);
    CHECK(sc_e[1][0] == 4658);
    CHECK(sc_e[1][1] == 4662);
    CHECK(sc_e[1][2] == 4663);

    t = m.face_tuple_from_vids(463, 464, 4974);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 463);
    CHECK(sc_f[0][1] == 464);
    CHECK(sc_f[0][2] == 4974);

    t = m.face_tuple_from_vids(2690, 2704, 2705);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2690);
    CHECK(sc_f[0][1] == 2704);
    CHECK(sc_f[0][2] == 2705);

    t = m.face_tuple_from_vids(1896, 1910, 1911);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1896);
    CHECK(sc_f[0][1] == 1910);
    CHECK(sc_f[0][2] == 1911);

    t = m.face_tuple_from_vids(364, 4730, 4743);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 364);
    CHECK(sc_f[0][1] == 4730);
    CHECK(sc_f[0][2] == 4743);

    t = m.face_tuple_from_vids(3646, 3647, 3675);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 3646);
    CHECK(sc_f[0][1] == 3647);
    CHECK(sc_f[0][2] == 3675);

}
TEST_CASE("closed_star_circle_0", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 954);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 947);
    CHECK(sc_v[1][0] == 948);
    CHECK(sc_v[2][0] == 953);
    CHECK(sc_v[3][0] == 954);
    CHECK(sc_v[4][0] == 955);
    CHECK(sc_v[5][0] == 961);
    CHECK(sc_v[6][0] == 962);
    CHECK(sc_v[7][0] == 947);
    CHECK(sc_v[7][1] == 948);
    CHECK(sc_v[8][0] == 947);
    CHECK(sc_v[8][1] == 953);
    CHECK(sc_v[9][0] == 947);
    CHECK(sc_v[9][1] == 954);
    CHECK(sc_v[10][0] == 948);
    CHECK(sc_v[10][1] == 954);
    CHECK(sc_v[11][0] == 953);
    CHECK(sc_v[11][1] == 954);
    CHECK(sc_v[12][0] == 953);
    CHECK(sc_v[12][1] == 961);
    CHECK(sc_v[13][0] == 954);
    CHECK(sc_v[13][1] == 955);
    CHECK(sc_v[14][0] == 954);
    CHECK(sc_v[14][1] == 961);
    CHECK(sc_v[15][0] == 954);
    CHECK(sc_v[15][1] == 962);
    CHECK(sc_v[16][0] == 955);
    CHECK(sc_v[16][1] == 962);
    CHECK(sc_v[17][0] == 961);
    CHECK(sc_v[17][1] == 962);
    CHECK(sc_v[18][0] == 947);
    CHECK(sc_v[18][1] == 948);
    CHECK(sc_v[18][2] == 954);
    CHECK(sc_v[19][0] == 947);
    CHECK(sc_v[19][1] == 953);
    CHECK(sc_v[19][2] == 954);
    CHECK(sc_v[20][0] == 953);
    CHECK(sc_v[20][1] == 954);
    CHECK(sc_v[20][2] == 961);
    CHECK(sc_v[21][0] == 954);
    CHECK(sc_v[21][1] == 955);
    CHECK(sc_v[21][2] == 962);
    CHECK(sc_v[22][0] == 954);
    CHECK(sc_v[22][1] == 961);
    CHECK(sc_v[22][2] == 962);

    t = m.tuple_from_id(PV, 777);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 19);
    CHECK(sc_v[0][0] == 764);
    CHECK(sc_v[1][0] == 765);
    CHECK(sc_v[2][0] == 776);
    CHECK(sc_v[3][0] == 777);
    CHECK(sc_v[4][0] == 778);
    CHECK(sc_v[5][0] == 791);
    CHECK(sc_v[6][0] == 764);
    CHECK(sc_v[6][1] == 765);
    CHECK(sc_v[7][0] == 764);
    CHECK(sc_v[7][1] == 776);
    CHECK(sc_v[8][0] == 764);
    CHECK(sc_v[8][1] == 777);
    CHECK(sc_v[9][0] == 765);
    CHECK(sc_v[9][1] == 777);
    CHECK(sc_v[10][0] == 765);
    CHECK(sc_v[10][1] == 778);
    CHECK(sc_v[11][0] == 776);
    CHECK(sc_v[11][1] == 777);
    CHECK(sc_v[12][0] == 777);
    CHECK(sc_v[12][1] == 778);
    CHECK(sc_v[13][0] == 777);
    CHECK(sc_v[13][1] == 791);
    CHECK(sc_v[14][0] == 778);
    CHECK(sc_v[14][1] == 791);
    CHECK(sc_v[15][0] == 764);
    CHECK(sc_v[15][1] == 765);
    CHECK(sc_v[15][2] == 777);
    CHECK(sc_v[16][0] == 764);
    CHECK(sc_v[16][1] == 776);
    CHECK(sc_v[16][2] == 777);
    CHECK(sc_v[17][0] == 765);
    CHECK(sc_v[17][1] == 777);
    CHECK(sc_v[17][2] == 778);
    CHECK(sc_v[18][0] == 777);
    CHECK(sc_v[18][1] == 778);
    CHECK(sc_v[18][2] == 791);

    t = m.tuple_from_id(PV, 2309);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 2295);
    CHECK(sc_v[1][0] == 2309);
    CHECK(sc_v[2][0] == 2310);
    CHECK(sc_v[3][0] == 2324);
    CHECK(sc_v[4][0] == 2325);
    CHECK(sc_v[5][0] == 2295);
    CHECK(sc_v[5][1] == 2309);
    CHECK(sc_v[6][0] == 2295);
    CHECK(sc_v[6][1] == 2310);
    CHECK(sc_v[7][0] == 2309);
    CHECK(sc_v[7][1] == 2310);
    CHECK(sc_v[8][0] == 2309);
    CHECK(sc_v[8][1] == 2324);
    CHECK(sc_v[9][0] == 2309);
    CHECK(sc_v[9][1] == 2325);
    CHECK(sc_v[10][0] == 2310);
    CHECK(sc_v[10][1] == 2325);
    CHECK(sc_v[11][0] == 2324);
    CHECK(sc_v[11][1] == 2325);
    CHECK(sc_v[12][0] == 2295);
    CHECK(sc_v[12][1] == 2309);
    CHECK(sc_v[12][2] == 2310);
    CHECK(sc_v[13][0] == 2309);
    CHECK(sc_v[13][1] == 2310);
    CHECK(sc_v[13][2] == 2325);
    CHECK(sc_v[14][0] == 2309);
    CHECK(sc_v[14][1] == 2324);
    CHECK(sc_v[14][2] == 2325);

    t = m.tuple_from_id(PV, 398);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 397);
    CHECK(sc_v[1][0] == 398);
    CHECK(sc_v[2][0] == 399);
    CHECK(sc_v[3][0] == 3458);
    CHECK(sc_v[4][0] == 3478);
    CHECK(sc_v[5][0] == 3938);
    CHECK(sc_v[6][0] == 3959);
    CHECK(sc_v[7][0] == 397);
    CHECK(sc_v[7][1] == 398);
    CHECK(sc_v[8][0] == 397);
    CHECK(sc_v[8][1] == 3938);
    CHECK(sc_v[9][0] == 398);
    CHECK(sc_v[9][1] == 399);
    CHECK(sc_v[10][0] == 398);
    CHECK(sc_v[10][1] == 3458);
    CHECK(sc_v[11][0] == 398);
    CHECK(sc_v[11][1] == 3478);
    CHECK(sc_v[12][0] == 398);
    CHECK(sc_v[12][1] == 3938);
    CHECK(sc_v[13][0] == 398);
    CHECK(sc_v[13][1] == 3959);
    CHECK(sc_v[14][0] == 399);
    CHECK(sc_v[14][1] == 3478);
    CHECK(sc_v[15][0] == 399);
    CHECK(sc_v[15][1] == 3959);
    CHECK(sc_v[16][0] == 3458);
    CHECK(sc_v[16][1] == 3478);
    CHECK(sc_v[17][0] == 3938);
    CHECK(sc_v[17][1] == 3959);
    CHECK(sc_v[18][0] == 397);
    CHECK(sc_v[18][1] == 398);
    CHECK(sc_v[18][2] == 3938);
    CHECK(sc_v[19][0] == 398);
    CHECK(sc_v[19][1] == 399);
    CHECK(sc_v[19][2] == 3478);
    CHECK(sc_v[20][0] == 398);
    CHECK(sc_v[20][1] == 399);
    CHECK(sc_v[20][2] == 3959);
    CHECK(sc_v[21][0] == 398);
    CHECK(sc_v[21][1] == 3458);
    CHECK(sc_v[21][2] == 3478);
    CHECK(sc_v[22][0] == 398);
    CHECK(sc_v[22][1] == 3938);
    CHECK(sc_v[22][2] == 3959);

    t = m.tuple_from_id(PV, 4197);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 442);
    CHECK(sc_v[1][0] == 443);
    CHECK(sc_v[2][0] == 4195);
    CHECK(sc_v[3][0] == 4197);
    CHECK(sc_v[4][0] == 4198);
    CHECK(sc_v[5][0] == 442);
    CHECK(sc_v[5][1] == 443);
    CHECK(sc_v[6][0] == 442);
    CHECK(sc_v[6][1] == 4195);
    CHECK(sc_v[7][0] == 442);
    CHECK(sc_v[7][1] == 4197);
    CHECK(sc_v[8][0] == 443);
    CHECK(sc_v[8][1] == 4197);
    CHECK(sc_v[9][0] == 4195);
    CHECK(sc_v[9][1] == 4197);
    CHECK(sc_v[10][0] == 4195);
    CHECK(sc_v[10][1] == 4198);
    CHECK(sc_v[11][0] == 4197);
    CHECK(sc_v[11][1] == 4198);
    CHECK(sc_v[12][0] == 442);
    CHECK(sc_v[12][1] == 443);
    CHECK(sc_v[12][2] == 4197);
    CHECK(sc_v[13][0] == 442);
    CHECK(sc_v[13][1] == 4195);
    CHECK(sc_v[13][2] == 4197);
    CHECK(sc_v[14][0] == 4195);
    CHECK(sc_v[14][1] == 4197);
    CHECK(sc_v[14][2] == 4198);

    t = m.edge_tuple_from_vids(973,982);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 972);
    CHECK(sc_e[1][0] == 973);
    CHECK(sc_e[2][0] == 982);
    CHECK(sc_e[3][0] == 972);
    CHECK(sc_e[3][1] == 973);
    CHECK(sc_e[4][0] == 972);
    CHECK(sc_e[4][1] == 982);
    CHECK(sc_e[5][0] == 973);
    CHECK(sc_e[5][1] == 982);
    CHECK(sc_e[6][0] == 972);
    CHECK(sc_e[6][1] == 973);
    CHECK(sc_e[6][2] == 982);

    t = m.edge_tuple_from_vids(1606,1621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 1605);
    CHECK(sc_e[1][0] == 1606);
    CHECK(sc_e[2][0] == 1621);
    CHECK(sc_e[3][0] == 1605);
    CHECK(sc_e[3][1] == 1606);
    CHECK(sc_e[4][0] == 1605);
    CHECK(sc_e[4][1] == 1621);
    CHECK(sc_e[5][0] == 1606);
    CHECK(sc_e[5][1] == 1621);
    CHECK(sc_e[6][0] == 1605);
    CHECK(sc_e[6][1] == 1606);
    CHECK(sc_e[6][2] == 1621);

    t = m.edge_tuple_from_vids(4395,4416);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 4395);
    CHECK(sc_e[1][0] == 4415);
    CHECK(sc_e[2][0] == 4416);
    CHECK(sc_e[3][0] == 4395);
    CHECK(sc_e[3][1] == 4415);
    CHECK(sc_e[4][0] == 4395);
    CHECK(sc_e[4][1] == 4416);
    CHECK(sc_e[5][0] == 4415);
    CHECK(sc_e[5][1] == 4416);
    CHECK(sc_e[6][0] == 4395);
    CHECK(sc_e[6][1] == 4415);
    CHECK(sc_e[6][2] == 4416);

    t = m.edge_tuple_from_vids(1704,1720);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 1704);
    CHECK(sc_e[1][0] == 1705);
    CHECK(sc_e[2][0] == 1719);
    CHECK(sc_e[3][0] == 1720);
    CHECK(sc_e[4][0] == 1704);
    CHECK(sc_e[4][1] == 1705);
    CHECK(sc_e[5][0] == 1704);
    CHECK(sc_e[5][1] == 1719);
    CHECK(sc_e[6][0] == 1704);
    CHECK(sc_e[6][1] == 1720);
    CHECK(sc_e[7][0] == 1705);
    CHECK(sc_e[7][1] == 1720);
    CHECK(sc_e[8][0] == 1719);
    CHECK(sc_e[8][1] == 1720);
    CHECK(sc_e[9][0] == 1704);
    CHECK(sc_e[9][1] == 1705);
    CHECK(sc_e[9][2] == 1720);
    CHECK(sc_e[10][0] == 1704);
    CHECK(sc_e[10][1] == 1719);
    CHECK(sc_e[10][2] == 1720);

    t = m.edge_tuple_from_vids(4658,4663);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 4658);
    CHECK(sc_e[1][0] == 4662);
    CHECK(sc_e[2][0] == 4663);
    CHECK(sc_e[3][0] == 4658);
    CHECK(sc_e[3][1] == 4662);
    CHECK(sc_e[4][0] == 4658);
    CHECK(sc_e[4][1] == 4663);
    CHECK(sc_e[5][0] == 4662);
    CHECK(sc_e[5][1] == 4663);
    CHECK(sc_e[6][0] == 4658);
    CHECK(sc_e[6][1] == 4662);
    CHECK(sc_e[6][2] == 4663);

    t = m.face_tuple_from_vids(463, 464, 4974);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 463);
    CHECK(sc_f[1][0] == 464);
    CHECK(sc_f[2][0] == 4974);
    CHECK(sc_f[3][0] == 463);
    CHECK(sc_f[3][1] == 464);
    CHECK(sc_f[4][0] == 463);
    CHECK(sc_f[4][1] == 4974);
    CHECK(sc_f[5][0] == 464);
    CHECK(sc_f[5][1] == 4974);
    CHECK(sc_f[6][0] == 463);
    CHECK(sc_f[6][1] == 464);
    CHECK(sc_f[6][2] == 4974);

    t = m.face_tuple_from_vids(2690, 2704, 2705);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2690);
    CHECK(sc_f[1][0] == 2704);
    CHECK(sc_f[2][0] == 2705);
    CHECK(sc_f[3][0] == 2690);
    CHECK(sc_f[3][1] == 2704);
    CHECK(sc_f[4][0] == 2690);
    CHECK(sc_f[4][1] == 2705);
    CHECK(sc_f[5][0] == 2704);
    CHECK(sc_f[5][1] == 2705);
    CHECK(sc_f[6][0] == 2690);
    CHECK(sc_f[6][1] == 2704);
    CHECK(sc_f[6][2] == 2705);

    t = m.face_tuple_from_vids(1896, 1910, 1911);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1896);
    CHECK(sc_f[1][0] == 1910);
    CHECK(sc_f[2][0] == 1911);
    CHECK(sc_f[3][0] == 1896);
    CHECK(sc_f[3][1] == 1910);
    CHECK(sc_f[4][0] == 1896);
    CHECK(sc_f[4][1] == 1911);
    CHECK(sc_f[5][0] == 1910);
    CHECK(sc_f[5][1] == 1911);
    CHECK(sc_f[6][0] == 1896);
    CHECK(sc_f[6][1] == 1910);
    CHECK(sc_f[6][2] == 1911);

    t = m.face_tuple_from_vids(364, 4730, 4743);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 364);
    CHECK(sc_f[1][0] == 4730);
    CHECK(sc_f[2][0] == 4743);
    CHECK(sc_f[3][0] == 364);
    CHECK(sc_f[3][1] == 4730);
    CHECK(sc_f[4][0] == 364);
    CHECK(sc_f[4][1] == 4743);
    CHECK(sc_f[5][0] == 4730);
    CHECK(sc_f[5][1] == 4743);
    CHECK(sc_f[6][0] == 364);
    CHECK(sc_f[6][1] == 4730);
    CHECK(sc_f[6][2] == 4743);

    t = m.face_tuple_from_vids(3646, 3647, 3675);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 3646);
    CHECK(sc_f[1][0] == 3647);
    CHECK(sc_f[2][0] == 3675);
    CHECK(sc_f[3][0] == 3646);
    CHECK(sc_f[3][1] == 3647);
    CHECK(sc_f[4][0] == 3646);
    CHECK(sc_f[4][1] == 3675);
    CHECK(sc_f[5][0] == 3647);
    CHECK(sc_f[5][1] == 3675);
    CHECK(sc_f[6][0] == 3646);
    CHECK(sc_f[6][1] == 3647);
    CHECK(sc_f[6][2] == 3675);

}
TEST_CASE("link_circle_0", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 954);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 947);
    CHECK(sc_v[1][0] == 948);
    CHECK(sc_v[2][0] == 953);
    CHECK(sc_v[3][0] == 955);
    CHECK(sc_v[4][0] == 961);
    CHECK(sc_v[5][0] == 962);
    CHECK(sc_v[6][0] == 947);
    CHECK(sc_v[6][1] == 948);
    CHECK(sc_v[7][0] == 947);
    CHECK(sc_v[7][1] == 953);
    CHECK(sc_v[8][0] == 953);
    CHECK(sc_v[8][1] == 961);
    CHECK(sc_v[9][0] == 955);
    CHECK(sc_v[9][1] == 962);
    CHECK(sc_v[10][0] == 961);
    CHECK(sc_v[10][1] == 962);

    t = m.tuple_from_id(PV, 777);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 9);
    CHECK(sc_v[0][0] == 764);
    CHECK(sc_v[1][0] == 765);
    CHECK(sc_v[2][0] == 776);
    CHECK(sc_v[3][0] == 778);
    CHECK(sc_v[4][0] == 791);
    CHECK(sc_v[5][0] == 764);
    CHECK(sc_v[5][1] == 765);
    CHECK(sc_v[6][0] == 764);
    CHECK(sc_v[6][1] == 776);
    CHECK(sc_v[7][0] == 765);
    CHECK(sc_v[7][1] == 778);
    CHECK(sc_v[8][0] == 778);
    CHECK(sc_v[8][1] == 791);

    t = m.tuple_from_id(PV, 2309);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 2295);
    CHECK(sc_v[1][0] == 2310);
    CHECK(sc_v[2][0] == 2324);
    CHECK(sc_v[3][0] == 2325);
    CHECK(sc_v[4][0] == 2295);
    CHECK(sc_v[4][1] == 2310);
    CHECK(sc_v[5][0] == 2310);
    CHECK(sc_v[5][1] == 2325);
    CHECK(sc_v[6][0] == 2324);
    CHECK(sc_v[6][1] == 2325);

    t = m.tuple_from_id(PV, 398);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 397);
    CHECK(sc_v[1][0] == 399);
    CHECK(sc_v[2][0] == 3458);
    CHECK(sc_v[3][0] == 3478);
    CHECK(sc_v[4][0] == 3938);
    CHECK(sc_v[5][0] == 3959);
    CHECK(sc_v[6][0] == 397);
    CHECK(sc_v[6][1] == 3938);
    CHECK(sc_v[7][0] == 399);
    CHECK(sc_v[7][1] == 3478);
    CHECK(sc_v[8][0] == 399);
    CHECK(sc_v[8][1] == 3959);
    CHECK(sc_v[9][0] == 3458);
    CHECK(sc_v[9][1] == 3478);
    CHECK(sc_v[10][0] == 3938);
    CHECK(sc_v[10][1] == 3959);

    t = m.tuple_from_id(PV, 4197);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 442);
    CHECK(sc_v[1][0] == 443);
    CHECK(sc_v[2][0] == 4195);
    CHECK(sc_v[3][0] == 4198);
    CHECK(sc_v[4][0] == 442);
    CHECK(sc_v[4][1] == 443);
    CHECK(sc_v[5][0] == 442);
    CHECK(sc_v[5][1] == 4195);
    CHECK(sc_v[6][0] == 4195);
    CHECK(sc_v[6][1] == 4198);

    t = m.edge_tuple_from_vids(973,982);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 972);

    t = m.edge_tuple_from_vids(1606,1621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 1605);

    t = m.edge_tuple_from_vids(4395,4416);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 4415);

    t = m.edge_tuple_from_vids(1704,1720);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1705);
    CHECK(sc_e[1][0] == 1719);

    t = m.edge_tuple_from_vids(4658,4663);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 4662);

    t = m.face_tuple_from_vids(463, 464, 4974);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(2690, 2704, 2705);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(1896, 1910, 1911);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(364, 4730, 4743);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(3646, 3647, 3675);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_circle_0", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 954);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 954);

    t = m.tuple_from_id(PV, 777);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 777);

    t = m.tuple_from_id(PV, 2309);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 2309);

    t = m.tuple_from_id(PV, 398);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 398);

    t = m.tuple_from_id(PV, 4197);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 4197);

    t = m.edge_tuple_from_vids(973,982);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 973);
    CHECK(sc_e[1][0] == 982);
    CHECK(sc_e[2][0] == 973);
    CHECK(sc_e[2][1] == 982);

    t = m.edge_tuple_from_vids(1606,1621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 1606);
    CHECK(sc_e[1][0] == 1621);
    CHECK(sc_e[2][0] == 1606);
    CHECK(sc_e[2][1] == 1621);

    t = m.edge_tuple_from_vids(4395,4416);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 4395);
    CHECK(sc_e[1][0] == 4416);
    CHECK(sc_e[2][0] == 4395);
    CHECK(sc_e[2][1] == 4416);

    t = m.edge_tuple_from_vids(1704,1720);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 1704);
    CHECK(sc_e[1][0] == 1720);
    CHECK(sc_e[2][0] == 1704);
    CHECK(sc_e[2][1] == 1720);

    t = m.edge_tuple_from_vids(4658,4663);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 4658);
    CHECK(sc_e[1][0] == 4663);
    CHECK(sc_e[2][0] == 4658);
    CHECK(sc_e[2][1] == 4663);

    t = m.face_tuple_from_vids(463, 464, 4974);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 463);
    CHECK(sc_f[1][0] == 464);
    CHECK(sc_f[2][0] == 4974);
    CHECK(sc_f[3][0] == 463);
    CHECK(sc_f[3][1] == 464);
    CHECK(sc_f[4][0] == 463);
    CHECK(sc_f[4][1] == 4974);
    CHECK(sc_f[5][0] == 464);
    CHECK(sc_f[5][1] == 4974);
    CHECK(sc_f[6][0] == 463);
    CHECK(sc_f[6][1] == 464);
    CHECK(sc_f[6][2] == 4974);

    t = m.face_tuple_from_vids(2690, 2704, 2705);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2690);
    CHECK(sc_f[1][0] == 2704);
    CHECK(sc_f[2][0] == 2705);
    CHECK(sc_f[3][0] == 2690);
    CHECK(sc_f[3][1] == 2704);
    CHECK(sc_f[4][0] == 2690);
    CHECK(sc_f[4][1] == 2705);
    CHECK(sc_f[5][0] == 2704);
    CHECK(sc_f[5][1] == 2705);
    CHECK(sc_f[6][0] == 2690);
    CHECK(sc_f[6][1] == 2704);
    CHECK(sc_f[6][2] == 2705);

    t = m.face_tuple_from_vids(1896, 1910, 1911);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1896);
    CHECK(sc_f[1][0] == 1910);
    CHECK(sc_f[2][0] == 1911);
    CHECK(sc_f[3][0] == 1896);
    CHECK(sc_f[3][1] == 1910);
    CHECK(sc_f[4][0] == 1896);
    CHECK(sc_f[4][1] == 1911);
    CHECK(sc_f[5][0] == 1910);
    CHECK(sc_f[5][1] == 1911);
    CHECK(sc_f[6][0] == 1896);
    CHECK(sc_f[6][1] == 1910);
    CHECK(sc_f[6][2] == 1911);

    t = m.face_tuple_from_vids(364, 4730, 4743);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 364);
    CHECK(sc_f[1][0] == 4730);
    CHECK(sc_f[2][0] == 4743);
    CHECK(sc_f[3][0] == 364);
    CHECK(sc_f[3][1] == 4730);
    CHECK(sc_f[4][0] == 364);
    CHECK(sc_f[4][1] == 4743);
    CHECK(sc_f[5][0] == 4730);
    CHECK(sc_f[5][1] == 4743);
    CHECK(sc_f[6][0] == 364);
    CHECK(sc_f[6][1] == 4730);
    CHECK(sc_f[6][2] == 4743);

    t = m.face_tuple_from_vids(3646, 3647, 3675);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 3646);
    CHECK(sc_f[1][0] == 3647);
    CHECK(sc_f[2][0] == 3675);
    CHECK(sc_f[3][0] == 3646);
    CHECK(sc_f[3][1] == 3647);
    CHECK(sc_f[4][0] == 3646);
    CHECK(sc_f[4][1] == 3675);
    CHECK(sc_f[5][0] == 3647);
    CHECK(sc_f[5][1] == 3675);
    CHECK(sc_f[6][0] == 3646);
    CHECK(sc_f[6][1] == 3647);
    CHECK(sc_f[6][2] == 3675);

}
TEST_CASE("top_coface_simplex_circle_0", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 954);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 947);
    CHECK(sc_v[0][1] == 948);
    CHECK(sc_v[0][2] == 954);
    CHECK(sc_v[1][0] == 947);
    CHECK(sc_v[1][1] == 953);
    CHECK(sc_v[1][2] == 954);
    CHECK(sc_v[2][0] == 953);
    CHECK(sc_v[2][1] == 954);
    CHECK(sc_v[2][2] == 961);
    CHECK(sc_v[3][0] == 954);
    CHECK(sc_v[3][1] == 955);
    CHECK(sc_v[3][2] == 962);
    CHECK(sc_v[4][0] == 954);
    CHECK(sc_v[4][1] == 961);
    CHECK(sc_v[4][2] == 962);

    t = m.tuple_from_id(PV, 777);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 4);
    CHECK(sc_v[0][0] == 764);
    CHECK(sc_v[0][1] == 765);
    CHECK(sc_v[0][2] == 777);
    CHECK(sc_v[1][0] == 764);
    CHECK(sc_v[1][1] == 776);
    CHECK(sc_v[1][2] == 777);
    CHECK(sc_v[2][0] == 765);
    CHECK(sc_v[2][1] == 777);
    CHECK(sc_v[2][2] == 778);
    CHECK(sc_v[3][0] == 777);
    CHECK(sc_v[3][1] == 778);
    CHECK(sc_v[3][2] == 791);

    t = m.tuple_from_id(PV, 2309);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 2295);
    CHECK(sc_v[0][1] == 2309);
    CHECK(sc_v[0][2] == 2310);
    CHECK(sc_v[1][0] == 2309);
    CHECK(sc_v[1][1] == 2310);
    CHECK(sc_v[1][2] == 2325);
    CHECK(sc_v[2][0] == 2309);
    CHECK(sc_v[2][1] == 2324);
    CHECK(sc_v[2][2] == 2325);

    t = m.tuple_from_id(PV, 398);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 397);
    CHECK(sc_v[0][1] == 398);
    CHECK(sc_v[0][2] == 3938);
    CHECK(sc_v[1][0] == 398);
    CHECK(sc_v[1][1] == 399);
    CHECK(sc_v[1][2] == 3478);
    CHECK(sc_v[2][0] == 398);
    CHECK(sc_v[2][1] == 399);
    CHECK(sc_v[2][2] == 3959);
    CHECK(sc_v[3][0] == 398);
    CHECK(sc_v[3][1] == 3458);
    CHECK(sc_v[3][2] == 3478);
    CHECK(sc_v[4][0] == 398);
    CHECK(sc_v[4][1] == 3938);
    CHECK(sc_v[4][2] == 3959);

    t = m.tuple_from_id(PV, 4197);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 442);
    CHECK(sc_v[0][1] == 443);
    CHECK(sc_v[0][2] == 4197);
    CHECK(sc_v[1][0] == 442);
    CHECK(sc_v[1][1] == 4195);
    CHECK(sc_v[1][2] == 4197);
    CHECK(sc_v[2][0] == 4195);
    CHECK(sc_v[2][1] == 4197);
    CHECK(sc_v[2][2] == 4198);

    t = m.edge_tuple_from_vids(973,982);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 972);
    CHECK(sc_e[0][1] == 973);
    CHECK(sc_e[0][2] == 982);

    t = m.edge_tuple_from_vids(1606,1621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 1605);
    CHECK(sc_e[0][1] == 1606);
    CHECK(sc_e[0][2] == 1621);

    t = m.edge_tuple_from_vids(4395,4416);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 4395);
    CHECK(sc_e[0][1] == 4415);
    CHECK(sc_e[0][2] == 4416);

    t = m.edge_tuple_from_vids(1704,1720);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1704);
    CHECK(sc_e[0][1] == 1705);
    CHECK(sc_e[0][2] == 1720);
    CHECK(sc_e[1][0] == 1704);
    CHECK(sc_e[1][1] == 1719);
    CHECK(sc_e[1][2] == 1720);

    t = m.edge_tuple_from_vids(4658,4663);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 4658);
    CHECK(sc_e[0][1] == 4662);
    CHECK(sc_e[0][2] == 4663);

    t = m.face_tuple_from_vids(463, 464, 4974);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 463);
    CHECK(sc_f[0][1] == 464);
    CHECK(sc_f[0][2] == 4974);

    t = m.face_tuple_from_vids(2690, 2704, 2705);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2690);
    CHECK(sc_f[0][1] == 2704);
    CHECK(sc_f[0][2] == 2705);

    t = m.face_tuple_from_vids(1896, 1910, 1911);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1896);
    CHECK(sc_f[0][1] == 1910);
    CHECK(sc_f[0][2] == 1911);

    t = m.face_tuple_from_vids(364, 4730, 4743);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 364);
    CHECK(sc_f[0][1] == 4730);
    CHECK(sc_f[0][2] == 4743);

    t = m.face_tuple_from_vids(3646, 3647, 3675);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 3646);
    CHECK(sc_f[0][1] == 3647);
    CHECK(sc_f[0][2] == 3675);

}
TEST_CASE("open_star_bunny_0", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 14139);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 14139);
    CHECK(sc_v[1][0] == 14138);
    CHECK(sc_v[1][1] == 14139);
    CHECK(sc_v[2][0] == 14139);
    CHECK(sc_v[2][1] == 14147);
    CHECK(sc_v[3][0] == 14139);
    CHECK(sc_v[3][1] == 15571);
    CHECK(sc_v[4][0] == 14139);
    CHECK(sc_v[4][1] == 15574);
    CHECK(sc_v[5][0] == 14139);
    CHECK(sc_v[5][1] == 15582);
    CHECK(sc_v[6][0] == 14138);
    CHECK(sc_v[6][1] == 14139);
    CHECK(sc_v[6][2] == 15571);
    CHECK(sc_v[7][0] == 14139);
    CHECK(sc_v[7][1] == 14147);
    CHECK(sc_v[7][2] == 15582);
    CHECK(sc_v[8][0] == 14139);
    CHECK(sc_v[8][1] == 15571);
    CHECK(sc_v[8][2] == 15574);
    CHECK(sc_v[9][0] == 14139);
    CHECK(sc_v[9][1] == 15574);
    CHECK(sc_v[9][2] == 15582);

    t = m.tuple_from_id(PV, 8146);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 8146);
    CHECK(sc_v[1][0] == 6891);
    CHECK(sc_v[1][1] == 8146);
    CHECK(sc_v[2][0] == 7138);
    CHECK(sc_v[2][1] == 8146);
    CHECK(sc_v[3][0] == 7757);
    CHECK(sc_v[3][1] == 8146);
    CHECK(sc_v[4][0] == 7793);
    CHECK(sc_v[4][1] == 8146);
    CHECK(sc_v[5][0] == 8146);
    CHECK(sc_v[5][1] == 8673);
    CHECK(sc_v[6][0] == 6891);
    CHECK(sc_v[6][1] == 7757);
    CHECK(sc_v[6][2] == 8146);
    CHECK(sc_v[7][0] == 6891);
    CHECK(sc_v[7][1] == 8146);
    CHECK(sc_v[7][2] == 8673);
    CHECK(sc_v[8][0] == 7138);
    CHECK(sc_v[8][1] == 7757);
    CHECK(sc_v[8][2] == 8146);
    CHECK(sc_v[9][0] == 7138);
    CHECK(sc_v[9][1] == 7793);
    CHECK(sc_v[9][2] == 8146);

    t = m.tuple_from_id(PV, 25194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 25194);
    CHECK(sc_v[1][0] == 2775);
    CHECK(sc_v[1][1] == 25194);
    CHECK(sc_v[2][0] == 16857);
    CHECK(sc_v[2][1] == 25194);
    CHECK(sc_v[3][0] == 25194);
    CHECK(sc_v[3][1] == 26566);
    CHECK(sc_v[4][0] == 25194);
    CHECK(sc_v[4][1] == 27834);
    CHECK(sc_v[5][0] == 25194);
    CHECK(sc_v[5][1] == 29003);
    CHECK(sc_v[6][0] == 25194);
    CHECK(sc_v[6][1] == 29446);
    CHECK(sc_v[7][0] == 2775);
    CHECK(sc_v[7][1] == 25194);
    CHECK(sc_v[7][2] == 26566);
    CHECK(sc_v[8][0] == 16857);
    CHECK(sc_v[8][1] == 25194);
    CHECK(sc_v[8][2] == 27834);
    CHECK(sc_v[9][0] == 16857);
    CHECK(sc_v[9][1] == 25194);
    CHECK(sc_v[9][2] == 29003);
    CHECK(sc_v[10][0] == 25194);
    CHECK(sc_v[10][1] == 26566);
    CHECK(sc_v[10][2] == 29446);
    CHECK(sc_v[11][0] == 25194);
    CHECK(sc_v[11][1] == 29003);
    CHECK(sc_v[11][2] == 29446);

    t = m.tuple_from_id(PV, 1795);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 1795);
    CHECK(sc_v[1][0] == 1686);
    CHECK(sc_v[1][1] == 1795);
    CHECK(sc_v[2][0] == 1687);
    CHECK(sc_v[2][1] == 1795);
    CHECK(sc_v[3][0] == 1794);
    CHECK(sc_v[3][1] == 1795);
    CHECK(sc_v[4][0] == 1795);
    CHECK(sc_v[4][1] == 1796);
    CHECK(sc_v[5][0] == 1795);
    CHECK(sc_v[5][1] == 1915);
    CHECK(sc_v[6][0] == 1795);
    CHECK(sc_v[6][1] == 1916);
    CHECK(sc_v[7][0] == 1686);
    CHECK(sc_v[7][1] == 1687);
    CHECK(sc_v[7][2] == 1795);
    CHECK(sc_v[8][0] == 1687);
    CHECK(sc_v[8][1] == 1795);
    CHECK(sc_v[8][2] == 1796);
    CHECK(sc_v[9][0] == 1794);
    CHECK(sc_v[9][1] == 1795);
    CHECK(sc_v[9][2] == 1915);
    CHECK(sc_v[10][0] == 1795);
    CHECK(sc_v[10][1] == 1796);
    CHECK(sc_v[10][2] == 1916);
    CHECK(sc_v[11][0] == 1795);
    CHECK(sc_v[11][1] == 1915);
    CHECK(sc_v[11][2] == 1916);

    t = m.tuple_from_id(PV, 18030);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 18030);
    CHECK(sc_v[1][0] == 16948);
    CHECK(sc_v[1][1] == 18030);
    CHECK(sc_v[2][0] == 16949);
    CHECK(sc_v[2][1] == 18030);
    CHECK(sc_v[3][0] == 18029);
    CHECK(sc_v[3][1] == 18030);
    CHECK(sc_v[4][0] == 18030);
    CHECK(sc_v[4][1] == 18077);
    CHECK(sc_v[5][0] == 18030);
    CHECK(sc_v[5][1] == 18423);
    CHECK(sc_v[6][0] == 18030);
    CHECK(sc_v[6][1] == 19029);
    CHECK(sc_v[7][0] == 16948);
    CHECK(sc_v[7][1] == 18029);
    CHECK(sc_v[7][2] == 18030);
    CHECK(sc_v[8][0] == 16949);
    CHECK(sc_v[8][1] == 18030);
    CHECK(sc_v[8][2] == 18077);
    CHECK(sc_v[9][0] == 18029);
    CHECK(sc_v[9][1] == 18030);
    CHECK(sc_v[9][2] == 19029);
    CHECK(sc_v[10][0] == 18030);
    CHECK(sc_v[10][1] == 18077);
    CHECK(sc_v[10][2] == 18423);
    CHECK(sc_v[11][0] == 18030);
    CHECK(sc_v[11][1] == 18423);
    CHECK(sc_v[11][2] == 19029);

    t = m.edge_tuple_from_vids(26060,26061);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 26060);
    CHECK(sc_e[0][1] == 26061);
    CHECK(sc_e[1][0] == 25943);
    CHECK(sc_e[1][1] == 26060);
    CHECK(sc_e[1][2] == 26061);
    CHECK(sc_e[2][0] == 26060);
    CHECK(sc_e[2][1] == 26061);
    CHECK(sc_e[2][2] == 26178);

    t = m.edge_tuple_from_vids(27430,29076);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 27430);
    CHECK(sc_e[0][1] == 29076);
    CHECK(sc_e[1][0] == 27416);
    CHECK(sc_e[1][1] == 27430);
    CHECK(sc_e[1][2] == 29076);
    CHECK(sc_e[2][0] == 27430);
    CHECK(sc_e[2][1] == 29076);
    CHECK(sc_e[2][2] == 29116);

    t = m.edge_tuple_from_vids(15204,15339);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 15204);
    CHECK(sc_e[0][1] == 15339);
    CHECK(sc_e[1][0] == 13065);
    CHECK(sc_e[1][1] == 15204);
    CHECK(sc_e[1][2] == 15339);
    CHECK(sc_e[2][0] == 15203);
    CHECK(sc_e[2][1] == 15204);
    CHECK(sc_e[2][2] == 15339);

    t = m.edge_tuple_from_vids(135,256);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 135);
    CHECK(sc_e[0][1] == 256);
    CHECK(sc_e[1][0] == 135);
    CHECK(sc_e[1][1] == 256);
    CHECK(sc_e[1][2] == 257);
    CHECK(sc_e[2][0] == 135);
    CHECK(sc_e[2][1] == 256);
    CHECK(sc_e[2][2] == 8663);

    t = m.edge_tuple_from_vids(30337,30435);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 30337);
    CHECK(sc_e[0][1] == 30435);
    CHECK(sc_e[1][0] == 30336);
    CHECK(sc_e[1][1] == 30337);
    CHECK(sc_e[1][2] == 30435);
    CHECK(sc_e[2][0] == 30337);
    CHECK(sc_e[2][1] == 30435);
    CHECK(sc_e[2][2] == 30436);

    t = m.face_tuple_from_vids(64, 628, 6304);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 64);
    CHECK(sc_f[0][1] == 628);
    CHECK(sc_f[0][2] == 6304);

    t = m.face_tuple_from_vids(4867, 4999, 5000);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4867);
    CHECK(sc_f[0][1] == 4999);
    CHECK(sc_f[0][2] == 5000);

    t = m.face_tuple_from_vids(10732, 14858, 14988);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 10732);
    CHECK(sc_f[0][1] == 14858);
    CHECK(sc_f[0][2] == 14988);

    t = m.face_tuple_from_vids(13891, 14025, 14194);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13891);
    CHECK(sc_f[0][1] == 14025);
    CHECK(sc_f[0][2] == 14194);

    t = m.face_tuple_from_vids(6310, 9082, 12673);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 6310);
    CHECK(sc_f[0][1] == 9082);
    CHECK(sc_f[0][2] == 12673);

}
TEST_CASE("closed_star_bunny_0", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 14139);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 19);
    CHECK(sc_v[0][0] == 14138);
    CHECK(sc_v[1][0] == 14139);
    CHECK(sc_v[2][0] == 14147);
    CHECK(sc_v[3][0] == 15571);
    CHECK(sc_v[4][0] == 15574);
    CHECK(sc_v[5][0] == 15582);
    CHECK(sc_v[6][0] == 14138);
    CHECK(sc_v[6][1] == 14139);
    CHECK(sc_v[7][0] == 14138);
    CHECK(sc_v[7][1] == 15571);
    CHECK(sc_v[8][0] == 14139);
    CHECK(sc_v[8][1] == 14147);
    CHECK(sc_v[9][0] == 14139);
    CHECK(sc_v[9][1] == 15571);
    CHECK(sc_v[10][0] == 14139);
    CHECK(sc_v[10][1] == 15574);
    CHECK(sc_v[11][0] == 14139);
    CHECK(sc_v[11][1] == 15582);
    CHECK(sc_v[12][0] == 14147);
    CHECK(sc_v[12][1] == 15582);
    CHECK(sc_v[13][0] == 15571);
    CHECK(sc_v[13][1] == 15574);
    CHECK(sc_v[14][0] == 15574);
    CHECK(sc_v[14][1] == 15582);
    CHECK(sc_v[15][0] == 14138);
    CHECK(sc_v[15][1] == 14139);
    CHECK(sc_v[15][2] == 15571);
    CHECK(sc_v[16][0] == 14139);
    CHECK(sc_v[16][1] == 14147);
    CHECK(sc_v[16][2] == 15582);
    CHECK(sc_v[17][0] == 14139);
    CHECK(sc_v[17][1] == 15571);
    CHECK(sc_v[17][2] == 15574);
    CHECK(sc_v[18][0] == 14139);
    CHECK(sc_v[18][1] == 15574);
    CHECK(sc_v[18][2] == 15582);

    t = m.tuple_from_id(PV, 8146);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 19);
    CHECK(sc_v[0][0] == 6891);
    CHECK(sc_v[1][0] == 7138);
    CHECK(sc_v[2][0] == 7757);
    CHECK(sc_v[3][0] == 7793);
    CHECK(sc_v[4][0] == 8146);
    CHECK(sc_v[5][0] == 8673);
    CHECK(sc_v[6][0] == 6891);
    CHECK(sc_v[6][1] == 7757);
    CHECK(sc_v[7][0] == 6891);
    CHECK(sc_v[7][1] == 8146);
    CHECK(sc_v[8][0] == 6891);
    CHECK(sc_v[8][1] == 8673);
    CHECK(sc_v[9][0] == 7138);
    CHECK(sc_v[9][1] == 7757);
    CHECK(sc_v[10][0] == 7138);
    CHECK(sc_v[10][1] == 7793);
    CHECK(sc_v[11][0] == 7138);
    CHECK(sc_v[11][1] == 8146);
    CHECK(sc_v[12][0] == 7757);
    CHECK(sc_v[12][1] == 8146);
    CHECK(sc_v[13][0] == 7793);
    CHECK(sc_v[13][1] == 8146);
    CHECK(sc_v[14][0] == 8146);
    CHECK(sc_v[14][1] == 8673);
    CHECK(sc_v[15][0] == 6891);
    CHECK(sc_v[15][1] == 7757);
    CHECK(sc_v[15][2] == 8146);
    CHECK(sc_v[16][0] == 6891);
    CHECK(sc_v[16][1] == 8146);
    CHECK(sc_v[16][2] == 8673);
    CHECK(sc_v[17][0] == 7138);
    CHECK(sc_v[17][1] == 7757);
    CHECK(sc_v[17][2] == 8146);
    CHECK(sc_v[18][0] == 7138);
    CHECK(sc_v[18][1] == 7793);
    CHECK(sc_v[18][2] == 8146);

    t = m.tuple_from_id(PV, 25194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 2775);
    CHECK(sc_v[1][0] == 16857);
    CHECK(sc_v[2][0] == 25194);
    CHECK(sc_v[3][0] == 26566);
    CHECK(sc_v[4][0] == 27834);
    CHECK(sc_v[5][0] == 29003);
    CHECK(sc_v[6][0] == 29446);
    CHECK(sc_v[7][0] == 2775);
    CHECK(sc_v[7][1] == 25194);
    CHECK(sc_v[8][0] == 2775);
    CHECK(sc_v[8][1] == 26566);
    CHECK(sc_v[9][0] == 16857);
    CHECK(sc_v[9][1] == 25194);
    CHECK(sc_v[10][0] == 16857);
    CHECK(sc_v[10][1] == 27834);
    CHECK(sc_v[11][0] == 16857);
    CHECK(sc_v[11][1] == 29003);
    CHECK(sc_v[12][0] == 25194);
    CHECK(sc_v[12][1] == 26566);
    CHECK(sc_v[13][0] == 25194);
    CHECK(sc_v[13][1] == 27834);
    CHECK(sc_v[14][0] == 25194);
    CHECK(sc_v[14][1] == 29003);
    CHECK(sc_v[15][0] == 25194);
    CHECK(sc_v[15][1] == 29446);
    CHECK(sc_v[16][0] == 26566);
    CHECK(sc_v[16][1] == 29446);
    CHECK(sc_v[17][0] == 29003);
    CHECK(sc_v[17][1] == 29446);
    CHECK(sc_v[18][0] == 2775);
    CHECK(sc_v[18][1] == 25194);
    CHECK(sc_v[18][2] == 26566);
    CHECK(sc_v[19][0] == 16857);
    CHECK(sc_v[19][1] == 25194);
    CHECK(sc_v[19][2] == 27834);
    CHECK(sc_v[20][0] == 16857);
    CHECK(sc_v[20][1] == 25194);
    CHECK(sc_v[20][2] == 29003);
    CHECK(sc_v[21][0] == 25194);
    CHECK(sc_v[21][1] == 26566);
    CHECK(sc_v[21][2] == 29446);
    CHECK(sc_v[22][0] == 25194);
    CHECK(sc_v[22][1] == 29003);
    CHECK(sc_v[22][2] == 29446);

    t = m.tuple_from_id(PV, 1795);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 1686);
    CHECK(sc_v[1][0] == 1687);
    CHECK(sc_v[2][0] == 1794);
    CHECK(sc_v[3][0] == 1795);
    CHECK(sc_v[4][0] == 1796);
    CHECK(sc_v[5][0] == 1915);
    CHECK(sc_v[6][0] == 1916);
    CHECK(sc_v[7][0] == 1686);
    CHECK(sc_v[7][1] == 1687);
    CHECK(sc_v[8][0] == 1686);
    CHECK(sc_v[8][1] == 1795);
    CHECK(sc_v[9][0] == 1687);
    CHECK(sc_v[9][1] == 1795);
    CHECK(sc_v[10][0] == 1687);
    CHECK(sc_v[10][1] == 1796);
    CHECK(sc_v[11][0] == 1794);
    CHECK(sc_v[11][1] == 1795);
    CHECK(sc_v[12][0] == 1794);
    CHECK(sc_v[12][1] == 1915);
    CHECK(sc_v[13][0] == 1795);
    CHECK(sc_v[13][1] == 1796);
    CHECK(sc_v[14][0] == 1795);
    CHECK(sc_v[14][1] == 1915);
    CHECK(sc_v[15][0] == 1795);
    CHECK(sc_v[15][1] == 1916);
    CHECK(sc_v[16][0] == 1796);
    CHECK(sc_v[16][1] == 1916);
    CHECK(sc_v[17][0] == 1915);
    CHECK(sc_v[17][1] == 1916);
    CHECK(sc_v[18][0] == 1686);
    CHECK(sc_v[18][1] == 1687);
    CHECK(sc_v[18][2] == 1795);
    CHECK(sc_v[19][0] == 1687);
    CHECK(sc_v[19][1] == 1795);
    CHECK(sc_v[19][2] == 1796);
    CHECK(sc_v[20][0] == 1794);
    CHECK(sc_v[20][1] == 1795);
    CHECK(sc_v[20][2] == 1915);
    CHECK(sc_v[21][0] == 1795);
    CHECK(sc_v[21][1] == 1796);
    CHECK(sc_v[21][2] == 1916);
    CHECK(sc_v[22][0] == 1795);
    CHECK(sc_v[22][1] == 1915);
    CHECK(sc_v[22][2] == 1916);

    t = m.tuple_from_id(PV, 18030);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 16948);
    CHECK(sc_v[1][0] == 16949);
    CHECK(sc_v[2][0] == 18029);
    CHECK(sc_v[3][0] == 18030);
    CHECK(sc_v[4][0] == 18077);
    CHECK(sc_v[5][0] == 18423);
    CHECK(sc_v[6][0] == 19029);
    CHECK(sc_v[7][0] == 16948);
    CHECK(sc_v[7][1] == 18029);
    CHECK(sc_v[8][0] == 16948);
    CHECK(sc_v[8][1] == 18030);
    CHECK(sc_v[9][0] == 16949);
    CHECK(sc_v[9][1] == 18030);
    CHECK(sc_v[10][0] == 16949);
    CHECK(sc_v[10][1] == 18077);
    CHECK(sc_v[11][0] == 18029);
    CHECK(sc_v[11][1] == 18030);
    CHECK(sc_v[12][0] == 18029);
    CHECK(sc_v[12][1] == 19029);
    CHECK(sc_v[13][0] == 18030);
    CHECK(sc_v[13][1] == 18077);
    CHECK(sc_v[14][0] == 18030);
    CHECK(sc_v[14][1] == 18423);
    CHECK(sc_v[15][0] == 18030);
    CHECK(sc_v[15][1] == 19029);
    CHECK(sc_v[16][0] == 18077);
    CHECK(sc_v[16][1] == 18423);
    CHECK(sc_v[17][0] == 18423);
    CHECK(sc_v[17][1] == 19029);
    CHECK(sc_v[18][0] == 16948);
    CHECK(sc_v[18][1] == 18029);
    CHECK(sc_v[18][2] == 18030);
    CHECK(sc_v[19][0] == 16949);
    CHECK(sc_v[19][1] == 18030);
    CHECK(sc_v[19][2] == 18077);
    CHECK(sc_v[20][0] == 18029);
    CHECK(sc_v[20][1] == 18030);
    CHECK(sc_v[20][2] == 19029);
    CHECK(sc_v[21][0] == 18030);
    CHECK(sc_v[21][1] == 18077);
    CHECK(sc_v[21][2] == 18423);
    CHECK(sc_v[22][0] == 18030);
    CHECK(sc_v[22][1] == 18423);
    CHECK(sc_v[22][2] == 19029);

    t = m.edge_tuple_from_vids(26060,26061);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 25943);
    CHECK(sc_e[1][0] == 26060);
    CHECK(sc_e[2][0] == 26061);
    CHECK(sc_e[3][0] == 26178);
    CHECK(sc_e[4][0] == 25943);
    CHECK(sc_e[4][1] == 26060);
    CHECK(sc_e[5][0] == 25943);
    CHECK(sc_e[5][1] == 26061);
    CHECK(sc_e[6][0] == 26060);
    CHECK(sc_e[6][1] == 26061);
    CHECK(sc_e[7][0] == 26060);
    CHECK(sc_e[7][1] == 26178);
    CHECK(sc_e[8][0] == 26061);
    CHECK(sc_e[8][1] == 26178);
    CHECK(sc_e[9][0] == 25943);
    CHECK(sc_e[9][1] == 26060);
    CHECK(sc_e[9][2] == 26061);
    CHECK(sc_e[10][0] == 26060);
    CHECK(sc_e[10][1] == 26061);
    CHECK(sc_e[10][2] == 26178);

    t = m.edge_tuple_from_vids(27430,29076);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 27416);
    CHECK(sc_e[1][0] == 27430);
    CHECK(sc_e[2][0] == 29076);
    CHECK(sc_e[3][0] == 29116);
    CHECK(sc_e[4][0] == 27416);
    CHECK(sc_e[4][1] == 27430);
    CHECK(sc_e[5][0] == 27416);
    CHECK(sc_e[5][1] == 29076);
    CHECK(sc_e[6][0] == 27430);
    CHECK(sc_e[6][1] == 29076);
    CHECK(sc_e[7][0] == 27430);
    CHECK(sc_e[7][1] == 29116);
    CHECK(sc_e[8][0] == 29076);
    CHECK(sc_e[8][1] == 29116);
    CHECK(sc_e[9][0] == 27416);
    CHECK(sc_e[9][1] == 27430);
    CHECK(sc_e[9][2] == 29076);
    CHECK(sc_e[10][0] == 27430);
    CHECK(sc_e[10][1] == 29076);
    CHECK(sc_e[10][2] == 29116);

    t = m.edge_tuple_from_vids(15204,15339);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 13065);
    CHECK(sc_e[1][0] == 15203);
    CHECK(sc_e[2][0] == 15204);
    CHECK(sc_e[3][0] == 15339);
    CHECK(sc_e[4][0] == 13065);
    CHECK(sc_e[4][1] == 15204);
    CHECK(sc_e[5][0] == 13065);
    CHECK(sc_e[5][1] == 15339);
    CHECK(sc_e[6][0] == 15203);
    CHECK(sc_e[6][1] == 15204);
    CHECK(sc_e[7][0] == 15203);
    CHECK(sc_e[7][1] == 15339);
    CHECK(sc_e[8][0] == 15204);
    CHECK(sc_e[8][1] == 15339);
    CHECK(sc_e[9][0] == 13065);
    CHECK(sc_e[9][1] == 15204);
    CHECK(sc_e[9][2] == 15339);
    CHECK(sc_e[10][0] == 15203);
    CHECK(sc_e[10][1] == 15204);
    CHECK(sc_e[10][2] == 15339);

    t = m.edge_tuple_from_vids(135,256);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 135);
    CHECK(sc_e[1][0] == 256);
    CHECK(sc_e[2][0] == 257);
    CHECK(sc_e[3][0] == 8663);
    CHECK(sc_e[4][0] == 135);
    CHECK(sc_e[4][1] == 256);
    CHECK(sc_e[5][0] == 135);
    CHECK(sc_e[5][1] == 257);
    CHECK(sc_e[6][0] == 135);
    CHECK(sc_e[6][1] == 8663);
    CHECK(sc_e[7][0] == 256);
    CHECK(sc_e[7][1] == 257);
    CHECK(sc_e[8][0] == 256);
    CHECK(sc_e[8][1] == 8663);
    CHECK(sc_e[9][0] == 135);
    CHECK(sc_e[9][1] == 256);
    CHECK(sc_e[9][2] == 257);
    CHECK(sc_e[10][0] == 135);
    CHECK(sc_e[10][1] == 256);
    CHECK(sc_e[10][2] == 8663);

    t = m.edge_tuple_from_vids(30337,30435);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 30336);
    CHECK(sc_e[1][0] == 30337);
    CHECK(sc_e[2][0] == 30435);
    CHECK(sc_e[3][0] == 30436);
    CHECK(sc_e[4][0] == 30336);
    CHECK(sc_e[4][1] == 30337);
    CHECK(sc_e[5][0] == 30336);
    CHECK(sc_e[5][1] == 30435);
    CHECK(sc_e[6][0] == 30337);
    CHECK(sc_e[6][1] == 30435);
    CHECK(sc_e[7][0] == 30337);
    CHECK(sc_e[7][1] == 30436);
    CHECK(sc_e[8][0] == 30435);
    CHECK(sc_e[8][1] == 30436);
    CHECK(sc_e[9][0] == 30336);
    CHECK(sc_e[9][1] == 30337);
    CHECK(sc_e[9][2] == 30435);
    CHECK(sc_e[10][0] == 30337);
    CHECK(sc_e[10][1] == 30435);
    CHECK(sc_e[10][2] == 30436);

    t = m.face_tuple_from_vids(64, 628, 6304);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 64);
    CHECK(sc_f[1][0] == 628);
    CHECK(sc_f[2][0] == 6304);
    CHECK(sc_f[3][0] == 64);
    CHECK(sc_f[3][1] == 628);
    CHECK(sc_f[4][0] == 64);
    CHECK(sc_f[4][1] == 6304);
    CHECK(sc_f[5][0] == 628);
    CHECK(sc_f[5][1] == 6304);
    CHECK(sc_f[6][0] == 64);
    CHECK(sc_f[6][1] == 628);
    CHECK(sc_f[6][2] == 6304);

    t = m.face_tuple_from_vids(4867, 4999, 5000);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4867);
    CHECK(sc_f[1][0] == 4999);
    CHECK(sc_f[2][0] == 5000);
    CHECK(sc_f[3][0] == 4867);
    CHECK(sc_f[3][1] == 4999);
    CHECK(sc_f[4][0] == 4867);
    CHECK(sc_f[4][1] == 5000);
    CHECK(sc_f[5][0] == 4999);
    CHECK(sc_f[5][1] == 5000);
    CHECK(sc_f[6][0] == 4867);
    CHECK(sc_f[6][1] == 4999);
    CHECK(sc_f[6][2] == 5000);

    t = m.face_tuple_from_vids(10732, 14858, 14988);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 10732);
    CHECK(sc_f[1][0] == 14858);
    CHECK(sc_f[2][0] == 14988);
    CHECK(sc_f[3][0] == 10732);
    CHECK(sc_f[3][1] == 14858);
    CHECK(sc_f[4][0] == 10732);
    CHECK(sc_f[4][1] == 14988);
    CHECK(sc_f[5][0] == 14858);
    CHECK(sc_f[5][1] == 14988);
    CHECK(sc_f[6][0] == 10732);
    CHECK(sc_f[6][1] == 14858);
    CHECK(sc_f[6][2] == 14988);

    t = m.face_tuple_from_vids(13891, 14025, 14194);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13891);
    CHECK(sc_f[1][0] == 14025);
    CHECK(sc_f[2][0] == 14194);
    CHECK(sc_f[3][0] == 13891);
    CHECK(sc_f[3][1] == 14025);
    CHECK(sc_f[4][0] == 13891);
    CHECK(sc_f[4][1] == 14194);
    CHECK(sc_f[5][0] == 14025);
    CHECK(sc_f[5][1] == 14194);
    CHECK(sc_f[6][0] == 13891);
    CHECK(sc_f[6][1] == 14025);
    CHECK(sc_f[6][2] == 14194);

    t = m.face_tuple_from_vids(6310, 9082, 12673);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 6310);
    CHECK(sc_f[1][0] == 9082);
    CHECK(sc_f[2][0] == 12673);
    CHECK(sc_f[3][0] == 6310);
    CHECK(sc_f[3][1] == 9082);
    CHECK(sc_f[4][0] == 6310);
    CHECK(sc_f[4][1] == 12673);
    CHECK(sc_f[5][0] == 9082);
    CHECK(sc_f[5][1] == 12673);
    CHECK(sc_f[6][0] == 6310);
    CHECK(sc_f[6][1] == 9082);
    CHECK(sc_f[6][2] == 12673);

}
TEST_CASE("link_bunny_0", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 14139);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 9);
    CHECK(sc_v[0][0] == 14138);
    CHECK(sc_v[1][0] == 14147);
    CHECK(sc_v[2][0] == 15571);
    CHECK(sc_v[3][0] == 15574);
    CHECK(sc_v[4][0] == 15582);
    CHECK(sc_v[5][0] == 14138);
    CHECK(sc_v[5][1] == 15571);
    CHECK(sc_v[6][0] == 14147);
    CHECK(sc_v[6][1] == 15582);
    CHECK(sc_v[7][0] == 15571);
    CHECK(sc_v[7][1] == 15574);
    CHECK(sc_v[8][0] == 15574);
    CHECK(sc_v[8][1] == 15582);

    t = m.tuple_from_id(PV, 8146);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 9);
    CHECK(sc_v[0][0] == 6891);
    CHECK(sc_v[1][0] == 7138);
    CHECK(sc_v[2][0] == 7757);
    CHECK(sc_v[3][0] == 7793);
    CHECK(sc_v[4][0] == 8673);
    CHECK(sc_v[5][0] == 6891);
    CHECK(sc_v[5][1] == 7757);
    CHECK(sc_v[6][0] == 6891);
    CHECK(sc_v[6][1] == 8673);
    CHECK(sc_v[7][0] == 7138);
    CHECK(sc_v[7][1] == 7757);
    CHECK(sc_v[8][0] == 7138);
    CHECK(sc_v[8][1] == 7793);

    t = m.tuple_from_id(PV, 25194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 2775);
    CHECK(sc_v[1][0] == 16857);
    CHECK(sc_v[2][0] == 26566);
    CHECK(sc_v[3][0] == 27834);
    CHECK(sc_v[4][0] == 29003);
    CHECK(sc_v[5][0] == 29446);
    CHECK(sc_v[6][0] == 2775);
    CHECK(sc_v[6][1] == 26566);
    CHECK(sc_v[7][0] == 16857);
    CHECK(sc_v[7][1] == 27834);
    CHECK(sc_v[8][0] == 16857);
    CHECK(sc_v[8][1] == 29003);
    CHECK(sc_v[9][0] == 26566);
    CHECK(sc_v[9][1] == 29446);
    CHECK(sc_v[10][0] == 29003);
    CHECK(sc_v[10][1] == 29446);

    t = m.tuple_from_id(PV, 1795);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 1686);
    CHECK(sc_v[1][0] == 1687);
    CHECK(sc_v[2][0] == 1794);
    CHECK(sc_v[3][0] == 1796);
    CHECK(sc_v[4][0] == 1915);
    CHECK(sc_v[5][0] == 1916);
    CHECK(sc_v[6][0] == 1686);
    CHECK(sc_v[6][1] == 1687);
    CHECK(sc_v[7][0] == 1687);
    CHECK(sc_v[7][1] == 1796);
    CHECK(sc_v[8][0] == 1794);
    CHECK(sc_v[8][1] == 1915);
    CHECK(sc_v[9][0] == 1796);
    CHECK(sc_v[9][1] == 1916);
    CHECK(sc_v[10][0] == 1915);
    CHECK(sc_v[10][1] == 1916);

    t = m.tuple_from_id(PV, 18030);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 16948);
    CHECK(sc_v[1][0] == 16949);
    CHECK(sc_v[2][0] == 18029);
    CHECK(sc_v[3][0] == 18077);
    CHECK(sc_v[4][0] == 18423);
    CHECK(sc_v[5][0] == 19029);
    CHECK(sc_v[6][0] == 16948);
    CHECK(sc_v[6][1] == 18029);
    CHECK(sc_v[7][0] == 16949);
    CHECK(sc_v[7][1] == 18077);
    CHECK(sc_v[8][0] == 18029);
    CHECK(sc_v[8][1] == 19029);
    CHECK(sc_v[9][0] == 18077);
    CHECK(sc_v[9][1] == 18423);
    CHECK(sc_v[10][0] == 18423);
    CHECK(sc_v[10][1] == 19029);

    t = m.edge_tuple_from_vids(26060,26061);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 25943);
    CHECK(sc_e[1][0] == 26178);

    t = m.edge_tuple_from_vids(27430,29076);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 27416);
    CHECK(sc_e[1][0] == 29116);

    t = m.edge_tuple_from_vids(15204,15339);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 13065);
    CHECK(sc_e[1][0] == 15203);

    t = m.edge_tuple_from_vids(135,256);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 257);
    CHECK(sc_e[1][0] == 8663);

    t = m.edge_tuple_from_vids(30337,30435);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 30336);
    CHECK(sc_e[1][0] == 30436);

    t = m.face_tuple_from_vids(64, 628, 6304);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(4867, 4999, 5000);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(10732, 14858, 14988);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(13891, 14025, 14194);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(6310, 9082, 12673);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_bunny_0", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 14139);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 14139);

    t = m.tuple_from_id(PV, 8146);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 8146);

    t = m.tuple_from_id(PV, 25194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 25194);

    t = m.tuple_from_id(PV, 1795);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 1795);

    t = m.tuple_from_id(PV, 18030);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 18030);

    t = m.edge_tuple_from_vids(26060,26061);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 26060);
    CHECK(sc_e[1][0] == 26061);
    CHECK(sc_e[2][0] == 26060);
    CHECK(sc_e[2][1] == 26061);

    t = m.edge_tuple_from_vids(27430,29076);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 27430);
    CHECK(sc_e[1][0] == 29076);
    CHECK(sc_e[2][0] == 27430);
    CHECK(sc_e[2][1] == 29076);

    t = m.edge_tuple_from_vids(15204,15339);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 15204);
    CHECK(sc_e[1][0] == 15339);
    CHECK(sc_e[2][0] == 15204);
    CHECK(sc_e[2][1] == 15339);

    t = m.edge_tuple_from_vids(135,256);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 135);
    CHECK(sc_e[1][0] == 256);
    CHECK(sc_e[2][0] == 135);
    CHECK(sc_e[2][1] == 256);

    t = m.edge_tuple_from_vids(30337,30435);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 30337);
    CHECK(sc_e[1][0] == 30435);
    CHECK(sc_e[2][0] == 30337);
    CHECK(sc_e[2][1] == 30435);

    t = m.face_tuple_from_vids(64, 628, 6304);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 64);
    CHECK(sc_f[1][0] == 628);
    CHECK(sc_f[2][0] == 6304);
    CHECK(sc_f[3][0] == 64);
    CHECK(sc_f[3][1] == 628);
    CHECK(sc_f[4][0] == 64);
    CHECK(sc_f[4][1] == 6304);
    CHECK(sc_f[5][0] == 628);
    CHECK(sc_f[5][1] == 6304);
    CHECK(sc_f[6][0] == 64);
    CHECK(sc_f[6][1] == 628);
    CHECK(sc_f[6][2] == 6304);

    t = m.face_tuple_from_vids(4867, 4999, 5000);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4867);
    CHECK(sc_f[1][0] == 4999);
    CHECK(sc_f[2][0] == 5000);
    CHECK(sc_f[3][0] == 4867);
    CHECK(sc_f[3][1] == 4999);
    CHECK(sc_f[4][0] == 4867);
    CHECK(sc_f[4][1] == 5000);
    CHECK(sc_f[5][0] == 4999);
    CHECK(sc_f[5][1] == 5000);
    CHECK(sc_f[6][0] == 4867);
    CHECK(sc_f[6][1] == 4999);
    CHECK(sc_f[6][2] == 5000);

    t = m.face_tuple_from_vids(10732, 14858, 14988);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 10732);
    CHECK(sc_f[1][0] == 14858);
    CHECK(sc_f[2][0] == 14988);
    CHECK(sc_f[3][0] == 10732);
    CHECK(sc_f[3][1] == 14858);
    CHECK(sc_f[4][0] == 10732);
    CHECK(sc_f[4][1] == 14988);
    CHECK(sc_f[5][0] == 14858);
    CHECK(sc_f[5][1] == 14988);
    CHECK(sc_f[6][0] == 10732);
    CHECK(sc_f[6][1] == 14858);
    CHECK(sc_f[6][2] == 14988);

    t = m.face_tuple_from_vids(13891, 14025, 14194);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13891);
    CHECK(sc_f[1][0] == 14025);
    CHECK(sc_f[2][0] == 14194);
    CHECK(sc_f[3][0] == 13891);
    CHECK(sc_f[3][1] == 14025);
    CHECK(sc_f[4][0] == 13891);
    CHECK(sc_f[4][1] == 14194);
    CHECK(sc_f[5][0] == 14025);
    CHECK(sc_f[5][1] == 14194);
    CHECK(sc_f[6][0] == 13891);
    CHECK(sc_f[6][1] == 14025);
    CHECK(sc_f[6][2] == 14194);

    t = m.face_tuple_from_vids(6310, 9082, 12673);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 6310);
    CHECK(sc_f[1][0] == 9082);
    CHECK(sc_f[2][0] == 12673);
    CHECK(sc_f[3][0] == 6310);
    CHECK(sc_f[3][1] == 9082);
    CHECK(sc_f[4][0] == 6310);
    CHECK(sc_f[4][1] == 12673);
    CHECK(sc_f[5][0] == 9082);
    CHECK(sc_f[5][1] == 12673);
    CHECK(sc_f[6][0] == 6310);
    CHECK(sc_f[6][1] == 9082);
    CHECK(sc_f[6][2] == 12673);

}
TEST_CASE("top_coface_simplex_bunny_0", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 14139);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 4);
    CHECK(sc_v[0][0] == 14138);
    CHECK(sc_v[0][1] == 14139);
    CHECK(sc_v[0][2] == 15571);
    CHECK(sc_v[1][0] == 14139);
    CHECK(sc_v[1][1] == 14147);
    CHECK(sc_v[1][2] == 15582);
    CHECK(sc_v[2][0] == 14139);
    CHECK(sc_v[2][1] == 15571);
    CHECK(sc_v[2][2] == 15574);
    CHECK(sc_v[3][0] == 14139);
    CHECK(sc_v[3][1] == 15574);
    CHECK(sc_v[3][2] == 15582);

    t = m.tuple_from_id(PV, 8146);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 4);
    CHECK(sc_v[0][0] == 6891);
    CHECK(sc_v[0][1] == 7757);
    CHECK(sc_v[0][2] == 8146);
    CHECK(sc_v[1][0] == 6891);
    CHECK(sc_v[1][1] == 8146);
    CHECK(sc_v[1][2] == 8673);
    CHECK(sc_v[2][0] == 7138);
    CHECK(sc_v[2][1] == 7757);
    CHECK(sc_v[2][2] == 8146);
    CHECK(sc_v[3][0] == 7138);
    CHECK(sc_v[3][1] == 7793);
    CHECK(sc_v[3][2] == 8146);

    t = m.tuple_from_id(PV, 25194);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 2775);
    CHECK(sc_v[0][1] == 25194);
    CHECK(sc_v[0][2] == 26566);
    CHECK(sc_v[1][0] == 16857);
    CHECK(sc_v[1][1] == 25194);
    CHECK(sc_v[1][2] == 27834);
    CHECK(sc_v[2][0] == 16857);
    CHECK(sc_v[2][1] == 25194);
    CHECK(sc_v[2][2] == 29003);
    CHECK(sc_v[3][0] == 25194);
    CHECK(sc_v[3][1] == 26566);
    CHECK(sc_v[3][2] == 29446);
    CHECK(sc_v[4][0] == 25194);
    CHECK(sc_v[4][1] == 29003);
    CHECK(sc_v[4][2] == 29446);

    t = m.tuple_from_id(PV, 1795);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 1686);
    CHECK(sc_v[0][1] == 1687);
    CHECK(sc_v[0][2] == 1795);
    CHECK(sc_v[1][0] == 1687);
    CHECK(sc_v[1][1] == 1795);
    CHECK(sc_v[1][2] == 1796);
    CHECK(sc_v[2][0] == 1794);
    CHECK(sc_v[2][1] == 1795);
    CHECK(sc_v[2][2] == 1915);
    CHECK(sc_v[3][0] == 1795);
    CHECK(sc_v[3][1] == 1796);
    CHECK(sc_v[3][2] == 1916);
    CHECK(sc_v[4][0] == 1795);
    CHECK(sc_v[4][1] == 1915);
    CHECK(sc_v[4][2] == 1916);

    t = m.tuple_from_id(PV, 18030);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 16948);
    CHECK(sc_v[0][1] == 18029);
    CHECK(sc_v[0][2] == 18030);
    CHECK(sc_v[1][0] == 16949);
    CHECK(sc_v[1][1] == 18030);
    CHECK(sc_v[1][2] == 18077);
    CHECK(sc_v[2][0] == 18029);
    CHECK(sc_v[2][1] == 18030);
    CHECK(sc_v[2][2] == 19029);
    CHECK(sc_v[3][0] == 18030);
    CHECK(sc_v[3][1] == 18077);
    CHECK(sc_v[3][2] == 18423);
    CHECK(sc_v[4][0] == 18030);
    CHECK(sc_v[4][1] == 18423);
    CHECK(sc_v[4][2] == 19029);

    t = m.edge_tuple_from_vids(26060,26061);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 25943);
    CHECK(sc_e[0][1] == 26060);
    CHECK(sc_e[0][2] == 26061);
    CHECK(sc_e[1][0] == 26060);
    CHECK(sc_e[1][1] == 26061);
    CHECK(sc_e[1][2] == 26178);

    t = m.edge_tuple_from_vids(27430,29076);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 27416);
    CHECK(sc_e[0][1] == 27430);
    CHECK(sc_e[0][2] == 29076);
    CHECK(sc_e[1][0] == 27430);
    CHECK(sc_e[1][1] == 29076);
    CHECK(sc_e[1][2] == 29116);

    t = m.edge_tuple_from_vids(15204,15339);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 13065);
    CHECK(sc_e[0][1] == 15204);
    CHECK(sc_e[0][2] == 15339);
    CHECK(sc_e[1][0] == 15203);
    CHECK(sc_e[1][1] == 15204);
    CHECK(sc_e[1][2] == 15339);

    t = m.edge_tuple_from_vids(135,256);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 135);
    CHECK(sc_e[0][1] == 256);
    CHECK(sc_e[0][2] == 257);
    CHECK(sc_e[1][0] == 135);
    CHECK(sc_e[1][1] == 256);
    CHECK(sc_e[1][2] == 8663);

    t = m.edge_tuple_from_vids(30337,30435);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 30336);
    CHECK(sc_e[0][1] == 30337);
    CHECK(sc_e[0][2] == 30435);
    CHECK(sc_e[1][0] == 30337);
    CHECK(sc_e[1][1] == 30435);
    CHECK(sc_e[1][2] == 30436);

    t = m.face_tuple_from_vids(64, 628, 6304);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 64);
    CHECK(sc_f[0][1] == 628);
    CHECK(sc_f[0][2] == 6304);

    t = m.face_tuple_from_vids(4867, 4999, 5000);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4867);
    CHECK(sc_f[0][1] == 4999);
    CHECK(sc_f[0][2] == 5000);

    t = m.face_tuple_from_vids(10732, 14858, 14988);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 10732);
    CHECK(sc_f[0][1] == 14858);
    CHECK(sc_f[0][2] == 14988);

    t = m.face_tuple_from_vids(13891, 14025, 14194);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13891);
    CHECK(sc_f[0][1] == 14025);
    CHECK(sc_f[0][2] == 14194);

    t = m.face_tuple_from_vids(6310, 9082, 12673);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 6310);
    CHECK(sc_f[0][1] == 9082);
    CHECK(sc_f[0][2] == 12673);

}
TEST_CASE("open_star_blub_0", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/blub_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 674);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 674);
    CHECK(sc_v[1][0] == 674);
    CHECK(sc_v[1][1] == 2660);
    CHECK(sc_v[2][0] == 674);
    CHECK(sc_v[2][1] == 2663);
    CHECK(sc_v[3][0] == 674);
    CHECK(sc_v[3][1] == 4031);
    CHECK(sc_v[4][0] == 674);
    CHECK(sc_v[4][1] == 4037);
    CHECK(sc_v[5][0] == 674);
    CHECK(sc_v[5][1] == 2660);
    CHECK(sc_v[5][2] == 2663);
    CHECK(sc_v[6][0] == 674);
    CHECK(sc_v[6][1] == 2660);
    CHECK(sc_v[6][2] == 4037);
    CHECK(sc_v[7][0] == 674);
    CHECK(sc_v[7][1] == 4031);
    CHECK(sc_v[7][2] == 4037);

    t = m.tuple_from_id(PV, 2302);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 2302);
    CHECK(sc_v[1][0] == 145);
    CHECK(sc_v[1][1] == 2302);
    CHECK(sc_v[2][0] == 581);
    CHECK(sc_v[2][1] == 2302);
    CHECK(sc_v[3][0] == 2269);
    CHECK(sc_v[3][1] == 2302);
    CHECK(sc_v[4][0] == 2302);
    CHECK(sc_v[4][1] == 2303);
    CHECK(sc_v[5][0] == 2302);
    CHECK(sc_v[5][1] == 2690);
    CHECK(sc_v[6][0] == 2302);
    CHECK(sc_v[6][1] == 2692);
    CHECK(sc_v[7][0] == 145);
    CHECK(sc_v[7][1] == 2269);
    CHECK(sc_v[7][2] == 2302);
    CHECK(sc_v[8][0] == 145);
    CHECK(sc_v[8][1] == 2302);
    CHECK(sc_v[8][2] == 2692);
    CHECK(sc_v[9][0] == 581);
    CHECK(sc_v[9][1] == 2302);
    CHECK(sc_v[9][2] == 2303);
    CHECK(sc_v[10][0] == 2269);
    CHECK(sc_v[10][1] == 2302);
    CHECK(sc_v[10][2] == 2303);
    CHECK(sc_v[11][0] == 2302);
    CHECK(sc_v[11][1] == 2690);
    CHECK(sc_v[11][2] == 2692);

    t = m.tuple_from_id(PV, 490);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 490);
    CHECK(sc_v[1][0] == 490);
    CHECK(sc_v[1][1] == 1956);
    CHECK(sc_v[2][0] == 490);
    CHECK(sc_v[2][1] == 1959);
    CHECK(sc_v[3][0] == 490);
    CHECK(sc_v[3][1] == 1985);
    CHECK(sc_v[4][0] == 490);
    CHECK(sc_v[4][1] == 1990);
    CHECK(sc_v[5][0] == 490);
    CHECK(sc_v[5][1] == 1956);
    CHECK(sc_v[5][2] == 1990);
    CHECK(sc_v[6][0] == 490);
    CHECK(sc_v[6][1] == 1959);
    CHECK(sc_v[6][2] == 1985);
    CHECK(sc_v[7][0] == 490);
    CHECK(sc_v[7][1] == 1985);
    CHECK(sc_v[7][2] == 1990);

    t = m.tuple_from_id(PV, 2716);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 2716);
    CHECK(sc_v[1][0] == 682);
    CHECK(sc_v[1][1] == 2716);
    CHECK(sc_v[2][0] == 692);
    CHECK(sc_v[2][1] == 2716);
    CHECK(sc_v[3][0] == 2716);
    CHECK(sc_v[3][1] == 2718);
    CHECK(sc_v[4][0] == 2716);
    CHECK(sc_v[4][1] == 2719);
    CHECK(sc_v[5][0] == 2716);
    CHECK(sc_v[5][1] == 2720);
    CHECK(sc_v[6][0] == 682);
    CHECK(sc_v[6][1] == 2716);
    CHECK(sc_v[6][2] == 2720);
    CHECK(sc_v[7][0] == 692);
    CHECK(sc_v[7][1] == 2716);
    CHECK(sc_v[7][2] == 2718);
    CHECK(sc_v[8][0] == 692);
    CHECK(sc_v[8][1] == 2716);
    CHECK(sc_v[8][2] == 2719);
    CHECK(sc_v[9][0] == 2716);
    CHECK(sc_v[9][1] == 2719);
    CHECK(sc_v[9][2] == 2720);

    t = m.tuple_from_id(PV, 971);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 971);
    CHECK(sc_v[1][0] == 971);
    CHECK(sc_v[1][1] == 3796);
    CHECK(sc_v[2][0] == 971);
    CHECK(sc_v[2][1] == 3797);
    CHECK(sc_v[3][0] == 971);
    CHECK(sc_v[3][1] == 3798);
    CHECK(sc_v[4][0] == 971);
    CHECK(sc_v[4][1] == 3804);
    CHECK(sc_v[5][0] == 971);
    CHECK(sc_v[5][1] == 3805);
    CHECK(sc_v[6][0] == 971);
    CHECK(sc_v[6][1] == 3796);
    CHECK(sc_v[6][2] == 3798);
    CHECK(sc_v[7][0] == 971);
    CHECK(sc_v[7][1] == 3797);
    CHECK(sc_v[7][2] == 3798);
    CHECK(sc_v[8][0] == 971);
    CHECK(sc_v[8][1] == 3797);
    CHECK(sc_v[8][2] == 3804);
    CHECK(sc_v[9][0] == 971);
    CHECK(sc_v[9][1] == 3804);
    CHECK(sc_v[9][2] == 3805);

    t = m.edge_tuple_from_vids(6395,6489);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 6395);
    CHECK(sc_e[0][1] == 6489);
    CHECK(sc_e[1][0] == 1611);
    CHECK(sc_e[1][1] == 6395);
    CHECK(sc_e[1][2] == 6489);
    CHECK(sc_e[2][0] == 6395);
    CHECK(sc_e[2][1] == 6489);
    CHECK(sc_e[2][2] == 6500);

    t = m.edge_tuple_from_vids(295,6693);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 295);
    CHECK(sc_e[0][1] == 6693);
    CHECK(sc_e[1][0] == 295);
    CHECK(sc_e[1][1] == 6693);
    CHECK(sc_e[1][2] == 6694);

    t = m.edge_tuple_from_vids(3046,3056);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3046);
    CHECK(sc_e[0][1] == 3056);
    CHECK(sc_e[1][0] == 778);
    CHECK(sc_e[1][1] == 3046);
    CHECK(sc_e[1][2] == 3056);
    CHECK(sc_e[2][0] == 3039);
    CHECK(sc_e[2][1] == 3046);
    CHECK(sc_e[2][2] == 3056);

    t = m.edge_tuple_from_vids(114,4506);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 114);
    CHECK(sc_e[0][1] == 4506);
    CHECK(sc_e[1][0] == 114);
    CHECK(sc_e[1][1] == 1829);
    CHECK(sc_e[1][2] == 4506);
    CHECK(sc_e[2][0] == 114);
    CHECK(sc_e[2][1] == 4504);
    CHECK(sc_e[2][2] == 4506);

    t = m.edge_tuple_from_vids(2949,5621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 2949);
    CHECK(sc_e[0][1] == 5621);
    CHECK(sc_e[1][0] == 750);
    CHECK(sc_e[1][1] == 2949);
    CHECK(sc_e[1][2] == 5621);
    CHECK(sc_e[2][0] == 2949);
    CHECK(sc_e[2][1] == 5621);
    CHECK(sc_e[2][2] == 5623);

    t = m.face_tuple_from_vids(718, 2814, 2816);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 718);
    CHECK(sc_f[0][1] == 2814);
    CHECK(sc_f[0][2] == 2816);

    t = m.face_tuple_from_vids(2750, 2751, 2753);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2750);
    CHECK(sc_f[0][1] == 2751);
    CHECK(sc_f[0][2] == 2753);

    t = m.face_tuple_from_vids(2058, 2063, 2066);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2058);
    CHECK(sc_f[0][1] == 2063);
    CHECK(sc_f[0][2] == 2066);

    t = m.face_tuple_from_vids(380, 5943, 6281);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 380);
    CHECK(sc_f[0][1] == 5943);
    CHECK(sc_f[0][2] == 6281);

    t = m.face_tuple_from_vids(1758, 7023, 7032);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1758);
    CHECK(sc_f[0][1] == 7023);
    CHECK(sc_f[0][2] == 7032);

}
TEST_CASE("closed_star_blub_0", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/blub_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 674);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 674);
    CHECK(sc_v[1][0] == 2660);
    CHECK(sc_v[2][0] == 2663);
    CHECK(sc_v[3][0] == 4031);
    CHECK(sc_v[4][0] == 4037);
    CHECK(sc_v[5][0] == 674);
    CHECK(sc_v[5][1] == 2660);
    CHECK(sc_v[6][0] == 674);
    CHECK(sc_v[6][1] == 2663);
    CHECK(sc_v[7][0] == 674);
    CHECK(sc_v[7][1] == 4031);
    CHECK(sc_v[8][0] == 674);
    CHECK(sc_v[8][1] == 4037);
    CHECK(sc_v[9][0] == 2660);
    CHECK(sc_v[9][1] == 2663);
    CHECK(sc_v[10][0] == 2660);
    CHECK(sc_v[10][1] == 4037);
    CHECK(sc_v[11][0] == 4031);
    CHECK(sc_v[11][1] == 4037);
    CHECK(sc_v[12][0] == 674);
    CHECK(sc_v[12][1] == 2660);
    CHECK(sc_v[12][2] == 2663);
    CHECK(sc_v[13][0] == 674);
    CHECK(sc_v[13][1] == 2660);
    CHECK(sc_v[13][2] == 4037);
    CHECK(sc_v[14][0] == 674);
    CHECK(sc_v[14][1] == 4031);
    CHECK(sc_v[14][2] == 4037);

    t = m.tuple_from_id(PV, 2302);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 145);
    CHECK(sc_v[1][0] == 581);
    CHECK(sc_v[2][0] == 2269);
    CHECK(sc_v[3][0] == 2302);
    CHECK(sc_v[4][0] == 2303);
    CHECK(sc_v[5][0] == 2690);
    CHECK(sc_v[6][0] == 2692);
    CHECK(sc_v[7][0] == 145);
    CHECK(sc_v[7][1] == 2269);
    CHECK(sc_v[8][0] == 145);
    CHECK(sc_v[8][1] == 2302);
    CHECK(sc_v[9][0] == 145);
    CHECK(sc_v[9][1] == 2692);
    CHECK(sc_v[10][0] == 581);
    CHECK(sc_v[10][1] == 2302);
    CHECK(sc_v[11][0] == 581);
    CHECK(sc_v[11][1] == 2303);
    CHECK(sc_v[12][0] == 2269);
    CHECK(sc_v[12][1] == 2302);
    CHECK(sc_v[13][0] == 2269);
    CHECK(sc_v[13][1] == 2303);
    CHECK(sc_v[14][0] == 2302);
    CHECK(sc_v[14][1] == 2303);
    CHECK(sc_v[15][0] == 2302);
    CHECK(sc_v[15][1] == 2690);
    CHECK(sc_v[16][0] == 2302);
    CHECK(sc_v[16][1] == 2692);
    CHECK(sc_v[17][0] == 2690);
    CHECK(sc_v[17][1] == 2692);
    CHECK(sc_v[18][0] == 145);
    CHECK(sc_v[18][1] == 2269);
    CHECK(sc_v[18][2] == 2302);
    CHECK(sc_v[19][0] == 145);
    CHECK(sc_v[19][1] == 2302);
    CHECK(sc_v[19][2] == 2692);
    CHECK(sc_v[20][0] == 581);
    CHECK(sc_v[20][1] == 2302);
    CHECK(sc_v[20][2] == 2303);
    CHECK(sc_v[21][0] == 2269);
    CHECK(sc_v[21][1] == 2302);
    CHECK(sc_v[21][2] == 2303);
    CHECK(sc_v[22][0] == 2302);
    CHECK(sc_v[22][1] == 2690);
    CHECK(sc_v[22][2] == 2692);

    t = m.tuple_from_id(PV, 490);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 490);
    CHECK(sc_v[1][0] == 1956);
    CHECK(sc_v[2][0] == 1959);
    CHECK(sc_v[3][0] == 1985);
    CHECK(sc_v[4][0] == 1990);
    CHECK(sc_v[5][0] == 490);
    CHECK(sc_v[5][1] == 1956);
    CHECK(sc_v[6][0] == 490);
    CHECK(sc_v[6][1] == 1959);
    CHECK(sc_v[7][0] == 490);
    CHECK(sc_v[7][1] == 1985);
    CHECK(sc_v[8][0] == 490);
    CHECK(sc_v[8][1] == 1990);
    CHECK(sc_v[9][0] == 1956);
    CHECK(sc_v[9][1] == 1990);
    CHECK(sc_v[10][0] == 1959);
    CHECK(sc_v[10][1] == 1985);
    CHECK(sc_v[11][0] == 1985);
    CHECK(sc_v[11][1] == 1990);
    CHECK(sc_v[12][0] == 490);
    CHECK(sc_v[12][1] == 1956);
    CHECK(sc_v[12][2] == 1990);
    CHECK(sc_v[13][0] == 490);
    CHECK(sc_v[13][1] == 1959);
    CHECK(sc_v[13][2] == 1985);
    CHECK(sc_v[14][0] == 490);
    CHECK(sc_v[14][1] == 1985);
    CHECK(sc_v[14][2] == 1990);

    t = m.tuple_from_id(PV, 2716);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 19);
    CHECK(sc_v[0][0] == 682);
    CHECK(sc_v[1][0] == 692);
    CHECK(sc_v[2][0] == 2716);
    CHECK(sc_v[3][0] == 2718);
    CHECK(sc_v[4][0] == 2719);
    CHECK(sc_v[5][0] == 2720);
    CHECK(sc_v[6][0] == 682);
    CHECK(sc_v[6][1] == 2716);
    CHECK(sc_v[7][0] == 682);
    CHECK(sc_v[7][1] == 2720);
    CHECK(sc_v[8][0] == 692);
    CHECK(sc_v[8][1] == 2716);
    CHECK(sc_v[9][0] == 692);
    CHECK(sc_v[9][1] == 2718);
    CHECK(sc_v[10][0] == 692);
    CHECK(sc_v[10][1] == 2719);
    CHECK(sc_v[11][0] == 2716);
    CHECK(sc_v[11][1] == 2718);
    CHECK(sc_v[12][0] == 2716);
    CHECK(sc_v[12][1] == 2719);
    CHECK(sc_v[13][0] == 2716);
    CHECK(sc_v[13][1] == 2720);
    CHECK(sc_v[14][0] == 2719);
    CHECK(sc_v[14][1] == 2720);
    CHECK(sc_v[15][0] == 682);
    CHECK(sc_v[15][1] == 2716);
    CHECK(sc_v[15][2] == 2720);
    CHECK(sc_v[16][0] == 692);
    CHECK(sc_v[16][1] == 2716);
    CHECK(sc_v[16][2] == 2718);
    CHECK(sc_v[17][0] == 692);
    CHECK(sc_v[17][1] == 2716);
    CHECK(sc_v[17][2] == 2719);
    CHECK(sc_v[18][0] == 2716);
    CHECK(sc_v[18][1] == 2719);
    CHECK(sc_v[18][2] == 2720);

    t = m.tuple_from_id(PV, 971);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 19);
    CHECK(sc_v[0][0] == 971);
    CHECK(sc_v[1][0] == 3796);
    CHECK(sc_v[2][0] == 3797);
    CHECK(sc_v[3][0] == 3798);
    CHECK(sc_v[4][0] == 3804);
    CHECK(sc_v[5][0] == 3805);
    CHECK(sc_v[6][0] == 971);
    CHECK(sc_v[6][1] == 3796);
    CHECK(sc_v[7][0] == 971);
    CHECK(sc_v[7][1] == 3797);
    CHECK(sc_v[8][0] == 971);
    CHECK(sc_v[8][1] == 3798);
    CHECK(sc_v[9][0] == 971);
    CHECK(sc_v[9][1] == 3804);
    CHECK(sc_v[10][0] == 971);
    CHECK(sc_v[10][1] == 3805);
    CHECK(sc_v[11][0] == 3796);
    CHECK(sc_v[11][1] == 3798);
    CHECK(sc_v[12][0] == 3797);
    CHECK(sc_v[12][1] == 3798);
    CHECK(sc_v[13][0] == 3797);
    CHECK(sc_v[13][1] == 3804);
    CHECK(sc_v[14][0] == 3804);
    CHECK(sc_v[14][1] == 3805);
    CHECK(sc_v[15][0] == 971);
    CHECK(sc_v[15][1] == 3796);
    CHECK(sc_v[15][2] == 3798);
    CHECK(sc_v[16][0] == 971);
    CHECK(sc_v[16][1] == 3797);
    CHECK(sc_v[16][2] == 3798);
    CHECK(sc_v[17][0] == 971);
    CHECK(sc_v[17][1] == 3797);
    CHECK(sc_v[17][2] == 3804);
    CHECK(sc_v[18][0] == 971);
    CHECK(sc_v[18][1] == 3804);
    CHECK(sc_v[18][2] == 3805);

    t = m.edge_tuple_from_vids(6395,6489);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 1611);
    CHECK(sc_e[1][0] == 6395);
    CHECK(sc_e[2][0] == 6489);
    CHECK(sc_e[3][0] == 6500);
    CHECK(sc_e[4][0] == 1611);
    CHECK(sc_e[4][1] == 6395);
    CHECK(sc_e[5][0] == 1611);
    CHECK(sc_e[5][1] == 6489);
    CHECK(sc_e[6][0] == 6395);
    CHECK(sc_e[6][1] == 6489);
    CHECK(sc_e[7][0] == 6395);
    CHECK(sc_e[7][1] == 6500);
    CHECK(sc_e[8][0] == 6489);
    CHECK(sc_e[8][1] == 6500);
    CHECK(sc_e[9][0] == 1611);
    CHECK(sc_e[9][1] == 6395);
    CHECK(sc_e[9][2] == 6489);
    CHECK(sc_e[10][0] == 6395);
    CHECK(sc_e[10][1] == 6489);
    CHECK(sc_e[10][2] == 6500);

    t = m.edge_tuple_from_vids(295,6693);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 295);
    CHECK(sc_e[1][0] == 6693);
    CHECK(sc_e[2][0] == 6694);
    CHECK(sc_e[3][0] == 295);
    CHECK(sc_e[3][1] == 6693);
    CHECK(sc_e[4][0] == 295);
    CHECK(sc_e[4][1] == 6694);
    CHECK(sc_e[5][0] == 6693);
    CHECK(sc_e[5][1] == 6694);
    CHECK(sc_e[6][0] == 295);
    CHECK(sc_e[6][1] == 6693);
    CHECK(sc_e[6][2] == 6694);

    t = m.edge_tuple_from_vids(3046,3056);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 778);
    CHECK(sc_e[1][0] == 3039);
    CHECK(sc_e[2][0] == 3046);
    CHECK(sc_e[3][0] == 3056);
    CHECK(sc_e[4][0] == 778);
    CHECK(sc_e[4][1] == 3046);
    CHECK(sc_e[5][0] == 778);
    CHECK(sc_e[5][1] == 3056);
    CHECK(sc_e[6][0] == 3039);
    CHECK(sc_e[6][1] == 3046);
    CHECK(sc_e[7][0] == 3039);
    CHECK(sc_e[7][1] == 3056);
    CHECK(sc_e[8][0] == 3046);
    CHECK(sc_e[8][1] == 3056);
    CHECK(sc_e[9][0] == 778);
    CHECK(sc_e[9][1] == 3046);
    CHECK(sc_e[9][2] == 3056);
    CHECK(sc_e[10][0] == 3039);
    CHECK(sc_e[10][1] == 3046);
    CHECK(sc_e[10][2] == 3056);

    t = m.edge_tuple_from_vids(114,4506);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 114);
    CHECK(sc_e[1][0] == 1829);
    CHECK(sc_e[2][0] == 4504);
    CHECK(sc_e[3][0] == 4506);
    CHECK(sc_e[4][0] == 114);
    CHECK(sc_e[4][1] == 1829);
    CHECK(sc_e[5][0] == 114);
    CHECK(sc_e[5][1] == 4504);
    CHECK(sc_e[6][0] == 114);
    CHECK(sc_e[6][1] == 4506);
    CHECK(sc_e[7][0] == 1829);
    CHECK(sc_e[7][1] == 4506);
    CHECK(sc_e[8][0] == 4504);
    CHECK(sc_e[8][1] == 4506);
    CHECK(sc_e[9][0] == 114);
    CHECK(sc_e[9][1] == 1829);
    CHECK(sc_e[9][2] == 4506);
    CHECK(sc_e[10][0] == 114);
    CHECK(sc_e[10][1] == 4504);
    CHECK(sc_e[10][2] == 4506);

    t = m.edge_tuple_from_vids(2949,5621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 750);
    CHECK(sc_e[1][0] == 2949);
    CHECK(sc_e[2][0] == 5621);
    CHECK(sc_e[3][0] == 5623);
    CHECK(sc_e[4][0] == 750);
    CHECK(sc_e[4][1] == 2949);
    CHECK(sc_e[5][0] == 750);
    CHECK(sc_e[5][1] == 5621);
    CHECK(sc_e[6][0] == 2949);
    CHECK(sc_e[6][1] == 5621);
    CHECK(sc_e[7][0] == 2949);
    CHECK(sc_e[7][1] == 5623);
    CHECK(sc_e[8][0] == 5621);
    CHECK(sc_e[8][1] == 5623);
    CHECK(sc_e[9][0] == 750);
    CHECK(sc_e[9][1] == 2949);
    CHECK(sc_e[9][2] == 5621);
    CHECK(sc_e[10][0] == 2949);
    CHECK(sc_e[10][1] == 5621);
    CHECK(sc_e[10][2] == 5623);

    t = m.face_tuple_from_vids(718, 2814, 2816);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 718);
    CHECK(sc_f[1][0] == 2814);
    CHECK(sc_f[2][0] == 2816);
    CHECK(sc_f[3][0] == 718);
    CHECK(sc_f[3][1] == 2814);
    CHECK(sc_f[4][0] == 718);
    CHECK(sc_f[4][1] == 2816);
    CHECK(sc_f[5][0] == 2814);
    CHECK(sc_f[5][1] == 2816);
    CHECK(sc_f[6][0] == 718);
    CHECK(sc_f[6][1] == 2814);
    CHECK(sc_f[6][2] == 2816);

    t = m.face_tuple_from_vids(2750, 2751, 2753);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2750);
    CHECK(sc_f[1][0] == 2751);
    CHECK(sc_f[2][0] == 2753);
    CHECK(sc_f[3][0] == 2750);
    CHECK(sc_f[3][1] == 2751);
    CHECK(sc_f[4][0] == 2750);
    CHECK(sc_f[4][1] == 2753);
    CHECK(sc_f[5][0] == 2751);
    CHECK(sc_f[5][1] == 2753);
    CHECK(sc_f[6][0] == 2750);
    CHECK(sc_f[6][1] == 2751);
    CHECK(sc_f[6][2] == 2753);

    t = m.face_tuple_from_vids(2058, 2063, 2066);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2058);
    CHECK(sc_f[1][0] == 2063);
    CHECK(sc_f[2][0] == 2066);
    CHECK(sc_f[3][0] == 2058);
    CHECK(sc_f[3][1] == 2063);
    CHECK(sc_f[4][0] == 2058);
    CHECK(sc_f[4][1] == 2066);
    CHECK(sc_f[5][0] == 2063);
    CHECK(sc_f[5][1] == 2066);
    CHECK(sc_f[6][0] == 2058);
    CHECK(sc_f[6][1] == 2063);
    CHECK(sc_f[6][2] == 2066);

    t = m.face_tuple_from_vids(380, 5943, 6281);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 380);
    CHECK(sc_f[1][0] == 5943);
    CHECK(sc_f[2][0] == 6281);
    CHECK(sc_f[3][0] == 380);
    CHECK(sc_f[3][1] == 5943);
    CHECK(sc_f[4][0] == 380);
    CHECK(sc_f[4][1] == 6281);
    CHECK(sc_f[5][0] == 5943);
    CHECK(sc_f[5][1] == 6281);
    CHECK(sc_f[6][0] == 380);
    CHECK(sc_f[6][1] == 5943);
    CHECK(sc_f[6][2] == 6281);

    t = m.face_tuple_from_vids(1758, 7023, 7032);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1758);
    CHECK(sc_f[1][0] == 7023);
    CHECK(sc_f[2][0] == 7032);
    CHECK(sc_f[3][0] == 1758);
    CHECK(sc_f[3][1] == 7023);
    CHECK(sc_f[4][0] == 1758);
    CHECK(sc_f[4][1] == 7032);
    CHECK(sc_f[5][0] == 7023);
    CHECK(sc_f[5][1] == 7032);
    CHECK(sc_f[6][0] == 1758);
    CHECK(sc_f[6][1] == 7023);
    CHECK(sc_f[6][2] == 7032);

}
TEST_CASE("link_blub_0", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/blub_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 674);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 2660);
    CHECK(sc_v[1][0] == 2663);
    CHECK(sc_v[2][0] == 4031);
    CHECK(sc_v[3][0] == 4037);
    CHECK(sc_v[4][0] == 2660);
    CHECK(sc_v[4][1] == 2663);
    CHECK(sc_v[5][0] == 2660);
    CHECK(sc_v[5][1] == 4037);
    CHECK(sc_v[6][0] == 4031);
    CHECK(sc_v[6][1] == 4037);

    t = m.tuple_from_id(PV, 2302);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 145);
    CHECK(sc_v[1][0] == 581);
    CHECK(sc_v[2][0] == 2269);
    CHECK(sc_v[3][0] == 2303);
    CHECK(sc_v[4][0] == 2690);
    CHECK(sc_v[5][0] == 2692);
    CHECK(sc_v[6][0] == 145);
    CHECK(sc_v[6][1] == 2269);
    CHECK(sc_v[7][0] == 145);
    CHECK(sc_v[7][1] == 2692);
    CHECK(sc_v[8][0] == 581);
    CHECK(sc_v[8][1] == 2303);
    CHECK(sc_v[9][0] == 2269);
    CHECK(sc_v[9][1] == 2303);
    CHECK(sc_v[10][0] == 2690);
    CHECK(sc_v[10][1] == 2692);

    t = m.tuple_from_id(PV, 490);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 1956);
    CHECK(sc_v[1][0] == 1959);
    CHECK(sc_v[2][0] == 1985);
    CHECK(sc_v[3][0] == 1990);
    CHECK(sc_v[4][0] == 1956);
    CHECK(sc_v[4][1] == 1990);
    CHECK(sc_v[5][0] == 1959);
    CHECK(sc_v[5][1] == 1985);
    CHECK(sc_v[6][0] == 1985);
    CHECK(sc_v[6][1] == 1990);

    t = m.tuple_from_id(PV, 2716);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 9);
    CHECK(sc_v[0][0] == 682);
    CHECK(sc_v[1][0] == 692);
    CHECK(sc_v[2][0] == 2718);
    CHECK(sc_v[3][0] == 2719);
    CHECK(sc_v[4][0] == 2720);
    CHECK(sc_v[5][0] == 682);
    CHECK(sc_v[5][1] == 2720);
    CHECK(sc_v[6][0] == 692);
    CHECK(sc_v[6][1] == 2718);
    CHECK(sc_v[7][0] == 692);
    CHECK(sc_v[7][1] == 2719);
    CHECK(sc_v[8][0] == 2719);
    CHECK(sc_v[8][1] == 2720);

    t = m.tuple_from_id(PV, 971);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 9);
    CHECK(sc_v[0][0] == 3796);
    CHECK(sc_v[1][0] == 3797);
    CHECK(sc_v[2][0] == 3798);
    CHECK(sc_v[3][0] == 3804);
    CHECK(sc_v[4][0] == 3805);
    CHECK(sc_v[5][0] == 3796);
    CHECK(sc_v[5][1] == 3798);
    CHECK(sc_v[6][0] == 3797);
    CHECK(sc_v[6][1] == 3798);
    CHECK(sc_v[7][0] == 3797);
    CHECK(sc_v[7][1] == 3804);
    CHECK(sc_v[8][0] == 3804);
    CHECK(sc_v[8][1] == 3805);

    t = m.edge_tuple_from_vids(6395,6489);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1611);
    CHECK(sc_e[1][0] == 6500);

    t = m.edge_tuple_from_vids(295,6693);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 6694);

    t = m.edge_tuple_from_vids(3046,3056);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 778);
    CHECK(sc_e[1][0] == 3039);

    t = m.edge_tuple_from_vids(114,4506);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1829);
    CHECK(sc_e[1][0] == 4504);

    t = m.edge_tuple_from_vids(2949,5621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 750);
    CHECK(sc_e[1][0] == 5623);

    t = m.face_tuple_from_vids(718, 2814, 2816);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(2750, 2751, 2753);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(2058, 2063, 2066);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(380, 5943, 6281);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(1758, 7023, 7032);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_blub_0", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/blub_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 674);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 674);

    t = m.tuple_from_id(PV, 2302);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 2302);

    t = m.tuple_from_id(PV, 490);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 490);

    t = m.tuple_from_id(PV, 2716);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 2716);

    t = m.tuple_from_id(PV, 971);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 971);

    t = m.edge_tuple_from_vids(6395,6489);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 6395);
    CHECK(sc_e[1][0] == 6489);
    CHECK(sc_e[2][0] == 6395);
    CHECK(sc_e[2][1] == 6489);

    t = m.edge_tuple_from_vids(295,6693);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 295);
    CHECK(sc_e[1][0] == 6693);
    CHECK(sc_e[2][0] == 295);
    CHECK(sc_e[2][1] == 6693);

    t = m.edge_tuple_from_vids(3046,3056);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3046);
    CHECK(sc_e[1][0] == 3056);
    CHECK(sc_e[2][0] == 3046);
    CHECK(sc_e[2][1] == 3056);

    t = m.edge_tuple_from_vids(114,4506);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 114);
    CHECK(sc_e[1][0] == 4506);
    CHECK(sc_e[2][0] == 114);
    CHECK(sc_e[2][1] == 4506);

    t = m.edge_tuple_from_vids(2949,5621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 2949);
    CHECK(sc_e[1][0] == 5621);
    CHECK(sc_e[2][0] == 2949);
    CHECK(sc_e[2][1] == 5621);

    t = m.face_tuple_from_vids(718, 2814, 2816);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 718);
    CHECK(sc_f[1][0] == 2814);
    CHECK(sc_f[2][0] == 2816);
    CHECK(sc_f[3][0] == 718);
    CHECK(sc_f[3][1] == 2814);
    CHECK(sc_f[4][0] == 718);
    CHECK(sc_f[4][1] == 2816);
    CHECK(sc_f[5][0] == 2814);
    CHECK(sc_f[5][1] == 2816);
    CHECK(sc_f[6][0] == 718);
    CHECK(sc_f[6][1] == 2814);
    CHECK(sc_f[6][2] == 2816);

    t = m.face_tuple_from_vids(2750, 2751, 2753);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2750);
    CHECK(sc_f[1][0] == 2751);
    CHECK(sc_f[2][0] == 2753);
    CHECK(sc_f[3][0] == 2750);
    CHECK(sc_f[3][1] == 2751);
    CHECK(sc_f[4][0] == 2750);
    CHECK(sc_f[4][1] == 2753);
    CHECK(sc_f[5][0] == 2751);
    CHECK(sc_f[5][1] == 2753);
    CHECK(sc_f[6][0] == 2750);
    CHECK(sc_f[6][1] == 2751);
    CHECK(sc_f[6][2] == 2753);

    t = m.face_tuple_from_vids(2058, 2063, 2066);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2058);
    CHECK(sc_f[1][0] == 2063);
    CHECK(sc_f[2][0] == 2066);
    CHECK(sc_f[3][0] == 2058);
    CHECK(sc_f[3][1] == 2063);
    CHECK(sc_f[4][0] == 2058);
    CHECK(sc_f[4][1] == 2066);
    CHECK(sc_f[5][0] == 2063);
    CHECK(sc_f[5][1] == 2066);
    CHECK(sc_f[6][0] == 2058);
    CHECK(sc_f[6][1] == 2063);
    CHECK(sc_f[6][2] == 2066);

    t = m.face_tuple_from_vids(380, 5943, 6281);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 380);
    CHECK(sc_f[1][0] == 5943);
    CHECK(sc_f[2][0] == 6281);
    CHECK(sc_f[3][0] == 380);
    CHECK(sc_f[3][1] == 5943);
    CHECK(sc_f[4][0] == 380);
    CHECK(sc_f[4][1] == 6281);
    CHECK(sc_f[5][0] == 5943);
    CHECK(sc_f[5][1] == 6281);
    CHECK(sc_f[6][0] == 380);
    CHECK(sc_f[6][1] == 5943);
    CHECK(sc_f[6][2] == 6281);

    t = m.face_tuple_from_vids(1758, 7023, 7032);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1758);
    CHECK(sc_f[1][0] == 7023);
    CHECK(sc_f[2][0] == 7032);
    CHECK(sc_f[3][0] == 1758);
    CHECK(sc_f[3][1] == 7023);
    CHECK(sc_f[4][0] == 1758);
    CHECK(sc_f[4][1] == 7032);
    CHECK(sc_f[5][0] == 7023);
    CHECK(sc_f[5][1] == 7032);
    CHECK(sc_f[6][0] == 1758);
    CHECK(sc_f[6][1] == 7023);
    CHECK(sc_f[6][2] == 7032);

}
TEST_CASE("top_coface_simplex_blub_0", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/blub_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 674);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 674);
    CHECK(sc_v[0][1] == 2660);
    CHECK(sc_v[0][2] == 2663);
    CHECK(sc_v[1][0] == 674);
    CHECK(sc_v[1][1] == 2660);
    CHECK(sc_v[1][2] == 4037);
    CHECK(sc_v[2][0] == 674);
    CHECK(sc_v[2][1] == 4031);
    CHECK(sc_v[2][2] == 4037);

    t = m.tuple_from_id(PV, 2302);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 145);
    CHECK(sc_v[0][1] == 2269);
    CHECK(sc_v[0][2] == 2302);
    CHECK(sc_v[1][0] == 145);
    CHECK(sc_v[1][1] == 2302);
    CHECK(sc_v[1][2] == 2692);
    CHECK(sc_v[2][0] == 581);
    CHECK(sc_v[2][1] == 2302);
    CHECK(sc_v[2][2] == 2303);
    CHECK(sc_v[3][0] == 2269);
    CHECK(sc_v[3][1] == 2302);
    CHECK(sc_v[3][2] == 2303);
    CHECK(sc_v[4][0] == 2302);
    CHECK(sc_v[4][1] == 2690);
    CHECK(sc_v[4][2] == 2692);

    t = m.tuple_from_id(PV, 490);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 490);
    CHECK(sc_v[0][1] == 1956);
    CHECK(sc_v[0][2] == 1990);
    CHECK(sc_v[1][0] == 490);
    CHECK(sc_v[1][1] == 1959);
    CHECK(sc_v[1][2] == 1985);
    CHECK(sc_v[2][0] == 490);
    CHECK(sc_v[2][1] == 1985);
    CHECK(sc_v[2][2] == 1990);

    t = m.tuple_from_id(PV, 2716);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 4);
    CHECK(sc_v[0][0] == 682);
    CHECK(sc_v[0][1] == 2716);
    CHECK(sc_v[0][2] == 2720);
    CHECK(sc_v[1][0] == 692);
    CHECK(sc_v[1][1] == 2716);
    CHECK(sc_v[1][2] == 2718);
    CHECK(sc_v[2][0] == 692);
    CHECK(sc_v[2][1] == 2716);
    CHECK(sc_v[2][2] == 2719);
    CHECK(sc_v[3][0] == 2716);
    CHECK(sc_v[3][1] == 2719);
    CHECK(sc_v[3][2] == 2720);

    t = m.tuple_from_id(PV, 971);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 4);
    CHECK(sc_v[0][0] == 971);
    CHECK(sc_v[0][1] == 3796);
    CHECK(sc_v[0][2] == 3798);
    CHECK(sc_v[1][0] == 971);
    CHECK(sc_v[1][1] == 3797);
    CHECK(sc_v[1][2] == 3798);
    CHECK(sc_v[2][0] == 971);
    CHECK(sc_v[2][1] == 3797);
    CHECK(sc_v[2][2] == 3804);
    CHECK(sc_v[3][0] == 971);
    CHECK(sc_v[3][1] == 3804);
    CHECK(sc_v[3][2] == 3805);

    t = m.edge_tuple_from_vids(6395,6489);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1611);
    CHECK(sc_e[0][1] == 6395);
    CHECK(sc_e[0][2] == 6489);
    CHECK(sc_e[1][0] == 6395);
    CHECK(sc_e[1][1] == 6489);
    CHECK(sc_e[1][2] == 6500);

    t = m.edge_tuple_from_vids(295,6693);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 295);
    CHECK(sc_e[0][1] == 6693);
    CHECK(sc_e[0][2] == 6694);

    t = m.edge_tuple_from_vids(3046,3056);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 778);
    CHECK(sc_e[0][1] == 3046);
    CHECK(sc_e[0][2] == 3056);
    CHECK(sc_e[1][0] == 3039);
    CHECK(sc_e[1][1] == 3046);
    CHECK(sc_e[1][2] == 3056);

    t = m.edge_tuple_from_vids(114,4506);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 114);
    CHECK(sc_e[0][1] == 1829);
    CHECK(sc_e[0][2] == 4506);
    CHECK(sc_e[1][0] == 114);
    CHECK(sc_e[1][1] == 4504);
    CHECK(sc_e[1][2] == 4506);

    t = m.edge_tuple_from_vids(2949,5621);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 750);
    CHECK(sc_e[0][1] == 2949);
    CHECK(sc_e[0][2] == 5621);
    CHECK(sc_e[1][0] == 2949);
    CHECK(sc_e[1][1] == 5621);
    CHECK(sc_e[1][2] == 5623);

    t = m.face_tuple_from_vids(718, 2814, 2816);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 718);
    CHECK(sc_f[0][1] == 2814);
    CHECK(sc_f[0][2] == 2816);

    t = m.face_tuple_from_vids(2750, 2751, 2753);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2750);
    CHECK(sc_f[0][1] == 2751);
    CHECK(sc_f[0][2] == 2753);

    t = m.face_tuple_from_vids(2058, 2063, 2066);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2058);
    CHECK(sc_f[0][1] == 2063);
    CHECK(sc_f[0][2] == 2066);

    t = m.face_tuple_from_vids(380, 5943, 6281);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 380);
    CHECK(sc_f[0][1] == 5943);
    CHECK(sc_f[0][2] == 6281);

    t = m.face_tuple_from_vids(1758, 7023, 7032);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1758);
    CHECK(sc_f[0][1] == 7023);
    CHECK(sc_f[0][2] == 7032);

}
TEST_CASE("open_star_armadillo_0", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/armadillo_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 3358);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 3358);
    CHECK(sc_v[1][0] == 3300);
    CHECK(sc_v[1][1] == 3358);
    CHECK(sc_v[2][0] == 3358);
    CHECK(sc_v[2][1] == 3371);
    CHECK(sc_v[3][0] == 3358);
    CHECK(sc_v[3][1] == 25612);
    CHECK(sc_v[4][0] == 3300);
    CHECK(sc_v[4][1] == 3358);
    CHECK(sc_v[4][2] == 25612);
    CHECK(sc_v[5][0] == 3358);
    CHECK(sc_v[5][1] == 3371);
    CHECK(sc_v[5][2] == 25612);

    t = m.tuple_from_id(PV, 16445);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 16445);
    CHECK(sc_v[1][0] == 4864);
    CHECK(sc_v[1][1] == 16445);
    CHECK(sc_v[2][0] == 8690);
    CHECK(sc_v[2][1] == 16445);
    CHECK(sc_v[3][0] == 16428);
    CHECK(sc_v[3][1] == 16445);
    CHECK(sc_v[4][0] == 16445);
    CHECK(sc_v[4][1] == 16478);
    CHECK(sc_v[5][0] == 16445);
    CHECK(sc_v[5][1] == 24797);
    CHECK(sc_v[6][0] == 16445);
    CHECK(sc_v[6][1] == 28477);
    CHECK(sc_v[7][0] == 4864);
    CHECK(sc_v[7][1] == 8690);
    CHECK(sc_v[7][2] == 16445);
    CHECK(sc_v[8][0] == 4864);
    CHECK(sc_v[8][1] == 16445);
    CHECK(sc_v[8][2] == 16478);
    CHECK(sc_v[9][0] == 16428);
    CHECK(sc_v[9][1] == 16445);
    CHECK(sc_v[9][2] == 24797);
    CHECK(sc_v[10][0] == 16445);
    CHECK(sc_v[10][1] == 16478);
    CHECK(sc_v[10][2] == 28477);
    CHECK(sc_v[11][0] == 16445);
    CHECK(sc_v[11][1] == 24797);
    CHECK(sc_v[11][2] == 28477);

    t = m.tuple_from_id(PV, 26970);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 26970);
    CHECK(sc_v[1][0] == 26966);
    CHECK(sc_v[1][1] == 26970);
    CHECK(sc_v[2][0] == 26967);
    CHECK(sc_v[2][1] == 26970);
    CHECK(sc_v[3][0] == 26970);
    CHECK(sc_v[3][1] == 26982);
    CHECK(sc_v[4][0] == 26970);
    CHECK(sc_v[4][1] == 26986);
    CHECK(sc_v[5][0] == 26970);
    CHECK(sc_v[5][1] == 26990);
    CHECK(sc_v[6][0] == 26966);
    CHECK(sc_v[6][1] == 26967);
    CHECK(sc_v[6][2] == 26970);
    CHECK(sc_v[7][0] == 26966);
    CHECK(sc_v[7][1] == 26970);
    CHECK(sc_v[7][2] == 26982);
    CHECK(sc_v[8][0] == 26970);
    CHECK(sc_v[8][1] == 26982);
    CHECK(sc_v[8][2] == 26990);
    CHECK(sc_v[9][0] == 26970);
    CHECK(sc_v[9][1] == 26986);
    CHECK(sc_v[9][2] == 26990);

    t = m.tuple_from_id(PV, 3964);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 3964);
    CHECK(sc_v[1][0] == 3114);
    CHECK(sc_v[1][1] == 3964);
    CHECK(sc_v[2][0] == 3127);
    CHECK(sc_v[2][1] == 3964);
    CHECK(sc_v[3][0] == 3958);
    CHECK(sc_v[3][1] == 3964);
    CHECK(sc_v[4][0] == 3964);
    CHECK(sc_v[4][1] == 3972);
    CHECK(sc_v[5][0] == 3964);
    CHECK(sc_v[5][1] == 5608);
    CHECK(sc_v[6][0] == 3964);
    CHECK(sc_v[6][1] == 5615);
    CHECK(sc_v[7][0] == 3114);
    CHECK(sc_v[7][1] == 3127);
    CHECK(sc_v[7][2] == 3964);
    CHECK(sc_v[8][0] == 3114);
    CHECK(sc_v[8][1] == 3958);
    CHECK(sc_v[8][2] == 3964);
    CHECK(sc_v[9][0] == 3127);
    CHECK(sc_v[9][1] == 3964);
    CHECK(sc_v[9][2] == 3972);
    CHECK(sc_v[10][0] == 3958);
    CHECK(sc_v[10][1] == 3964);
    CHECK(sc_v[10][2] == 5608);
    CHECK(sc_v[11][0] == 3964);
    CHECK(sc_v[11][1] == 3972);
    CHECK(sc_v[11][2] == 5615);

    t = m.tuple_from_id(PV, 38126);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 38126);
    CHECK(sc_v[1][0] == 36761);
    CHECK(sc_v[1][1] == 38126);
    CHECK(sc_v[2][0] == 36853);
    CHECK(sc_v[2][1] == 38126);
    CHECK(sc_v[3][0] == 38126);
    CHECK(sc_v[3][1] == 39396);
    CHECK(sc_v[4][0] == 38126);
    CHECK(sc_v[4][1] == 40722);
    CHECK(sc_v[5][0] == 36761);
    CHECK(sc_v[5][1] == 38126);
    CHECK(sc_v[5][2] == 39396);
    CHECK(sc_v[6][0] == 36853);
    CHECK(sc_v[6][1] == 38126);
    CHECK(sc_v[6][2] == 40722);
    CHECK(sc_v[7][0] == 38126);
    CHECK(sc_v[7][1] == 39396);
    CHECK(sc_v[7][2] == 40722);

    t = m.edge_tuple_from_vids(3584,6033);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3584);
    CHECK(sc_e[0][1] == 6033);
    CHECK(sc_e[1][0] == 3584);
    CHECK(sc_e[1][1] == 5219);
    CHECK(sc_e[1][2] == 6033);
    CHECK(sc_e[2][0] == 3584);
    CHECK(sc_e[2][1] == 5231);
    CHECK(sc_e[2][2] == 6033);

    t = m.edge_tuple_from_vids(33537,38204);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 33537);
    CHECK(sc_e[0][1] == 38204);
    CHECK(sc_e[1][0] == 28633);
    CHECK(sc_e[1][1] == 33537);
    CHECK(sc_e[1][2] == 38204);
    CHECK(sc_e[2][0] == 33537);
    CHECK(sc_e[2][1] == 38204);
    CHECK(sc_e[2][2] == 38242);

    t = m.edge_tuple_from_vids(33854,34294);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 33854);
    CHECK(sc_e[0][1] == 34294);
    CHECK(sc_e[1][0] == 33334);
    CHECK(sc_e[1][1] == 33854);
    CHECK(sc_e[1][2] == 34294);

    t = m.edge_tuple_from_vids(36294,36674);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 36294);
    CHECK(sc_e[0][1] == 36674);
    CHECK(sc_e[1][0] == 36294);
    CHECK(sc_e[1][1] == 36674);
    CHECK(sc_e[1][2] == 37027);

    t = m.edge_tuple_from_vids(5687,5690);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 5687);
    CHECK(sc_e[0][1] == 5690);
    CHECK(sc_e[1][0] == 4036);
    CHECK(sc_e[1][1] == 5687);
    CHECK(sc_e[1][2] == 5690);
    CHECK(sc_e[2][0] == 5687);
    CHECK(sc_e[2][1] == 5690);
    CHECK(sc_e[2][2] == 6585);

    t = m.face_tuple_from_vids(5076, 6762, 6764);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 5076);
    CHECK(sc_f[0][1] == 6762);
    CHECK(sc_f[0][2] == 6764);

    t = m.face_tuple_from_vids(1668, 41900, 41915);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1668);
    CHECK(sc_f[0][1] == 41900);
    CHECK(sc_f[0][2] == 41915);

    t = m.face_tuple_from_vids(18922, 19759, 35140);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 18922);
    CHECK(sc_f[0][1] == 19759);
    CHECK(sc_f[0][2] == 35140);

    t = m.face_tuple_from_vids(19695, 20266, 20758);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 19695);
    CHECK(sc_f[0][1] == 20266);
    CHECK(sc_f[0][2] == 20758);

    t = m.face_tuple_from_vids(20789, 21318, 21854);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 20789);
    CHECK(sc_f[0][1] == 21318);
    CHECK(sc_f[0][2] == 21854);

}
TEST_CASE("closed_star_armadillo_0", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/armadillo_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 3358);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 3300);
    CHECK(sc_v[1][0] == 3358);
    CHECK(sc_v[2][0] == 3371);
    CHECK(sc_v[3][0] == 25612);
    CHECK(sc_v[4][0] == 3300);
    CHECK(sc_v[4][1] == 3358);
    CHECK(sc_v[5][0] == 3300);
    CHECK(sc_v[5][1] == 25612);
    CHECK(sc_v[6][0] == 3358);
    CHECK(sc_v[6][1] == 3371);
    CHECK(sc_v[7][0] == 3358);
    CHECK(sc_v[7][1] == 25612);
    CHECK(sc_v[8][0] == 3371);
    CHECK(sc_v[8][1] == 25612);
    CHECK(sc_v[9][0] == 3300);
    CHECK(sc_v[9][1] == 3358);
    CHECK(sc_v[9][2] == 25612);
    CHECK(sc_v[10][0] == 3358);
    CHECK(sc_v[10][1] == 3371);
    CHECK(sc_v[10][2] == 25612);

    t = m.tuple_from_id(PV, 16445);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 4864);
    CHECK(sc_v[1][0] == 8690);
    CHECK(sc_v[2][0] == 16428);
    CHECK(sc_v[3][0] == 16445);
    CHECK(sc_v[4][0] == 16478);
    CHECK(sc_v[5][0] == 24797);
    CHECK(sc_v[6][0] == 28477);
    CHECK(sc_v[7][0] == 4864);
    CHECK(sc_v[7][1] == 8690);
    CHECK(sc_v[8][0] == 4864);
    CHECK(sc_v[8][1] == 16445);
    CHECK(sc_v[9][0] == 4864);
    CHECK(sc_v[9][1] == 16478);
    CHECK(sc_v[10][0] == 8690);
    CHECK(sc_v[10][1] == 16445);
    CHECK(sc_v[11][0] == 16428);
    CHECK(sc_v[11][1] == 16445);
    CHECK(sc_v[12][0] == 16428);
    CHECK(sc_v[12][1] == 24797);
    CHECK(sc_v[13][0] == 16445);
    CHECK(sc_v[13][1] == 16478);
    CHECK(sc_v[14][0] == 16445);
    CHECK(sc_v[14][1] == 24797);
    CHECK(sc_v[15][0] == 16445);
    CHECK(sc_v[15][1] == 28477);
    CHECK(sc_v[16][0] == 16478);
    CHECK(sc_v[16][1] == 28477);
    CHECK(sc_v[17][0] == 24797);
    CHECK(sc_v[17][1] == 28477);
    CHECK(sc_v[18][0] == 4864);
    CHECK(sc_v[18][1] == 8690);
    CHECK(sc_v[18][2] == 16445);
    CHECK(sc_v[19][0] == 4864);
    CHECK(sc_v[19][1] == 16445);
    CHECK(sc_v[19][2] == 16478);
    CHECK(sc_v[20][0] == 16428);
    CHECK(sc_v[20][1] == 16445);
    CHECK(sc_v[20][2] == 24797);
    CHECK(sc_v[21][0] == 16445);
    CHECK(sc_v[21][1] == 16478);
    CHECK(sc_v[21][2] == 28477);
    CHECK(sc_v[22][0] == 16445);
    CHECK(sc_v[22][1] == 24797);
    CHECK(sc_v[22][2] == 28477);

    t = m.tuple_from_id(PV, 26970);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 19);
    CHECK(sc_v[0][0] == 26966);
    CHECK(sc_v[1][0] == 26967);
    CHECK(sc_v[2][0] == 26970);
    CHECK(sc_v[3][0] == 26982);
    CHECK(sc_v[4][0] == 26986);
    CHECK(sc_v[5][0] == 26990);
    CHECK(sc_v[6][0] == 26966);
    CHECK(sc_v[6][1] == 26967);
    CHECK(sc_v[7][0] == 26966);
    CHECK(sc_v[7][1] == 26970);
    CHECK(sc_v[8][0] == 26966);
    CHECK(sc_v[8][1] == 26982);
    CHECK(sc_v[9][0] == 26967);
    CHECK(sc_v[9][1] == 26970);
    CHECK(sc_v[10][0] == 26970);
    CHECK(sc_v[10][1] == 26982);
    CHECK(sc_v[11][0] == 26970);
    CHECK(sc_v[11][1] == 26986);
    CHECK(sc_v[12][0] == 26970);
    CHECK(sc_v[12][1] == 26990);
    CHECK(sc_v[13][0] == 26982);
    CHECK(sc_v[13][1] == 26990);
    CHECK(sc_v[14][0] == 26986);
    CHECK(sc_v[14][1] == 26990);
    CHECK(sc_v[15][0] == 26966);
    CHECK(sc_v[15][1] == 26967);
    CHECK(sc_v[15][2] == 26970);
    CHECK(sc_v[16][0] == 26966);
    CHECK(sc_v[16][1] == 26970);
    CHECK(sc_v[16][2] == 26982);
    CHECK(sc_v[17][0] == 26970);
    CHECK(sc_v[17][1] == 26982);
    CHECK(sc_v[17][2] == 26990);
    CHECK(sc_v[18][0] == 26970);
    CHECK(sc_v[18][1] == 26986);
    CHECK(sc_v[18][2] == 26990);

    t = m.tuple_from_id(PV, 3964);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 23);
    CHECK(sc_v[0][0] == 3114);
    CHECK(sc_v[1][0] == 3127);
    CHECK(sc_v[2][0] == 3958);
    CHECK(sc_v[3][0] == 3964);
    CHECK(sc_v[4][0] == 3972);
    CHECK(sc_v[5][0] == 5608);
    CHECK(sc_v[6][0] == 5615);
    CHECK(sc_v[7][0] == 3114);
    CHECK(sc_v[7][1] == 3127);
    CHECK(sc_v[8][0] == 3114);
    CHECK(sc_v[8][1] == 3958);
    CHECK(sc_v[9][0] == 3114);
    CHECK(sc_v[9][1] == 3964);
    CHECK(sc_v[10][0] == 3127);
    CHECK(sc_v[10][1] == 3964);
    CHECK(sc_v[11][0] == 3127);
    CHECK(sc_v[11][1] == 3972);
    CHECK(sc_v[12][0] == 3958);
    CHECK(sc_v[12][1] == 3964);
    CHECK(sc_v[13][0] == 3958);
    CHECK(sc_v[13][1] == 5608);
    CHECK(sc_v[14][0] == 3964);
    CHECK(sc_v[14][1] == 3972);
    CHECK(sc_v[15][0] == 3964);
    CHECK(sc_v[15][1] == 5608);
    CHECK(sc_v[16][0] == 3964);
    CHECK(sc_v[16][1] == 5615);
    CHECK(sc_v[17][0] == 3972);
    CHECK(sc_v[17][1] == 5615);
    CHECK(sc_v[18][0] == 3114);
    CHECK(sc_v[18][1] == 3127);
    CHECK(sc_v[18][2] == 3964);
    CHECK(sc_v[19][0] == 3114);
    CHECK(sc_v[19][1] == 3958);
    CHECK(sc_v[19][2] == 3964);
    CHECK(sc_v[20][0] == 3127);
    CHECK(sc_v[20][1] == 3964);
    CHECK(sc_v[20][2] == 3972);
    CHECK(sc_v[21][0] == 3958);
    CHECK(sc_v[21][1] == 3964);
    CHECK(sc_v[21][2] == 5608);
    CHECK(sc_v[22][0] == 3964);
    CHECK(sc_v[22][1] == 3972);
    CHECK(sc_v[22][2] == 5615);

    t = m.tuple_from_id(PV, 38126);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 36761);
    CHECK(sc_v[1][0] == 36853);
    CHECK(sc_v[2][0] == 38126);
    CHECK(sc_v[3][0] == 39396);
    CHECK(sc_v[4][0] == 40722);
    CHECK(sc_v[5][0] == 36761);
    CHECK(sc_v[5][1] == 38126);
    CHECK(sc_v[6][0] == 36761);
    CHECK(sc_v[6][1] == 39396);
    CHECK(sc_v[7][0] == 36853);
    CHECK(sc_v[7][1] == 38126);
    CHECK(sc_v[8][0] == 36853);
    CHECK(sc_v[8][1] == 40722);
    CHECK(sc_v[9][0] == 38126);
    CHECK(sc_v[9][1] == 39396);
    CHECK(sc_v[10][0] == 38126);
    CHECK(sc_v[10][1] == 40722);
    CHECK(sc_v[11][0] == 39396);
    CHECK(sc_v[11][1] == 40722);
    CHECK(sc_v[12][0] == 36761);
    CHECK(sc_v[12][1] == 38126);
    CHECK(sc_v[12][2] == 39396);
    CHECK(sc_v[13][0] == 36853);
    CHECK(sc_v[13][1] == 38126);
    CHECK(sc_v[13][2] == 40722);
    CHECK(sc_v[14][0] == 38126);
    CHECK(sc_v[14][1] == 39396);
    CHECK(sc_v[14][2] == 40722);

    t = m.edge_tuple_from_vids(3584,6033);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 3584);
    CHECK(sc_e[1][0] == 5219);
    CHECK(sc_e[2][0] == 5231);
    CHECK(sc_e[3][0] == 6033);
    CHECK(sc_e[4][0] == 3584);
    CHECK(sc_e[4][1] == 5219);
    CHECK(sc_e[5][0] == 3584);
    CHECK(sc_e[5][1] == 5231);
    CHECK(sc_e[6][0] == 3584);
    CHECK(sc_e[6][1] == 6033);
    CHECK(sc_e[7][0] == 5219);
    CHECK(sc_e[7][1] == 6033);
    CHECK(sc_e[8][0] == 5231);
    CHECK(sc_e[8][1] == 6033);
    CHECK(sc_e[9][0] == 3584);
    CHECK(sc_e[9][1] == 5219);
    CHECK(sc_e[9][2] == 6033);
    CHECK(sc_e[10][0] == 3584);
    CHECK(sc_e[10][1] == 5231);
    CHECK(sc_e[10][2] == 6033);

    t = m.edge_tuple_from_vids(33537,38204);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 28633);
    CHECK(sc_e[1][0] == 33537);
    CHECK(sc_e[2][0] == 38204);
    CHECK(sc_e[3][0] == 38242);
    CHECK(sc_e[4][0] == 28633);
    CHECK(sc_e[4][1] == 33537);
    CHECK(sc_e[5][0] == 28633);
    CHECK(sc_e[5][1] == 38204);
    CHECK(sc_e[6][0] == 33537);
    CHECK(sc_e[6][1] == 38204);
    CHECK(sc_e[7][0] == 33537);
    CHECK(sc_e[7][1] == 38242);
    CHECK(sc_e[8][0] == 38204);
    CHECK(sc_e[8][1] == 38242);
    CHECK(sc_e[9][0] == 28633);
    CHECK(sc_e[9][1] == 33537);
    CHECK(sc_e[9][2] == 38204);
    CHECK(sc_e[10][0] == 33537);
    CHECK(sc_e[10][1] == 38204);
    CHECK(sc_e[10][2] == 38242);

    t = m.edge_tuple_from_vids(33854,34294);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 33334);
    CHECK(sc_e[1][0] == 33854);
    CHECK(sc_e[2][0] == 34294);
    CHECK(sc_e[3][0] == 33334);
    CHECK(sc_e[3][1] == 33854);
    CHECK(sc_e[4][0] == 33334);
    CHECK(sc_e[4][1] == 34294);
    CHECK(sc_e[5][0] == 33854);
    CHECK(sc_e[5][1] == 34294);
    CHECK(sc_e[6][0] == 33334);
    CHECK(sc_e[6][1] == 33854);
    CHECK(sc_e[6][2] == 34294);

    t = m.edge_tuple_from_vids(36294,36674);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 7);
    CHECK(sc_e[0][0] == 36294);
    CHECK(sc_e[1][0] == 36674);
    CHECK(sc_e[2][0] == 37027);
    CHECK(sc_e[3][0] == 36294);
    CHECK(sc_e[3][1] == 36674);
    CHECK(sc_e[4][0] == 36294);
    CHECK(sc_e[4][1] == 37027);
    CHECK(sc_e[5][0] == 36674);
    CHECK(sc_e[5][1] == 37027);
    CHECK(sc_e[6][0] == 36294);
    CHECK(sc_e[6][1] == 36674);
    CHECK(sc_e[6][2] == 37027);

    t = m.edge_tuple_from_vids(5687,5690);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 4036);
    CHECK(sc_e[1][0] == 5687);
    CHECK(sc_e[2][0] == 5690);
    CHECK(sc_e[3][0] == 6585);
    CHECK(sc_e[4][0] == 4036);
    CHECK(sc_e[4][1] == 5687);
    CHECK(sc_e[5][0] == 4036);
    CHECK(sc_e[5][1] == 5690);
    CHECK(sc_e[6][0] == 5687);
    CHECK(sc_e[6][1] == 5690);
    CHECK(sc_e[7][0] == 5687);
    CHECK(sc_e[7][1] == 6585);
    CHECK(sc_e[8][0] == 5690);
    CHECK(sc_e[8][1] == 6585);
    CHECK(sc_e[9][0] == 4036);
    CHECK(sc_e[9][1] == 5687);
    CHECK(sc_e[9][2] == 5690);
    CHECK(sc_e[10][0] == 5687);
    CHECK(sc_e[10][1] == 5690);
    CHECK(sc_e[10][2] == 6585);

    t = m.face_tuple_from_vids(5076, 6762, 6764);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 5076);
    CHECK(sc_f[1][0] == 6762);
    CHECK(sc_f[2][0] == 6764);
    CHECK(sc_f[3][0] == 5076);
    CHECK(sc_f[3][1] == 6762);
    CHECK(sc_f[4][0] == 5076);
    CHECK(sc_f[4][1] == 6764);
    CHECK(sc_f[5][0] == 6762);
    CHECK(sc_f[5][1] == 6764);
    CHECK(sc_f[6][0] == 5076);
    CHECK(sc_f[6][1] == 6762);
    CHECK(sc_f[6][2] == 6764);

    t = m.face_tuple_from_vids(1668, 41900, 41915);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1668);
    CHECK(sc_f[1][0] == 41900);
    CHECK(sc_f[2][0] == 41915);
    CHECK(sc_f[3][0] == 1668);
    CHECK(sc_f[3][1] == 41900);
    CHECK(sc_f[4][0] == 1668);
    CHECK(sc_f[4][1] == 41915);
    CHECK(sc_f[5][0] == 41900);
    CHECK(sc_f[5][1] == 41915);
    CHECK(sc_f[6][0] == 1668);
    CHECK(sc_f[6][1] == 41900);
    CHECK(sc_f[6][2] == 41915);

    t = m.face_tuple_from_vids(18922, 19759, 35140);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 18922);
    CHECK(sc_f[1][0] == 19759);
    CHECK(sc_f[2][0] == 35140);
    CHECK(sc_f[3][0] == 18922);
    CHECK(sc_f[3][1] == 19759);
    CHECK(sc_f[4][0] == 18922);
    CHECK(sc_f[4][1] == 35140);
    CHECK(sc_f[5][0] == 19759);
    CHECK(sc_f[5][1] == 35140);
    CHECK(sc_f[6][0] == 18922);
    CHECK(sc_f[6][1] == 19759);
    CHECK(sc_f[6][2] == 35140);

    t = m.face_tuple_from_vids(19695, 20266, 20758);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 19695);
    CHECK(sc_f[1][0] == 20266);
    CHECK(sc_f[2][0] == 20758);
    CHECK(sc_f[3][0] == 19695);
    CHECK(sc_f[3][1] == 20266);
    CHECK(sc_f[4][0] == 19695);
    CHECK(sc_f[4][1] == 20758);
    CHECK(sc_f[5][0] == 20266);
    CHECK(sc_f[5][1] == 20758);
    CHECK(sc_f[6][0] == 19695);
    CHECK(sc_f[6][1] == 20266);
    CHECK(sc_f[6][2] == 20758);

    t = m.face_tuple_from_vids(20789, 21318, 21854);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 20789);
    CHECK(sc_f[1][0] == 21318);
    CHECK(sc_f[2][0] == 21854);
    CHECK(sc_f[3][0] == 20789);
    CHECK(sc_f[3][1] == 21318);
    CHECK(sc_f[4][0] == 20789);
    CHECK(sc_f[4][1] == 21854);
    CHECK(sc_f[5][0] == 21318);
    CHECK(sc_f[5][1] == 21854);
    CHECK(sc_f[6][0] == 20789);
    CHECK(sc_f[6][1] == 21318);
    CHECK(sc_f[6][2] == 21854);

}
TEST_CASE("link_armadillo_0", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/armadillo_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 3358);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 3300);
    CHECK(sc_v[1][0] == 3371);
    CHECK(sc_v[2][0] == 25612);
    CHECK(sc_v[3][0] == 3300);
    CHECK(sc_v[3][1] == 25612);
    CHECK(sc_v[4][0] == 3371);
    CHECK(sc_v[4][1] == 25612);

    t = m.tuple_from_id(PV, 16445);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 4864);
    CHECK(sc_v[1][0] == 8690);
    CHECK(sc_v[2][0] == 16428);
    CHECK(sc_v[3][0] == 16478);
    CHECK(sc_v[4][0] == 24797);
    CHECK(sc_v[5][0] == 28477);
    CHECK(sc_v[6][0] == 4864);
    CHECK(sc_v[6][1] == 8690);
    CHECK(sc_v[7][0] == 4864);
    CHECK(sc_v[7][1] == 16478);
    CHECK(sc_v[8][0] == 16428);
    CHECK(sc_v[8][1] == 24797);
    CHECK(sc_v[9][0] == 16478);
    CHECK(sc_v[9][1] == 28477);
    CHECK(sc_v[10][0] == 24797);
    CHECK(sc_v[10][1] == 28477);

    t = m.tuple_from_id(PV, 26970);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 9);
    CHECK(sc_v[0][0] == 26966);
    CHECK(sc_v[1][0] == 26967);
    CHECK(sc_v[2][0] == 26982);
    CHECK(sc_v[3][0] == 26986);
    CHECK(sc_v[4][0] == 26990);
    CHECK(sc_v[5][0] == 26966);
    CHECK(sc_v[5][1] == 26967);
    CHECK(sc_v[6][0] == 26966);
    CHECK(sc_v[6][1] == 26982);
    CHECK(sc_v[7][0] == 26982);
    CHECK(sc_v[7][1] == 26990);
    CHECK(sc_v[8][0] == 26986);
    CHECK(sc_v[8][1] == 26990);

    t = m.tuple_from_id(PV, 3964);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 3114);
    CHECK(sc_v[1][0] == 3127);
    CHECK(sc_v[2][0] == 3958);
    CHECK(sc_v[3][0] == 3972);
    CHECK(sc_v[4][0] == 5608);
    CHECK(sc_v[5][0] == 5615);
    CHECK(sc_v[6][0] == 3114);
    CHECK(sc_v[6][1] == 3127);
    CHECK(sc_v[7][0] == 3114);
    CHECK(sc_v[7][1] == 3958);
    CHECK(sc_v[8][0] == 3127);
    CHECK(sc_v[8][1] == 3972);
    CHECK(sc_v[9][0] == 3958);
    CHECK(sc_v[9][1] == 5608);
    CHECK(sc_v[10][0] == 3972);
    CHECK(sc_v[10][1] == 5615);

    t = m.tuple_from_id(PV, 38126);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 36761);
    CHECK(sc_v[1][0] == 36853);
    CHECK(sc_v[2][0] == 39396);
    CHECK(sc_v[3][0] == 40722);
    CHECK(sc_v[4][0] == 36761);
    CHECK(sc_v[4][1] == 39396);
    CHECK(sc_v[5][0] == 36853);
    CHECK(sc_v[5][1] == 40722);
    CHECK(sc_v[6][0] == 39396);
    CHECK(sc_v[6][1] == 40722);

    t = m.edge_tuple_from_vids(3584,6033);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 5219);
    CHECK(sc_e[1][0] == 5231);

    t = m.edge_tuple_from_vids(33537,38204);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 28633);
    CHECK(sc_e[1][0] == 38242);

    t = m.edge_tuple_from_vids(33854,34294);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 33334);

    t = m.edge_tuple_from_vids(36294,36674);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 37027);

    t = m.edge_tuple_from_vids(5687,5690);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 4036);
    CHECK(sc_e[1][0] == 6585);

    t = m.face_tuple_from_vids(5076, 6762, 6764);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(1668, 41900, 41915);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(18922, 19759, 35140);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(19695, 20266, 20758);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(20789, 21318, 21854);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_armadillo_0", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/armadillo_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 3358);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 3358);

    t = m.tuple_from_id(PV, 16445);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 16445);

    t = m.tuple_from_id(PV, 26970);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 26970);

    t = m.tuple_from_id(PV, 3964);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 3964);

    t = m.tuple_from_id(PV, 38126);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 38126);

    t = m.edge_tuple_from_vids(3584,6033);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3584);
    CHECK(sc_e[1][0] == 6033);
    CHECK(sc_e[2][0] == 3584);
    CHECK(sc_e[2][1] == 6033);

    t = m.edge_tuple_from_vids(33537,38204);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 33537);
    CHECK(sc_e[1][0] == 38204);
    CHECK(sc_e[2][0] == 33537);
    CHECK(sc_e[2][1] == 38204);

    t = m.edge_tuple_from_vids(33854,34294);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 33854);
    CHECK(sc_e[1][0] == 34294);
    CHECK(sc_e[2][0] == 33854);
    CHECK(sc_e[2][1] == 34294);

    t = m.edge_tuple_from_vids(36294,36674);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 36294);
    CHECK(sc_e[1][0] == 36674);
    CHECK(sc_e[2][0] == 36294);
    CHECK(sc_e[2][1] == 36674);

    t = m.edge_tuple_from_vids(5687,5690);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 5687);
    CHECK(sc_e[1][0] == 5690);
    CHECK(sc_e[2][0] == 5687);
    CHECK(sc_e[2][1] == 5690);

    t = m.face_tuple_from_vids(5076, 6762, 6764);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 5076);
    CHECK(sc_f[1][0] == 6762);
    CHECK(sc_f[2][0] == 6764);
    CHECK(sc_f[3][0] == 5076);
    CHECK(sc_f[3][1] == 6762);
    CHECK(sc_f[4][0] == 5076);
    CHECK(sc_f[4][1] == 6764);
    CHECK(sc_f[5][0] == 6762);
    CHECK(sc_f[5][1] == 6764);
    CHECK(sc_f[6][0] == 5076);
    CHECK(sc_f[6][1] == 6762);
    CHECK(sc_f[6][2] == 6764);

    t = m.face_tuple_from_vids(1668, 41900, 41915);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 1668);
    CHECK(sc_f[1][0] == 41900);
    CHECK(sc_f[2][0] == 41915);
    CHECK(sc_f[3][0] == 1668);
    CHECK(sc_f[3][1] == 41900);
    CHECK(sc_f[4][0] == 1668);
    CHECK(sc_f[4][1] == 41915);
    CHECK(sc_f[5][0] == 41900);
    CHECK(sc_f[5][1] == 41915);
    CHECK(sc_f[6][0] == 1668);
    CHECK(sc_f[6][1] == 41900);
    CHECK(sc_f[6][2] == 41915);

    t = m.face_tuple_from_vids(18922, 19759, 35140);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 18922);
    CHECK(sc_f[1][0] == 19759);
    CHECK(sc_f[2][0] == 35140);
    CHECK(sc_f[3][0] == 18922);
    CHECK(sc_f[3][1] == 19759);
    CHECK(sc_f[4][0] == 18922);
    CHECK(sc_f[4][1] == 35140);
    CHECK(sc_f[5][0] == 19759);
    CHECK(sc_f[5][1] == 35140);
    CHECK(sc_f[6][0] == 18922);
    CHECK(sc_f[6][1] == 19759);
    CHECK(sc_f[6][2] == 35140);

    t = m.face_tuple_from_vids(19695, 20266, 20758);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 19695);
    CHECK(sc_f[1][0] == 20266);
    CHECK(sc_f[2][0] == 20758);
    CHECK(sc_f[3][0] == 19695);
    CHECK(sc_f[3][1] == 20266);
    CHECK(sc_f[4][0] == 19695);
    CHECK(sc_f[4][1] == 20758);
    CHECK(sc_f[5][0] == 20266);
    CHECK(sc_f[5][1] == 20758);
    CHECK(sc_f[6][0] == 19695);
    CHECK(sc_f[6][1] == 20266);
    CHECK(sc_f[6][2] == 20758);

    t = m.face_tuple_from_vids(20789, 21318, 21854);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 20789);
    CHECK(sc_f[1][0] == 21318);
    CHECK(sc_f[2][0] == 21854);
    CHECK(sc_f[3][0] == 20789);
    CHECK(sc_f[3][1] == 21318);
    CHECK(sc_f[4][0] == 20789);
    CHECK(sc_f[4][1] == 21854);
    CHECK(sc_f[5][0] == 21318);
    CHECK(sc_f[5][1] == 21854);
    CHECK(sc_f[6][0] == 20789);
    CHECK(sc_f[6][1] == 21318);
    CHECK(sc_f[6][2] == 21854);

}
TEST_CASE("top_coface_simplex_armadillo_0", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/armadillo_0.7.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 3358);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 2);
    CHECK(sc_v[0][0] == 3300);
    CHECK(sc_v[0][1] == 3358);
    CHECK(sc_v[0][2] == 25612);
    CHECK(sc_v[1][0] == 3358);
    CHECK(sc_v[1][1] == 3371);
    CHECK(sc_v[1][2] == 25612);

    t = m.tuple_from_id(PV, 16445);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 4864);
    CHECK(sc_v[0][1] == 8690);
    CHECK(sc_v[0][2] == 16445);
    CHECK(sc_v[1][0] == 4864);
    CHECK(sc_v[1][1] == 16445);
    CHECK(sc_v[1][2] == 16478);
    CHECK(sc_v[2][0] == 16428);
    CHECK(sc_v[2][1] == 16445);
    CHECK(sc_v[2][2] == 24797);
    CHECK(sc_v[3][0] == 16445);
    CHECK(sc_v[3][1] == 16478);
    CHECK(sc_v[3][2] == 28477);
    CHECK(sc_v[4][0] == 16445);
    CHECK(sc_v[4][1] == 24797);
    CHECK(sc_v[4][2] == 28477);

    t = m.tuple_from_id(PV, 26970);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 4);
    CHECK(sc_v[0][0] == 26966);
    CHECK(sc_v[0][1] == 26967);
    CHECK(sc_v[0][2] == 26970);
    CHECK(sc_v[1][0] == 26966);
    CHECK(sc_v[1][1] == 26970);
    CHECK(sc_v[1][2] == 26982);
    CHECK(sc_v[2][0] == 26970);
    CHECK(sc_v[2][1] == 26982);
    CHECK(sc_v[2][2] == 26990);
    CHECK(sc_v[3][0] == 26970);
    CHECK(sc_v[3][1] == 26986);
    CHECK(sc_v[3][2] == 26990);

    t = m.tuple_from_id(PV, 3964);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 3114);
    CHECK(sc_v[0][1] == 3127);
    CHECK(sc_v[0][2] == 3964);
    CHECK(sc_v[1][0] == 3114);
    CHECK(sc_v[1][1] == 3958);
    CHECK(sc_v[1][2] == 3964);
    CHECK(sc_v[2][0] == 3127);
    CHECK(sc_v[2][1] == 3964);
    CHECK(sc_v[2][2] == 3972);
    CHECK(sc_v[3][0] == 3958);
    CHECK(sc_v[3][1] == 3964);
    CHECK(sc_v[3][2] == 5608);
    CHECK(sc_v[4][0] == 3964);
    CHECK(sc_v[4][1] == 3972);
    CHECK(sc_v[4][2] == 5615);

    t = m.tuple_from_id(PV, 38126);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 36761);
    CHECK(sc_v[0][1] == 38126);
    CHECK(sc_v[0][2] == 39396);
    CHECK(sc_v[1][0] == 36853);
    CHECK(sc_v[1][1] == 38126);
    CHECK(sc_v[1][2] == 40722);
    CHECK(sc_v[2][0] == 38126);
    CHECK(sc_v[2][1] == 39396);
    CHECK(sc_v[2][2] == 40722);

    t = m.edge_tuple_from_vids(3584,6033);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3584);
    CHECK(sc_e[0][1] == 5219);
    CHECK(sc_e[0][2] == 6033);
    CHECK(sc_e[1][0] == 3584);
    CHECK(sc_e[1][1] == 5231);
    CHECK(sc_e[1][2] == 6033);

    t = m.edge_tuple_from_vids(33537,38204);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 28633);
    CHECK(sc_e[0][1] == 33537);
    CHECK(sc_e[0][2] == 38204);
    CHECK(sc_e[1][0] == 33537);
    CHECK(sc_e[1][1] == 38204);
    CHECK(sc_e[1][2] == 38242);

    t = m.edge_tuple_from_vids(33854,34294);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 33334);
    CHECK(sc_e[0][1] == 33854);
    CHECK(sc_e[0][2] == 34294);

    t = m.edge_tuple_from_vids(36294,36674);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 1);
    CHECK(sc_e[0][0] == 36294);
    CHECK(sc_e[0][1] == 36674);
    CHECK(sc_e[0][2] == 37027);

    t = m.edge_tuple_from_vids(5687,5690);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 4036);
    CHECK(sc_e[0][1] == 5687);
    CHECK(sc_e[0][2] == 5690);
    CHECK(sc_e[1][0] == 5687);
    CHECK(sc_e[1][1] == 5690);
    CHECK(sc_e[1][2] == 6585);

    t = m.face_tuple_from_vids(5076, 6762, 6764);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 5076);
    CHECK(sc_f[0][1] == 6762);
    CHECK(sc_f[0][2] == 6764);

    t = m.face_tuple_from_vids(1668, 41900, 41915);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 1668);
    CHECK(sc_f[0][1] == 41900);
    CHECK(sc_f[0][2] == 41915);

    t = m.face_tuple_from_vids(18922, 19759, 35140);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 18922);
    CHECK(sc_f[0][1] == 19759);
    CHECK(sc_f[0][2] == 35140);

    t = m.face_tuple_from_vids(19695, 20266, 20758);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 19695);
    CHECK(sc_f[0][1] == 20266);
    CHECK(sc_f[0][2] == 20758);

    t = m.face_tuple_from_vids(20789, 21318, 21854);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 20789);
    CHECK(sc_f[0][1] == 21318);
    CHECK(sc_f[0][2] == 21854);

}
