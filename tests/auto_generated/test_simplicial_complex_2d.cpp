
    #include <catch2/catch_test_macros.hpp>
    #include <wmtk/SimplicialComplex.hpp>
    #include <wmtk/TetMesh.hpp>
    #include <wmtk/TriMesh.hpp>
    #include "../tools/DEBUG_TriMesh.hpp"
    #include <igl/read_triangle_mesh.h>

    using namespace wmtk;

    constexpr PrimitiveType PV = PrimitiveType::Vertex;
    constexpr PrimitiveType PE = PrimitiveType::Edge;
    constexpr PrimitiveType PF = PrimitiveType::Face;
    constexpr PrimitiveType PT = PrimitiveType::Tetrahedron;
    TEST_CASE("open_star_circle", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 4842);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 4842);
    CHECK(sc_v[1][0] == 4827);
    CHECK(sc_v[1][1] == 4842);
    CHECK(sc_v[2][0] == 4828);
    CHECK(sc_v[2][1] == 4842);
    CHECK(sc_v[3][0] == 4841);
    CHECK(sc_v[3][1] == 4842);
    CHECK(sc_v[4][0] == 4842);
    CHECK(sc_v[4][1] == 4843);
    CHECK(sc_v[5][0] == 4842);
    CHECK(sc_v[5][1] == 4857);
    CHECK(sc_v[6][0] == 4842);
    CHECK(sc_v[6][1] == 4858);
    CHECK(sc_v[7][0] == 4827);
    CHECK(sc_v[7][1] == 4828);
    CHECK(sc_v[7][2] == 4842);
    CHECK(sc_v[8][0] == 4827);
    CHECK(sc_v[8][1] == 4841);
    CHECK(sc_v[8][2] == 4842);
    CHECK(sc_v[9][0] == 4828);
    CHECK(sc_v[9][1] == 4842);
    CHECK(sc_v[9][2] == 4843);
    CHECK(sc_v[10][0] == 4841);
    CHECK(sc_v[10][1] == 4842);
    CHECK(sc_v[10][2] == 4857);
    CHECK(sc_v[11][0] == 4842);
    CHECK(sc_v[11][1] == 4843);
    CHECK(sc_v[11][2] == 4858);
    CHECK(sc_v[12][0] == 4842);
    CHECK(sc_v[12][1] == 4857);
    CHECK(sc_v[12][2] == 4858);

    t = m.tuple_from_id(PV, 5092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 5092);
    CHECK(sc_v[1][0] == 5065);
    CHECK(sc_v[1][1] == 5092);
    CHECK(sc_v[2][0] == 5066);
    CHECK(sc_v[2][1] == 5092);
    CHECK(sc_v[3][0] == 5091);
    CHECK(sc_v[3][1] == 5092);
    CHECK(sc_v[4][0] == 5092);
    CHECK(sc_v[4][1] == 5093);
    CHECK(sc_v[5][0] == 5092);
    CHECK(sc_v[5][1] == 5119);
    CHECK(sc_v[6][0] == 5092);
    CHECK(sc_v[6][1] == 5120);
    CHECK(sc_v[7][0] == 5065);
    CHECK(sc_v[7][1] == 5066);
    CHECK(sc_v[7][2] == 5092);
    CHECK(sc_v[8][0] == 5065);
    CHECK(sc_v[8][1] == 5091);
    CHECK(sc_v[8][2] == 5092);
    CHECK(sc_v[9][0] == 5066);
    CHECK(sc_v[9][1] == 5092);
    CHECK(sc_v[9][2] == 5093);
    CHECK(sc_v[10][0] == 5091);
    CHECK(sc_v[10][1] == 5092);
    CHECK(sc_v[10][2] == 5119);
    CHECK(sc_v[11][0] == 5092);
    CHECK(sc_v[11][1] == 5093);
    CHECK(sc_v[11][2] == 5120);
    CHECK(sc_v[12][0] == 5092);
    CHECK(sc_v[12][1] == 5119);
    CHECK(sc_v[12][2] == 5120);

    t = m.tuple_from_id(PV, 1173);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 1173);
    CHECK(sc_v[1][0] == 1159);
    CHECK(sc_v[1][1] == 1173);
    CHECK(sc_v[2][0] == 1160);
    CHECK(sc_v[2][1] == 1173);
    CHECK(sc_v[3][0] == 1172);
    CHECK(sc_v[3][1] == 1173);
    CHECK(sc_v[4][0] == 1173);
    CHECK(sc_v[4][1] == 1174);
    CHECK(sc_v[5][0] == 1173);
    CHECK(sc_v[5][1] == 1187);
    CHECK(sc_v[6][0] == 1173);
    CHECK(sc_v[6][1] == 1188);
    CHECK(sc_v[7][0] == 1159);
    CHECK(sc_v[7][1] == 1160);
    CHECK(sc_v[7][2] == 1173);
    CHECK(sc_v[8][0] == 1159);
    CHECK(sc_v[8][1] == 1172);
    CHECK(sc_v[8][2] == 1173);
    CHECK(sc_v[9][0] == 1160);
    CHECK(sc_v[9][1] == 1173);
    CHECK(sc_v[9][2] == 1174);
    CHECK(sc_v[10][0] == 1172);
    CHECK(sc_v[10][1] == 1173);
    CHECK(sc_v[10][2] == 1187);
    CHECK(sc_v[11][0] == 1173);
    CHECK(sc_v[11][1] == 1174);
    CHECK(sc_v[11][2] == 1188);
    CHECK(sc_v[12][0] == 1173);
    CHECK(sc_v[12][1] == 1187);
    CHECK(sc_v[12][2] == 1188);

    t = m.tuple_from_id(PV, 590);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 8);
    CHECK(sc_v[0][0] == 590);
    CHECK(sc_v[1][0] == 575);
    CHECK(sc_v[1][1] == 590);
    CHECK(sc_v[2][0] == 576);
    CHECK(sc_v[2][1] == 590);
    CHECK(sc_v[3][0] == 589);
    CHECK(sc_v[3][1] == 590);
    CHECK(sc_v[4][0] == 590);
    CHECK(sc_v[4][1] == 591);
    CHECK(sc_v[5][0] == 575);
    CHECK(sc_v[5][1] == 576);
    CHECK(sc_v[5][2] == 590);
    CHECK(sc_v[6][0] == 575);
    CHECK(sc_v[6][1] == 589);
    CHECK(sc_v[6][2] == 590);
    CHECK(sc_v[7][0] == 576);
    CHECK(sc_v[7][1] == 590);
    CHECK(sc_v[7][2] == 591);

    t = m.tuple_from_id(PV, 4042);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 4042);
    CHECK(sc_v[1][0] == 4020);
    CHECK(sc_v[1][1] == 4042);
    CHECK(sc_v[2][0] == 4021);
    CHECK(sc_v[2][1] == 4042);
    CHECK(sc_v[3][0] == 4041);
    CHECK(sc_v[3][1] == 4042);
    CHECK(sc_v[4][0] == 4042);
    CHECK(sc_v[4][1] == 4043);
    CHECK(sc_v[5][0] == 4042);
    CHECK(sc_v[5][1] == 4064);
    CHECK(sc_v[6][0] == 4042);
    CHECK(sc_v[6][1] == 4065);
    CHECK(sc_v[7][0] == 4020);
    CHECK(sc_v[7][1] == 4021);
    CHECK(sc_v[7][2] == 4042);
    CHECK(sc_v[8][0] == 4020);
    CHECK(sc_v[8][1] == 4041);
    CHECK(sc_v[8][2] == 4042);
    CHECK(sc_v[9][0] == 4021);
    CHECK(sc_v[9][1] == 4042);
    CHECK(sc_v[9][2] == 4043);
    CHECK(sc_v[10][0] == 4041);
    CHECK(sc_v[10][1] == 4042);
    CHECK(sc_v[10][2] == 4064);
    CHECK(sc_v[11][0] == 4042);
    CHECK(sc_v[11][1] == 4043);
    CHECK(sc_v[11][2] == 4065);
    CHECK(sc_v[12][0] == 4042);
    CHECK(sc_v[12][1] == 4064);
    CHECK(sc_v[12][2] == 4065);

    t = m.edge_tuple_from_vids(3873,3874);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3873);
    CHECK(sc_e[0][1] == 3874);
    CHECK(sc_e[1][0] == 3862);
    CHECK(sc_e[1][1] == 3873);
    CHECK(sc_e[1][2] == 3874);
    CHECK(sc_e[2][0] == 3873);
    CHECK(sc_e[2][1] == 3874);
    CHECK(sc_e[2][2] == 3886);

    t = m.edge_tuple_from_vids(911,923);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 911);
    CHECK(sc_e[0][1] == 923);
    CHECK(sc_e[1][0] == 910);
    CHECK(sc_e[1][1] == 911);
    CHECK(sc_e[1][2] == 923);
    CHECK(sc_e[2][0] == 911);
    CHECK(sc_e[2][1] == 923);
    CHECK(sc_e[2][2] == 924);

    t = m.edge_tuple_from_vids(3993,4012);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3993);
    CHECK(sc_e[0][1] == 4012);
    CHECK(sc_e[1][0] == 3992);
    CHECK(sc_e[1][1] == 3993);
    CHECK(sc_e[1][2] == 4012);
    CHECK(sc_e[2][0] == 3993);
    CHECK(sc_e[2][1] == 4012);
    CHECK(sc_e[2][2] == 4013);

    t = m.edge_tuple_from_vids(1220,1236);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 1220);
    CHECK(sc_e[0][1] == 1236);
    CHECK(sc_e[1][0] == 1220);
    CHECK(sc_e[1][1] == 1221);
    CHECK(sc_e[1][2] == 1236);
    CHECK(sc_e[2][0] == 1220);
    CHECK(sc_e[2][1] == 1235);
    CHECK(sc_e[2][2] == 1236);

    t = m.edge_tuple_from_vids(764,775);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 764);
    CHECK(sc_e[0][1] == 775);
    CHECK(sc_e[1][0] == 764);
    CHECK(sc_e[1][1] == 765);
    CHECK(sc_e[1][2] == 775);
    CHECK(sc_e[2][0] == 764);
    CHECK(sc_e[2][1] == 774);
    CHECK(sc_e[2][2] == 775);

    t = m.face_tuple_from_vids(5021, 5045, 5046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 5021);
    CHECK(sc_f[0][1] == 5045);
    CHECK(sc_f[0][2] == 5046);

    t = m.face_tuple_from_vids(540, 541, 552);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 540);
    CHECK(sc_f[0][1] == 541);
    CHECK(sc_f[0][2] == 552);

    t = m.face_tuple_from_vids(794, 807, 808);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 794);
    CHECK(sc_f[0][1] == 807);
    CHECK(sc_f[0][2] == 808);

    t = m.face_tuple_from_vids(2831, 2832, 2847);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2831);
    CHECK(sc_f[0][1] == 2832);
    CHECK(sc_f[0][2] == 2847);

    t = m.face_tuple_from_vids(4184, 4185, 4213);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4184);
    CHECK(sc_f[0][1] == 4185);
    CHECK(sc_f[0][2] == 4213);

}
TEST_CASE("closed_star_circle", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 4842);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 4827);
    CHECK(sc_v[1][0] == 4828);
    CHECK(sc_v[2][0] == 4841);
    CHECK(sc_v[3][0] == 4842);
    CHECK(sc_v[4][0] == 4843);
    CHECK(sc_v[5][0] == 4857);
    CHECK(sc_v[6][0] == 4858);
    CHECK(sc_v[7][0] == 4827);
    CHECK(sc_v[7][1] == 4828);
    CHECK(sc_v[8][0] == 4827);
    CHECK(sc_v[8][1] == 4841);
    CHECK(sc_v[9][0] == 4827);
    CHECK(sc_v[9][1] == 4842);
    CHECK(sc_v[10][0] == 4828);
    CHECK(sc_v[10][1] == 4842);
    CHECK(sc_v[11][0] == 4828);
    CHECK(sc_v[11][1] == 4843);
    CHECK(sc_v[12][0] == 4841);
    CHECK(sc_v[12][1] == 4842);
    CHECK(sc_v[13][0] == 4841);
    CHECK(sc_v[13][1] == 4857);
    CHECK(sc_v[14][0] == 4842);
    CHECK(sc_v[14][1] == 4843);
    CHECK(sc_v[15][0] == 4842);
    CHECK(sc_v[15][1] == 4857);
    CHECK(sc_v[16][0] == 4842);
    CHECK(sc_v[16][1] == 4858);
    CHECK(sc_v[17][0] == 4843);
    CHECK(sc_v[17][1] == 4858);
    CHECK(sc_v[18][0] == 4857);
    CHECK(sc_v[18][1] == 4858);
    CHECK(sc_v[19][0] == 4827);
    CHECK(sc_v[19][1] == 4828);
    CHECK(sc_v[19][2] == 4842);
    CHECK(sc_v[20][0] == 4827);
    CHECK(sc_v[20][1] == 4841);
    CHECK(sc_v[20][2] == 4842);
    CHECK(sc_v[21][0] == 4828);
    CHECK(sc_v[21][1] == 4842);
    CHECK(sc_v[21][2] == 4843);
    CHECK(sc_v[22][0] == 4841);
    CHECK(sc_v[22][1] == 4842);
    CHECK(sc_v[22][2] == 4857);
    CHECK(sc_v[23][0] == 4842);
    CHECK(sc_v[23][1] == 4843);
    CHECK(sc_v[23][2] == 4858);
    CHECK(sc_v[24][0] == 4842);
    CHECK(sc_v[24][1] == 4857);
    CHECK(sc_v[24][2] == 4858);

    t = m.tuple_from_id(PV, 5092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 5065);
    CHECK(sc_v[1][0] == 5066);
    CHECK(sc_v[2][0] == 5091);
    CHECK(sc_v[3][0] == 5092);
    CHECK(sc_v[4][0] == 5093);
    CHECK(sc_v[5][0] == 5119);
    CHECK(sc_v[6][0] == 5120);
    CHECK(sc_v[7][0] == 5065);
    CHECK(sc_v[7][1] == 5066);
    CHECK(sc_v[8][0] == 5065);
    CHECK(sc_v[8][1] == 5091);
    CHECK(sc_v[9][0] == 5065);
    CHECK(sc_v[9][1] == 5092);
    CHECK(sc_v[10][0] == 5066);
    CHECK(sc_v[10][1] == 5092);
    CHECK(sc_v[11][0] == 5066);
    CHECK(sc_v[11][1] == 5093);
    CHECK(sc_v[12][0] == 5091);
    CHECK(sc_v[12][1] == 5092);
    CHECK(sc_v[13][0] == 5091);
    CHECK(sc_v[13][1] == 5119);
    CHECK(sc_v[14][0] == 5092);
    CHECK(sc_v[14][1] == 5093);
    CHECK(sc_v[15][0] == 5092);
    CHECK(sc_v[15][1] == 5119);
    CHECK(sc_v[16][0] == 5092);
    CHECK(sc_v[16][1] == 5120);
    CHECK(sc_v[17][0] == 5093);
    CHECK(sc_v[17][1] == 5120);
    CHECK(sc_v[18][0] == 5119);
    CHECK(sc_v[18][1] == 5120);
    CHECK(sc_v[19][0] == 5065);
    CHECK(sc_v[19][1] == 5066);
    CHECK(sc_v[19][2] == 5092);
    CHECK(sc_v[20][0] == 5065);
    CHECK(sc_v[20][1] == 5091);
    CHECK(sc_v[20][2] == 5092);
    CHECK(sc_v[21][0] == 5066);
    CHECK(sc_v[21][1] == 5092);
    CHECK(sc_v[21][2] == 5093);
    CHECK(sc_v[22][0] == 5091);
    CHECK(sc_v[22][1] == 5092);
    CHECK(sc_v[22][2] == 5119);
    CHECK(sc_v[23][0] == 5092);
    CHECK(sc_v[23][1] == 5093);
    CHECK(sc_v[23][2] == 5120);
    CHECK(sc_v[24][0] == 5092);
    CHECK(sc_v[24][1] == 5119);
    CHECK(sc_v[24][2] == 5120);

    t = m.tuple_from_id(PV, 1173);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 1159);
    CHECK(sc_v[1][0] == 1160);
    CHECK(sc_v[2][0] == 1172);
    CHECK(sc_v[3][0] == 1173);
    CHECK(sc_v[4][0] == 1174);
    CHECK(sc_v[5][0] == 1187);
    CHECK(sc_v[6][0] == 1188);
    CHECK(sc_v[7][0] == 1159);
    CHECK(sc_v[7][1] == 1160);
    CHECK(sc_v[8][0] == 1159);
    CHECK(sc_v[8][1] == 1172);
    CHECK(sc_v[9][0] == 1159);
    CHECK(sc_v[9][1] == 1173);
    CHECK(sc_v[10][0] == 1160);
    CHECK(sc_v[10][1] == 1173);
    CHECK(sc_v[11][0] == 1160);
    CHECK(sc_v[11][1] == 1174);
    CHECK(sc_v[12][0] == 1172);
    CHECK(sc_v[12][1] == 1173);
    CHECK(sc_v[13][0] == 1172);
    CHECK(sc_v[13][1] == 1187);
    CHECK(sc_v[14][0] == 1173);
    CHECK(sc_v[14][1] == 1174);
    CHECK(sc_v[15][0] == 1173);
    CHECK(sc_v[15][1] == 1187);
    CHECK(sc_v[16][0] == 1173);
    CHECK(sc_v[16][1] == 1188);
    CHECK(sc_v[17][0] == 1174);
    CHECK(sc_v[17][1] == 1188);
    CHECK(sc_v[18][0] == 1187);
    CHECK(sc_v[18][1] == 1188);
    CHECK(sc_v[19][0] == 1159);
    CHECK(sc_v[19][1] == 1160);
    CHECK(sc_v[19][2] == 1173);
    CHECK(sc_v[20][0] == 1159);
    CHECK(sc_v[20][1] == 1172);
    CHECK(sc_v[20][2] == 1173);
    CHECK(sc_v[21][0] == 1160);
    CHECK(sc_v[21][1] == 1173);
    CHECK(sc_v[21][2] == 1174);
    CHECK(sc_v[22][0] == 1172);
    CHECK(sc_v[22][1] == 1173);
    CHECK(sc_v[22][2] == 1187);
    CHECK(sc_v[23][0] == 1173);
    CHECK(sc_v[23][1] == 1174);
    CHECK(sc_v[23][2] == 1188);
    CHECK(sc_v[24][0] == 1173);
    CHECK(sc_v[24][1] == 1187);
    CHECK(sc_v[24][2] == 1188);

    t = m.tuple_from_id(PV, 590);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 15);
    CHECK(sc_v[0][0] == 575);
    CHECK(sc_v[1][0] == 576);
    CHECK(sc_v[2][0] == 589);
    CHECK(sc_v[3][0] == 590);
    CHECK(sc_v[4][0] == 591);
    CHECK(sc_v[5][0] == 575);
    CHECK(sc_v[5][1] == 576);
    CHECK(sc_v[6][0] == 575);
    CHECK(sc_v[6][1] == 589);
    CHECK(sc_v[7][0] == 575);
    CHECK(sc_v[7][1] == 590);
    CHECK(sc_v[8][0] == 576);
    CHECK(sc_v[8][1] == 590);
    CHECK(sc_v[9][0] == 576);
    CHECK(sc_v[9][1] == 591);
    CHECK(sc_v[10][0] == 589);
    CHECK(sc_v[10][1] == 590);
    CHECK(sc_v[11][0] == 590);
    CHECK(sc_v[11][1] == 591);
    CHECK(sc_v[12][0] == 575);
    CHECK(sc_v[12][1] == 576);
    CHECK(sc_v[12][2] == 590);
    CHECK(sc_v[13][0] == 575);
    CHECK(sc_v[13][1] == 589);
    CHECK(sc_v[13][2] == 590);
    CHECK(sc_v[14][0] == 576);
    CHECK(sc_v[14][1] == 590);
    CHECK(sc_v[14][2] == 591);

    t = m.tuple_from_id(PV, 4042);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 4020);
    CHECK(sc_v[1][0] == 4021);
    CHECK(sc_v[2][0] == 4041);
    CHECK(sc_v[3][0] == 4042);
    CHECK(sc_v[4][0] == 4043);
    CHECK(sc_v[5][0] == 4064);
    CHECK(sc_v[6][0] == 4065);
    CHECK(sc_v[7][0] == 4020);
    CHECK(sc_v[7][1] == 4021);
    CHECK(sc_v[8][0] == 4020);
    CHECK(sc_v[8][1] == 4041);
    CHECK(sc_v[9][0] == 4020);
    CHECK(sc_v[9][1] == 4042);
    CHECK(sc_v[10][0] == 4021);
    CHECK(sc_v[10][1] == 4042);
    CHECK(sc_v[11][0] == 4021);
    CHECK(sc_v[11][1] == 4043);
    CHECK(sc_v[12][0] == 4041);
    CHECK(sc_v[12][1] == 4042);
    CHECK(sc_v[13][0] == 4041);
    CHECK(sc_v[13][1] == 4064);
    CHECK(sc_v[14][0] == 4042);
    CHECK(sc_v[14][1] == 4043);
    CHECK(sc_v[15][0] == 4042);
    CHECK(sc_v[15][1] == 4064);
    CHECK(sc_v[16][0] == 4042);
    CHECK(sc_v[16][1] == 4065);
    CHECK(sc_v[17][0] == 4043);
    CHECK(sc_v[17][1] == 4065);
    CHECK(sc_v[18][0] == 4064);
    CHECK(sc_v[18][1] == 4065);
    CHECK(sc_v[19][0] == 4020);
    CHECK(sc_v[19][1] == 4021);
    CHECK(sc_v[19][2] == 4042);
    CHECK(sc_v[20][0] == 4020);
    CHECK(sc_v[20][1] == 4041);
    CHECK(sc_v[20][2] == 4042);
    CHECK(sc_v[21][0] == 4021);
    CHECK(sc_v[21][1] == 4042);
    CHECK(sc_v[21][2] == 4043);
    CHECK(sc_v[22][0] == 4041);
    CHECK(sc_v[22][1] == 4042);
    CHECK(sc_v[22][2] == 4064);
    CHECK(sc_v[23][0] == 4042);
    CHECK(sc_v[23][1] == 4043);
    CHECK(sc_v[23][2] == 4065);
    CHECK(sc_v[24][0] == 4042);
    CHECK(sc_v[24][1] == 4064);
    CHECK(sc_v[24][2] == 4065);

    t = m.edge_tuple_from_vids(3873,3874);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 3862);
    CHECK(sc_e[1][0] == 3873);
    CHECK(sc_e[2][0] == 3874);
    CHECK(sc_e[3][0] == 3886);
    CHECK(sc_e[4][0] == 3862);
    CHECK(sc_e[4][1] == 3873);
    CHECK(sc_e[5][0] == 3862);
    CHECK(sc_e[5][1] == 3874);
    CHECK(sc_e[6][0] == 3873);
    CHECK(sc_e[6][1] == 3874);
    CHECK(sc_e[7][0] == 3873);
    CHECK(sc_e[7][1] == 3886);
    CHECK(sc_e[8][0] == 3874);
    CHECK(sc_e[8][1] == 3886);
    CHECK(sc_e[9][0] == 3862);
    CHECK(sc_e[9][1] == 3873);
    CHECK(sc_e[9][2] == 3874);
    CHECK(sc_e[10][0] == 3873);
    CHECK(sc_e[10][1] == 3874);
    CHECK(sc_e[10][2] == 3886);

    t = m.edge_tuple_from_vids(911,923);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 910);
    CHECK(sc_e[1][0] == 911);
    CHECK(sc_e[2][0] == 923);
    CHECK(sc_e[3][0] == 924);
    CHECK(sc_e[4][0] == 910);
    CHECK(sc_e[4][1] == 911);
    CHECK(sc_e[5][0] == 910);
    CHECK(sc_e[5][1] == 923);
    CHECK(sc_e[6][0] == 911);
    CHECK(sc_e[6][1] == 923);
    CHECK(sc_e[7][0] == 911);
    CHECK(sc_e[7][1] == 924);
    CHECK(sc_e[8][0] == 923);
    CHECK(sc_e[8][1] == 924);
    CHECK(sc_e[9][0] == 910);
    CHECK(sc_e[9][1] == 911);
    CHECK(sc_e[9][2] == 923);
    CHECK(sc_e[10][0] == 911);
    CHECK(sc_e[10][1] == 923);
    CHECK(sc_e[10][2] == 924);

    t = m.edge_tuple_from_vids(3993,4012);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 3992);
    CHECK(sc_e[1][0] == 3993);
    CHECK(sc_e[2][0] == 4012);
    CHECK(sc_e[3][0] == 4013);
    CHECK(sc_e[4][0] == 3992);
    CHECK(sc_e[4][1] == 3993);
    CHECK(sc_e[5][0] == 3992);
    CHECK(sc_e[5][1] == 4012);
    CHECK(sc_e[6][0] == 3993);
    CHECK(sc_e[6][1] == 4012);
    CHECK(sc_e[7][0] == 3993);
    CHECK(sc_e[7][1] == 4013);
    CHECK(sc_e[8][0] == 4012);
    CHECK(sc_e[8][1] == 4013);
    CHECK(sc_e[9][0] == 3992);
    CHECK(sc_e[9][1] == 3993);
    CHECK(sc_e[9][2] == 4012);
    CHECK(sc_e[10][0] == 3993);
    CHECK(sc_e[10][1] == 4012);
    CHECK(sc_e[10][2] == 4013);

    t = m.edge_tuple_from_vids(1220,1236);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 1220);
    CHECK(sc_e[1][0] == 1221);
    CHECK(sc_e[2][0] == 1235);
    CHECK(sc_e[3][0] == 1236);
    CHECK(sc_e[4][0] == 1220);
    CHECK(sc_e[4][1] == 1221);
    CHECK(sc_e[5][0] == 1220);
    CHECK(sc_e[5][1] == 1235);
    CHECK(sc_e[6][0] == 1220);
    CHECK(sc_e[6][1] == 1236);
    CHECK(sc_e[7][0] == 1221);
    CHECK(sc_e[7][1] == 1236);
    CHECK(sc_e[8][0] == 1235);
    CHECK(sc_e[8][1] == 1236);
    CHECK(sc_e[9][0] == 1220);
    CHECK(sc_e[9][1] == 1221);
    CHECK(sc_e[9][2] == 1236);
    CHECK(sc_e[10][0] == 1220);
    CHECK(sc_e[10][1] == 1235);
    CHECK(sc_e[10][2] == 1236);

    t = m.edge_tuple_from_vids(764,775);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 764);
    CHECK(sc_e[1][0] == 765);
    CHECK(sc_e[2][0] == 774);
    CHECK(sc_e[3][0] == 775);
    CHECK(sc_e[4][0] == 764);
    CHECK(sc_e[4][1] == 765);
    CHECK(sc_e[5][0] == 764);
    CHECK(sc_e[5][1] == 774);
    CHECK(sc_e[6][0] == 764);
    CHECK(sc_e[6][1] == 775);
    CHECK(sc_e[7][0] == 765);
    CHECK(sc_e[7][1] == 775);
    CHECK(sc_e[8][0] == 774);
    CHECK(sc_e[8][1] == 775);
    CHECK(sc_e[9][0] == 764);
    CHECK(sc_e[9][1] == 765);
    CHECK(sc_e[9][2] == 775);
    CHECK(sc_e[10][0] == 764);
    CHECK(sc_e[10][1] == 774);
    CHECK(sc_e[10][2] == 775);

    t = m.face_tuple_from_vids(5021, 5045, 5046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 5021);
    CHECK(sc_f[1][0] == 5045);
    CHECK(sc_f[2][0] == 5046);
    CHECK(sc_f[3][0] == 5021);
    CHECK(sc_f[3][1] == 5045);
    CHECK(sc_f[4][0] == 5021);
    CHECK(sc_f[4][1] == 5046);
    CHECK(sc_f[5][0] == 5045);
    CHECK(sc_f[5][1] == 5046);
    CHECK(sc_f[6][0] == 5021);
    CHECK(sc_f[6][1] == 5045);
    CHECK(sc_f[6][2] == 5046);

    t = m.face_tuple_from_vids(540, 541, 552);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 540);
    CHECK(sc_f[1][0] == 541);
    CHECK(sc_f[2][0] == 552);
    CHECK(sc_f[3][0] == 540);
    CHECK(sc_f[3][1] == 541);
    CHECK(sc_f[4][0] == 540);
    CHECK(sc_f[4][1] == 552);
    CHECK(sc_f[5][0] == 541);
    CHECK(sc_f[5][1] == 552);
    CHECK(sc_f[6][0] == 540);
    CHECK(sc_f[6][1] == 541);
    CHECK(sc_f[6][2] == 552);

    t = m.face_tuple_from_vids(794, 807, 808);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 794);
    CHECK(sc_f[1][0] == 807);
    CHECK(sc_f[2][0] == 808);
    CHECK(sc_f[3][0] == 794);
    CHECK(sc_f[3][1] == 807);
    CHECK(sc_f[4][0] == 794);
    CHECK(sc_f[4][1] == 808);
    CHECK(sc_f[5][0] == 807);
    CHECK(sc_f[5][1] == 808);
    CHECK(sc_f[6][0] == 794);
    CHECK(sc_f[6][1] == 807);
    CHECK(sc_f[6][2] == 808);

    t = m.face_tuple_from_vids(2831, 2832, 2847);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2831);
    CHECK(sc_f[1][0] == 2832);
    CHECK(sc_f[2][0] == 2847);
    CHECK(sc_f[3][0] == 2831);
    CHECK(sc_f[3][1] == 2832);
    CHECK(sc_f[4][0] == 2831);
    CHECK(sc_f[4][1] == 2847);
    CHECK(sc_f[5][0] == 2832);
    CHECK(sc_f[5][1] == 2847);
    CHECK(sc_f[6][0] == 2831);
    CHECK(sc_f[6][1] == 2832);
    CHECK(sc_f[6][2] == 2847);

    t = m.face_tuple_from_vids(4184, 4185, 4213);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4184);
    CHECK(sc_f[1][0] == 4185);
    CHECK(sc_f[2][0] == 4213);
    CHECK(sc_f[3][0] == 4184);
    CHECK(sc_f[3][1] == 4185);
    CHECK(sc_f[4][0] == 4184);
    CHECK(sc_f[4][1] == 4213);
    CHECK(sc_f[5][0] == 4185);
    CHECK(sc_f[5][1] == 4213);
    CHECK(sc_f[6][0] == 4184);
    CHECK(sc_f[6][1] == 4185);
    CHECK(sc_f[6][2] == 4213);

}
TEST_CASE("link_circle", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 4842);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 4827);
    CHECK(sc_v[1][0] == 4828);
    CHECK(sc_v[2][0] == 4841);
    CHECK(sc_v[3][0] == 4843);
    CHECK(sc_v[4][0] == 4857);
    CHECK(sc_v[5][0] == 4858);
    CHECK(sc_v[6][0] == 4827);
    CHECK(sc_v[6][1] == 4828);
    CHECK(sc_v[7][0] == 4827);
    CHECK(sc_v[7][1] == 4841);
    CHECK(sc_v[8][0] == 4828);
    CHECK(sc_v[8][1] == 4843);
    CHECK(sc_v[9][0] == 4841);
    CHECK(sc_v[9][1] == 4857);
    CHECK(sc_v[10][0] == 4843);
    CHECK(sc_v[10][1] == 4858);
    CHECK(sc_v[11][0] == 4857);
    CHECK(sc_v[11][1] == 4858);

    t = m.tuple_from_id(PV, 5092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 5065);
    CHECK(sc_v[1][0] == 5066);
    CHECK(sc_v[2][0] == 5091);
    CHECK(sc_v[3][0] == 5093);
    CHECK(sc_v[4][0] == 5119);
    CHECK(sc_v[5][0] == 5120);
    CHECK(sc_v[6][0] == 5065);
    CHECK(sc_v[6][1] == 5066);
    CHECK(sc_v[7][0] == 5065);
    CHECK(sc_v[7][1] == 5091);
    CHECK(sc_v[8][0] == 5066);
    CHECK(sc_v[8][1] == 5093);
    CHECK(sc_v[9][0] == 5091);
    CHECK(sc_v[9][1] == 5119);
    CHECK(sc_v[10][0] == 5093);
    CHECK(sc_v[10][1] == 5120);
    CHECK(sc_v[11][0] == 5119);
    CHECK(sc_v[11][1] == 5120);

    t = m.tuple_from_id(PV, 1173);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 1159);
    CHECK(sc_v[1][0] == 1160);
    CHECK(sc_v[2][0] == 1172);
    CHECK(sc_v[3][0] == 1174);
    CHECK(sc_v[4][0] == 1187);
    CHECK(sc_v[5][0] == 1188);
    CHECK(sc_v[6][0] == 1159);
    CHECK(sc_v[6][1] == 1160);
    CHECK(sc_v[7][0] == 1159);
    CHECK(sc_v[7][1] == 1172);
    CHECK(sc_v[8][0] == 1160);
    CHECK(sc_v[8][1] == 1174);
    CHECK(sc_v[9][0] == 1172);
    CHECK(sc_v[9][1] == 1187);
    CHECK(sc_v[10][0] == 1174);
    CHECK(sc_v[10][1] == 1188);
    CHECK(sc_v[11][0] == 1187);
    CHECK(sc_v[11][1] == 1188);

    t = m.tuple_from_id(PV, 590);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 7);
    CHECK(sc_v[0][0] == 575);
    CHECK(sc_v[1][0] == 576);
    CHECK(sc_v[2][0] == 589);
    CHECK(sc_v[3][0] == 591);
    CHECK(sc_v[4][0] == 575);
    CHECK(sc_v[4][1] == 576);
    CHECK(sc_v[5][0] == 575);
    CHECK(sc_v[5][1] == 589);
    CHECK(sc_v[6][0] == 576);
    CHECK(sc_v[6][1] == 591);

    t = m.tuple_from_id(PV, 4042);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 4020);
    CHECK(sc_v[1][0] == 4021);
    CHECK(sc_v[2][0] == 4041);
    CHECK(sc_v[3][0] == 4043);
    CHECK(sc_v[4][0] == 4064);
    CHECK(sc_v[5][0] == 4065);
    CHECK(sc_v[6][0] == 4020);
    CHECK(sc_v[6][1] == 4021);
    CHECK(sc_v[7][0] == 4020);
    CHECK(sc_v[7][1] == 4041);
    CHECK(sc_v[8][0] == 4021);
    CHECK(sc_v[8][1] == 4043);
    CHECK(sc_v[9][0] == 4041);
    CHECK(sc_v[9][1] == 4064);
    CHECK(sc_v[10][0] == 4043);
    CHECK(sc_v[10][1] == 4065);
    CHECK(sc_v[11][0] == 4064);
    CHECK(sc_v[11][1] == 4065);

    t = m.edge_tuple_from_vids(3873,3874);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3862);
    CHECK(sc_e[1][0] == 3886);

    t = m.edge_tuple_from_vids(911,923);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 910);
    CHECK(sc_e[1][0] == 924);

    t = m.edge_tuple_from_vids(3993,4012);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3992);
    CHECK(sc_e[1][0] == 4013);

    t = m.edge_tuple_from_vids(1220,1236);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1221);
    CHECK(sc_e[1][0] == 1235);

    t = m.edge_tuple_from_vids(764,775);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 765);
    CHECK(sc_e[1][0] == 774);

    t = m.face_tuple_from_vids(5021, 5045, 5046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(540, 541, 552);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(794, 807, 808);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(2831, 2832, 2847);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(4184, 4185, 4213);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_circle", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 4842);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 4842);

    t = m.tuple_from_id(PV, 5092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 5092);

    t = m.tuple_from_id(PV, 1173);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 1173);

    t = m.tuple_from_id(PV, 590);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 590);

    t = m.tuple_from_id(PV, 4042);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 4042);

    t = m.edge_tuple_from_vids(3873,3874);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3873);
    CHECK(sc_e[1][0] == 3874);
    CHECK(sc_e[2][0] == 3873);
    CHECK(sc_e[2][1] == 3874);

    t = m.edge_tuple_from_vids(911,923);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 911);
    CHECK(sc_e[1][0] == 923);
    CHECK(sc_e[2][0] == 911);
    CHECK(sc_e[2][1] == 923);

    t = m.edge_tuple_from_vids(3993,4012);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 3993);
    CHECK(sc_e[1][0] == 4012);
    CHECK(sc_e[2][0] == 3993);
    CHECK(sc_e[2][1] == 4012);

    t = m.edge_tuple_from_vids(1220,1236);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 1220);
    CHECK(sc_e[1][0] == 1236);
    CHECK(sc_e[2][0] == 1220);
    CHECK(sc_e[2][1] == 1236);

    t = m.edge_tuple_from_vids(764,775);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 764);
    CHECK(sc_e[1][0] == 775);
    CHECK(sc_e[2][0] == 764);
    CHECK(sc_e[2][1] == 775);

    t = m.face_tuple_from_vids(5021, 5045, 5046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 5021);
    CHECK(sc_f[1][0] == 5045);
    CHECK(sc_f[2][0] == 5046);
    CHECK(sc_f[3][0] == 5021);
    CHECK(sc_f[3][1] == 5045);
    CHECK(sc_f[4][0] == 5021);
    CHECK(sc_f[4][1] == 5046);
    CHECK(sc_f[5][0] == 5045);
    CHECK(sc_f[5][1] == 5046);
    CHECK(sc_f[6][0] == 5021);
    CHECK(sc_f[6][1] == 5045);
    CHECK(sc_f[6][2] == 5046);

    t = m.face_tuple_from_vids(540, 541, 552);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 540);
    CHECK(sc_f[1][0] == 541);
    CHECK(sc_f[2][0] == 552);
    CHECK(sc_f[3][0] == 540);
    CHECK(sc_f[3][1] == 541);
    CHECK(sc_f[4][0] == 540);
    CHECK(sc_f[4][1] == 552);
    CHECK(sc_f[5][0] == 541);
    CHECK(sc_f[5][1] == 552);
    CHECK(sc_f[6][0] == 540);
    CHECK(sc_f[6][1] == 541);
    CHECK(sc_f[6][2] == 552);

    t = m.face_tuple_from_vids(794, 807, 808);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 794);
    CHECK(sc_f[1][0] == 807);
    CHECK(sc_f[2][0] == 808);
    CHECK(sc_f[3][0] == 794);
    CHECK(sc_f[3][1] == 807);
    CHECK(sc_f[4][0] == 794);
    CHECK(sc_f[4][1] == 808);
    CHECK(sc_f[5][0] == 807);
    CHECK(sc_f[5][1] == 808);
    CHECK(sc_f[6][0] == 794);
    CHECK(sc_f[6][1] == 807);
    CHECK(sc_f[6][2] == 808);

    t = m.face_tuple_from_vids(2831, 2832, 2847);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2831);
    CHECK(sc_f[1][0] == 2832);
    CHECK(sc_f[2][0] == 2847);
    CHECK(sc_f[3][0] == 2831);
    CHECK(sc_f[3][1] == 2832);
    CHECK(sc_f[4][0] == 2831);
    CHECK(sc_f[4][1] == 2847);
    CHECK(sc_f[5][0] == 2832);
    CHECK(sc_f[5][1] == 2847);
    CHECK(sc_f[6][0] == 2831);
    CHECK(sc_f[6][1] == 2832);
    CHECK(sc_f[6][2] == 2847);

    t = m.face_tuple_from_vids(4184, 4185, 4213);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4184);
    CHECK(sc_f[1][0] == 4185);
    CHECK(sc_f[2][0] == 4213);
    CHECK(sc_f[3][0] == 4184);
    CHECK(sc_f[3][1] == 4185);
    CHECK(sc_f[4][0] == 4184);
    CHECK(sc_f[4][1] == 4213);
    CHECK(sc_f[5][0] == 4185);
    CHECK(sc_f[5][1] == 4213);
    CHECK(sc_f[6][0] == 4184);
    CHECK(sc_f[6][1] == 4185);
    CHECK(sc_f[6][2] == 4213);

}
TEST_CASE("top_coface_simplex_circle", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 4842);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 4827);
    CHECK(sc_v[0][1] == 4828);
    CHECK(sc_v[0][2] == 4842);
    CHECK(sc_v[1][0] == 4827);
    CHECK(sc_v[1][1] == 4841);
    CHECK(sc_v[1][2] == 4842);
    CHECK(sc_v[2][0] == 4828);
    CHECK(sc_v[2][1] == 4842);
    CHECK(sc_v[2][2] == 4843);
    CHECK(sc_v[3][0] == 4841);
    CHECK(sc_v[3][1] == 4842);
    CHECK(sc_v[3][2] == 4857);
    CHECK(sc_v[4][0] == 4842);
    CHECK(sc_v[4][1] == 4843);
    CHECK(sc_v[4][2] == 4858);
    CHECK(sc_v[5][0] == 4842);
    CHECK(sc_v[5][1] == 4857);
    CHECK(sc_v[5][2] == 4858);

    t = m.tuple_from_id(PV, 5092);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 5065);
    CHECK(sc_v[0][1] == 5066);
    CHECK(sc_v[0][2] == 5092);
    CHECK(sc_v[1][0] == 5065);
    CHECK(sc_v[1][1] == 5091);
    CHECK(sc_v[1][2] == 5092);
    CHECK(sc_v[2][0] == 5066);
    CHECK(sc_v[2][1] == 5092);
    CHECK(sc_v[2][2] == 5093);
    CHECK(sc_v[3][0] == 5091);
    CHECK(sc_v[3][1] == 5092);
    CHECK(sc_v[3][2] == 5119);
    CHECK(sc_v[4][0] == 5092);
    CHECK(sc_v[4][1] == 5093);
    CHECK(sc_v[4][2] == 5120);
    CHECK(sc_v[5][0] == 5092);
    CHECK(sc_v[5][1] == 5119);
    CHECK(sc_v[5][2] == 5120);

    t = m.tuple_from_id(PV, 1173);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 1159);
    CHECK(sc_v[0][1] == 1160);
    CHECK(sc_v[0][2] == 1173);
    CHECK(sc_v[1][0] == 1159);
    CHECK(sc_v[1][1] == 1172);
    CHECK(sc_v[1][2] == 1173);
    CHECK(sc_v[2][0] == 1160);
    CHECK(sc_v[2][1] == 1173);
    CHECK(sc_v[2][2] == 1174);
    CHECK(sc_v[3][0] == 1172);
    CHECK(sc_v[3][1] == 1173);
    CHECK(sc_v[3][2] == 1187);
    CHECK(sc_v[4][0] == 1173);
    CHECK(sc_v[4][1] == 1174);
    CHECK(sc_v[4][2] == 1188);
    CHECK(sc_v[5][0] == 1173);
    CHECK(sc_v[5][1] == 1187);
    CHECK(sc_v[5][2] == 1188);

    t = m.tuple_from_id(PV, 590);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 3);
    CHECK(sc_v[0][0] == 575);
    CHECK(sc_v[0][1] == 576);
    CHECK(sc_v[0][2] == 590);
    CHECK(sc_v[1][0] == 575);
    CHECK(sc_v[1][1] == 589);
    CHECK(sc_v[1][2] == 590);
    CHECK(sc_v[2][0] == 576);
    CHECK(sc_v[2][1] == 590);
    CHECK(sc_v[2][2] == 591);

    t = m.tuple_from_id(PV, 4042);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 4020);
    CHECK(sc_v[0][1] == 4021);
    CHECK(sc_v[0][2] == 4042);
    CHECK(sc_v[1][0] == 4020);
    CHECK(sc_v[1][1] == 4041);
    CHECK(sc_v[1][2] == 4042);
    CHECK(sc_v[2][0] == 4021);
    CHECK(sc_v[2][1] == 4042);
    CHECK(sc_v[2][2] == 4043);
    CHECK(sc_v[3][0] == 4041);
    CHECK(sc_v[3][1] == 4042);
    CHECK(sc_v[3][2] == 4064);
    CHECK(sc_v[4][0] == 4042);
    CHECK(sc_v[4][1] == 4043);
    CHECK(sc_v[4][2] == 4065);
    CHECK(sc_v[5][0] == 4042);
    CHECK(sc_v[5][1] == 4064);
    CHECK(sc_v[5][2] == 4065);

    t = m.edge_tuple_from_vids(3873,3874);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3862);
    CHECK(sc_e[0][1] == 3873);
    CHECK(sc_e[0][2] == 3874);
    CHECK(sc_e[1][0] == 3873);
    CHECK(sc_e[1][1] == 3874);
    CHECK(sc_e[1][2] == 3886);

    t = m.edge_tuple_from_vids(911,923);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 910);
    CHECK(sc_e[0][1] == 911);
    CHECK(sc_e[0][2] == 923);
    CHECK(sc_e[1][0] == 911);
    CHECK(sc_e[1][1] == 923);
    CHECK(sc_e[1][2] == 924);

    t = m.edge_tuple_from_vids(3993,4012);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 3992);
    CHECK(sc_e[0][1] == 3993);
    CHECK(sc_e[0][2] == 4012);
    CHECK(sc_e[1][0] == 3993);
    CHECK(sc_e[1][1] == 4012);
    CHECK(sc_e[1][2] == 4013);

    t = m.edge_tuple_from_vids(1220,1236);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 1220);
    CHECK(sc_e[0][1] == 1221);
    CHECK(sc_e[0][2] == 1236);
    CHECK(sc_e[1][0] == 1220);
    CHECK(sc_e[1][1] == 1235);
    CHECK(sc_e[1][2] == 1236);

    t = m.edge_tuple_from_vids(764,775);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 764);
    CHECK(sc_e[0][1] == 765);
    CHECK(sc_e[0][2] == 775);
    CHECK(sc_e[1][0] == 764);
    CHECK(sc_e[1][1] == 774);
    CHECK(sc_e[1][2] == 775);

    t = m.face_tuple_from_vids(5021, 5045, 5046);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 5021);
    CHECK(sc_f[0][1] == 5045);
    CHECK(sc_f[0][2] == 5046);

    t = m.face_tuple_from_vids(540, 541, 552);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 540);
    CHECK(sc_f[0][1] == 541);
    CHECK(sc_f[0][2] == 552);

    t = m.face_tuple_from_vids(794, 807, 808);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 794);
    CHECK(sc_f[0][1] == 807);
    CHECK(sc_f[0][2] == 808);

    t = m.face_tuple_from_vids(2831, 2832, 2847);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2831);
    CHECK(sc_f[0][1] == 2832);
    CHECK(sc_f[0][2] == 2847);

    t = m.face_tuple_from_vids(4184, 4185, 4213);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4184);
    CHECK(sc_f[0][1] == 4185);
    CHECK(sc_f[0][2] == 4213);

}
TEST_CASE("open_star_bunny", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 21662);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 21662);
    CHECK(sc_v[1][0] == 5489);
    CHECK(sc_v[1][1] == 21662);
    CHECK(sc_v[2][0] == 15194);
    CHECK(sc_v[2][1] == 21662);
    CHECK(sc_v[3][0] == 21661);
    CHECK(sc_v[3][1] == 21662);
    CHECK(sc_v[4][0] == 21662);
    CHECK(sc_v[4][1] == 21663);
    CHECK(sc_v[5][0] == 21662);
    CHECK(sc_v[5][1] == 22451);
    CHECK(sc_v[6][0] == 21662);
    CHECK(sc_v[6][1] == 22549);
    CHECK(sc_v[7][0] == 5489);
    CHECK(sc_v[7][1] == 15194);
    CHECK(sc_v[7][2] == 21662);
    CHECK(sc_v[8][0] == 5489);
    CHECK(sc_v[8][1] == 21662);
    CHECK(sc_v[8][2] == 21663);
    CHECK(sc_v[9][0] == 15194);
    CHECK(sc_v[9][1] == 21661);
    CHECK(sc_v[9][2] == 21662);
    CHECK(sc_v[10][0] == 21661);
    CHECK(sc_v[10][1] == 21662);
    CHECK(sc_v[10][2] == 22451);
    CHECK(sc_v[11][0] == 21662);
    CHECK(sc_v[11][1] == 21663);
    CHECK(sc_v[11][2] == 22549);
    CHECK(sc_v[12][0] == 21662);
    CHECK(sc_v[12][1] == 22451);
    CHECK(sc_v[12][2] == 22549);

    t = m.tuple_from_id(PV, 27289);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 27289);
    CHECK(sc_v[1][0] == 19128);
    CHECK(sc_v[1][1] == 27289);
    CHECK(sc_v[2][0] == 27289);
    CHECK(sc_v[2][1] == 27402);
    CHECK(sc_v[3][0] == 27289);
    CHECK(sc_v[3][1] == 28869);
    CHECK(sc_v[4][0] == 27289);
    CHECK(sc_v[4][1] == 29425);
    CHECK(sc_v[5][0] == 27289);
    CHECK(sc_v[5][1] == 29688);
    CHECK(sc_v[6][0] == 27289);
    CHECK(sc_v[6][1] == 29763);
    CHECK(sc_v[7][0] == 19128);
    CHECK(sc_v[7][1] == 27289);
    CHECK(sc_v[7][2] == 29688);
    CHECK(sc_v[8][0] == 19128);
    CHECK(sc_v[8][1] == 27289);
    CHECK(sc_v[8][2] == 29763);
    CHECK(sc_v[9][0] == 27289);
    CHECK(sc_v[9][1] == 27402);
    CHECK(sc_v[9][2] == 28869);
    CHECK(sc_v[10][0] == 27289);
    CHECK(sc_v[10][1] == 27402);
    CHECK(sc_v[10][2] == 29688);
    CHECK(sc_v[11][0] == 27289);
    CHECK(sc_v[11][1] == 28869);
    CHECK(sc_v[11][2] == 29425);
    CHECK(sc_v[12][0] == 27289);
    CHECK(sc_v[12][1] == 29425);
    CHECK(sc_v[12][2] == 29763);

    t = m.tuple_from_id(PV, 20366);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 20366);
    CHECK(sc_v[1][0] == 12891);
    CHECK(sc_v[1][1] == 20366);
    CHECK(sc_v[2][0] == 14685);
    CHECK(sc_v[2][1] == 20366);
    CHECK(sc_v[3][0] == 20365);
    CHECK(sc_v[3][1] == 20366);
    CHECK(sc_v[4][0] == 20366);
    CHECK(sc_v[4][1] == 20372);
    CHECK(sc_v[5][0] == 20366);
    CHECK(sc_v[5][1] == 21138);
    CHECK(sc_v[6][0] == 12891);
    CHECK(sc_v[6][1] == 14685);
    CHECK(sc_v[6][2] == 20366);
    CHECK(sc_v[7][0] == 12891);
    CHECK(sc_v[7][1] == 20366);
    CHECK(sc_v[7][2] == 20372);
    CHECK(sc_v[8][0] == 14685);
    CHECK(sc_v[8][1] == 20365);
    CHECK(sc_v[8][2] == 20366);
    CHECK(sc_v[9][0] == 20365);
    CHECK(sc_v[9][1] == 20366);
    CHECK(sc_v[9][2] == 21138);
    CHECK(sc_v[10][0] == 20366);
    CHECK(sc_v[10][1] == 20372);
    CHECK(sc_v[10][2] == 21138);

    t = m.tuple_from_id(PV, 29326);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 29326);
    CHECK(sc_v[1][0] == 29189);
    CHECK(sc_v[1][1] == 29326);
    CHECK(sc_v[2][0] == 29190);
    CHECK(sc_v[2][1] == 29326);
    CHECK(sc_v[3][0] == 29325);
    CHECK(sc_v[3][1] == 29326);
    CHECK(sc_v[4][0] == 29326);
    CHECK(sc_v[4][1] == 29327);
    CHECK(sc_v[5][0] == 29326);
    CHECK(sc_v[5][1] == 29462);
    CHECK(sc_v[6][0] == 29326);
    CHECK(sc_v[6][1] == 29463);
    CHECK(sc_v[7][0] == 29189);
    CHECK(sc_v[7][1] == 29190);
    CHECK(sc_v[7][2] == 29326);
    CHECK(sc_v[8][0] == 29189);
    CHECK(sc_v[8][1] == 29325);
    CHECK(sc_v[8][2] == 29326);
    CHECK(sc_v[9][0] == 29190);
    CHECK(sc_v[9][1] == 29326);
    CHECK(sc_v[9][2] == 29327);
    CHECK(sc_v[10][0] == 29325);
    CHECK(sc_v[10][1] == 29326);
    CHECK(sc_v[10][2] == 29462);
    CHECK(sc_v[11][0] == 29326);
    CHECK(sc_v[11][1] == 29327);
    CHECK(sc_v[11][2] == 29463);
    CHECK(sc_v[12][0] == 29326);
    CHECK(sc_v[12][1] == 29462);
    CHECK(sc_v[12][2] == 29463);

    t = m.tuple_from_id(PV, 5589);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 5589);
    CHECK(sc_v[1][0] == 1871);
    CHECK(sc_v[1][1] == 5589);
    CHECK(sc_v[2][0] == 3336);
    CHECK(sc_v[2][1] == 5589);
    CHECK(sc_v[3][0] == 5589);
    CHECK(sc_v[3][1] == 9630);
    CHECK(sc_v[4][0] == 5589);
    CHECK(sc_v[4][1] == 20645);
    CHECK(sc_v[5][0] == 5589);
    CHECK(sc_v[5][1] == 23153);
    CHECK(sc_v[6][0] == 5589);
    CHECK(sc_v[6][1] == 23236);
    CHECK(sc_v[7][0] == 1871);
    CHECK(sc_v[7][1] == 5589);
    CHECK(sc_v[7][2] == 9630);
    CHECK(sc_v[8][0] == 1871);
    CHECK(sc_v[8][1] == 5589);
    CHECK(sc_v[8][2] == 20645);
    CHECK(sc_v[9][0] == 3336);
    CHECK(sc_v[9][1] == 5589);
    CHECK(sc_v[9][2] == 20645);
    CHECK(sc_v[10][0] == 3336);
    CHECK(sc_v[10][1] == 5589);
    CHECK(sc_v[10][2] == 23153);
    CHECK(sc_v[11][0] == 5589);
    CHECK(sc_v[11][1] == 9630);
    CHECK(sc_v[11][2] == 23236);
    CHECK(sc_v[12][0] == 5589);
    CHECK(sc_v[12][1] == 23153);
    CHECK(sc_v[12][2] == 23236);

    t = m.edge_tuple_from_vids(17254,19017);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 17254);
    CHECK(sc_e[0][1] == 19017);
    CHECK(sc_e[1][0] == 2809);
    CHECK(sc_e[1][1] == 17254);
    CHECK(sc_e[1][2] == 19017);
    CHECK(sc_e[2][0] == 17254);
    CHECK(sc_e[2][1] == 19017);
    CHECK(sc_e[2][2] == 26829);

    t = m.edge_tuple_from_vids(14034,14035);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 14034);
    CHECK(sc_e[0][1] == 14035);
    CHECK(sc_e[1][0] == 13936);
    CHECK(sc_e[1][1] == 14034);
    CHECK(sc_e[1][2] == 14035);
    CHECK(sc_e[2][0] == 14034);
    CHECK(sc_e[2][1] == 14035);
    CHECK(sc_e[2][2] == 14133);

    t = m.edge_tuple_from_vids(8396,8504);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 8396);
    CHECK(sc_e[0][1] == 8504);
    CHECK(sc_e[1][0] == 8396);
    CHECK(sc_e[1][1] == 8397);
    CHECK(sc_e[1][2] == 8504);
    CHECK(sc_e[2][0] == 8396);
    CHECK(sc_e[2][1] == 8503);
    CHECK(sc_e[2][2] == 8504);

    t = m.edge_tuple_from_vids(6086,6216);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 6086);
    CHECK(sc_e[0][1] == 6216);
    CHECK(sc_e[1][0] == 6085);
    CHECK(sc_e[1][1] == 6086);
    CHECK(sc_e[1][2] == 6216);
    CHECK(sc_e[2][0] == 6086);
    CHECK(sc_e[2][1] == 6216);
    CHECK(sc_e[2][2] == 6217);

    t = m.edge_tuple_from_vids(833,953);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 833);
    CHECK(sc_e[0][1] == 953);
    CHECK(sc_e[1][0] == 833);
    CHECK(sc_e[1][1] == 834);
    CHECK(sc_e[1][2] == 953);
    CHECK(sc_e[2][0] == 833);
    CHECK(sc_e[2][1] == 952);
    CHECK(sc_e[2][2] == 953);

    t = m.face_tuple_from_vids(33685, 33695, 34987);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 33685);
    CHECK(sc_f[0][1] == 33695);
    CHECK(sc_f[0][2] == 34987);

    t = m.face_tuple_from_vids(2413, 16174, 16956);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2413);
    CHECK(sc_f[0][1] == 16174);
    CHECK(sc_f[0][2] == 16956);

    t = m.face_tuple_from_vids(13458, 29160, 29297);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13458);
    CHECK(sc_f[0][1] == 29160);
    CHECK(sc_f[0][2] == 29297);

    t = m.face_tuple_from_vids(264, 265, 7321);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 264);
    CHECK(sc_f[0][1] == 265);
    CHECK(sc_f[0][2] == 7321);

    t = m.face_tuple_from_vids(13176, 23781, 25315);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13176);
    CHECK(sc_f[0][1] == 23781);
    CHECK(sc_f[0][2] == 25315);

}
TEST_CASE("closed_star_bunny", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 21662);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 5489);
    CHECK(sc_v[1][0] == 15194);
    CHECK(sc_v[2][0] == 21661);
    CHECK(sc_v[3][0] == 21662);
    CHECK(sc_v[4][0] == 21663);
    CHECK(sc_v[5][0] == 22451);
    CHECK(sc_v[6][0] == 22549);
    CHECK(sc_v[7][0] == 5489);
    CHECK(sc_v[7][1] == 15194);
    CHECK(sc_v[8][0] == 5489);
    CHECK(sc_v[8][1] == 21662);
    CHECK(sc_v[9][0] == 5489);
    CHECK(sc_v[9][1] == 21663);
    CHECK(sc_v[10][0] == 15194);
    CHECK(sc_v[10][1] == 21661);
    CHECK(sc_v[11][0] == 15194);
    CHECK(sc_v[11][1] == 21662);
    CHECK(sc_v[12][0] == 21661);
    CHECK(sc_v[12][1] == 21662);
    CHECK(sc_v[13][0] == 21661);
    CHECK(sc_v[13][1] == 22451);
    CHECK(sc_v[14][0] == 21662);
    CHECK(sc_v[14][1] == 21663);
    CHECK(sc_v[15][0] == 21662);
    CHECK(sc_v[15][1] == 22451);
    CHECK(sc_v[16][0] == 21662);
    CHECK(sc_v[16][1] == 22549);
    CHECK(sc_v[17][0] == 21663);
    CHECK(sc_v[17][1] == 22549);
    CHECK(sc_v[18][0] == 22451);
    CHECK(sc_v[18][1] == 22549);
    CHECK(sc_v[19][0] == 5489);
    CHECK(sc_v[19][1] == 15194);
    CHECK(sc_v[19][2] == 21662);
    CHECK(sc_v[20][0] == 5489);
    CHECK(sc_v[20][1] == 21662);
    CHECK(sc_v[20][2] == 21663);
    CHECK(sc_v[21][0] == 15194);
    CHECK(sc_v[21][1] == 21661);
    CHECK(sc_v[21][2] == 21662);
    CHECK(sc_v[22][0] == 21661);
    CHECK(sc_v[22][1] == 21662);
    CHECK(sc_v[22][2] == 22451);
    CHECK(sc_v[23][0] == 21662);
    CHECK(sc_v[23][1] == 21663);
    CHECK(sc_v[23][2] == 22549);
    CHECK(sc_v[24][0] == 21662);
    CHECK(sc_v[24][1] == 22451);
    CHECK(sc_v[24][2] == 22549);

    t = m.tuple_from_id(PV, 27289);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 19128);
    CHECK(sc_v[1][0] == 27289);
    CHECK(sc_v[2][0] == 27402);
    CHECK(sc_v[3][0] == 28869);
    CHECK(sc_v[4][0] == 29425);
    CHECK(sc_v[5][0] == 29688);
    CHECK(sc_v[6][0] == 29763);
    CHECK(sc_v[7][0] == 19128);
    CHECK(sc_v[7][1] == 27289);
    CHECK(sc_v[8][0] == 19128);
    CHECK(sc_v[8][1] == 29688);
    CHECK(sc_v[9][0] == 19128);
    CHECK(sc_v[9][1] == 29763);
    CHECK(sc_v[10][0] == 27289);
    CHECK(sc_v[10][1] == 27402);
    CHECK(sc_v[11][0] == 27289);
    CHECK(sc_v[11][1] == 28869);
    CHECK(sc_v[12][0] == 27289);
    CHECK(sc_v[12][1] == 29425);
    CHECK(sc_v[13][0] == 27289);
    CHECK(sc_v[13][1] == 29688);
    CHECK(sc_v[14][0] == 27289);
    CHECK(sc_v[14][1] == 29763);
    CHECK(sc_v[15][0] == 27402);
    CHECK(sc_v[15][1] == 28869);
    CHECK(sc_v[16][0] == 27402);
    CHECK(sc_v[16][1] == 29688);
    CHECK(sc_v[17][0] == 28869);
    CHECK(sc_v[17][1] == 29425);
    CHECK(sc_v[18][0] == 29425);
    CHECK(sc_v[18][1] == 29763);
    CHECK(sc_v[19][0] == 19128);
    CHECK(sc_v[19][1] == 27289);
    CHECK(sc_v[19][2] == 29688);
    CHECK(sc_v[20][0] == 19128);
    CHECK(sc_v[20][1] == 27289);
    CHECK(sc_v[20][2] == 29763);
    CHECK(sc_v[21][0] == 27289);
    CHECK(sc_v[21][1] == 27402);
    CHECK(sc_v[21][2] == 28869);
    CHECK(sc_v[22][0] == 27289);
    CHECK(sc_v[22][1] == 27402);
    CHECK(sc_v[22][2] == 29688);
    CHECK(sc_v[23][0] == 27289);
    CHECK(sc_v[23][1] == 28869);
    CHECK(sc_v[23][2] == 29425);
    CHECK(sc_v[24][0] == 27289);
    CHECK(sc_v[24][1] == 29425);
    CHECK(sc_v[24][2] == 29763);

    t = m.tuple_from_id(PV, 20366);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 21);
    CHECK(sc_v[0][0] == 12891);
    CHECK(sc_v[1][0] == 14685);
    CHECK(sc_v[2][0] == 20365);
    CHECK(sc_v[3][0] == 20366);
    CHECK(sc_v[4][0] == 20372);
    CHECK(sc_v[5][0] == 21138);
    CHECK(sc_v[6][0] == 12891);
    CHECK(sc_v[6][1] == 14685);
    CHECK(sc_v[7][0] == 12891);
    CHECK(sc_v[7][1] == 20366);
    CHECK(sc_v[8][0] == 12891);
    CHECK(sc_v[8][1] == 20372);
    CHECK(sc_v[9][0] == 14685);
    CHECK(sc_v[9][1] == 20365);
    CHECK(sc_v[10][0] == 14685);
    CHECK(sc_v[10][1] == 20366);
    CHECK(sc_v[11][0] == 20365);
    CHECK(sc_v[11][1] == 20366);
    CHECK(sc_v[12][0] == 20365);
    CHECK(sc_v[12][1] == 21138);
    CHECK(sc_v[13][0] == 20366);
    CHECK(sc_v[13][1] == 20372);
    CHECK(sc_v[14][0] == 20366);
    CHECK(sc_v[14][1] == 21138);
    CHECK(sc_v[15][0] == 20372);
    CHECK(sc_v[15][1] == 21138);
    CHECK(sc_v[16][0] == 12891);
    CHECK(sc_v[16][1] == 14685);
    CHECK(sc_v[16][2] == 20366);
    CHECK(sc_v[17][0] == 12891);
    CHECK(sc_v[17][1] == 20366);
    CHECK(sc_v[17][2] == 20372);
    CHECK(sc_v[18][0] == 14685);
    CHECK(sc_v[18][1] == 20365);
    CHECK(sc_v[18][2] == 20366);
    CHECK(sc_v[19][0] == 20365);
    CHECK(sc_v[19][1] == 20366);
    CHECK(sc_v[19][2] == 21138);
    CHECK(sc_v[20][0] == 20366);
    CHECK(sc_v[20][1] == 20372);
    CHECK(sc_v[20][2] == 21138);

    t = m.tuple_from_id(PV, 29326);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 29189);
    CHECK(sc_v[1][0] == 29190);
    CHECK(sc_v[2][0] == 29325);
    CHECK(sc_v[3][0] == 29326);
    CHECK(sc_v[4][0] == 29327);
    CHECK(sc_v[5][0] == 29462);
    CHECK(sc_v[6][0] == 29463);
    CHECK(sc_v[7][0] == 29189);
    CHECK(sc_v[7][1] == 29190);
    CHECK(sc_v[8][0] == 29189);
    CHECK(sc_v[8][1] == 29325);
    CHECK(sc_v[9][0] == 29189);
    CHECK(sc_v[9][1] == 29326);
    CHECK(sc_v[10][0] == 29190);
    CHECK(sc_v[10][1] == 29326);
    CHECK(sc_v[11][0] == 29190);
    CHECK(sc_v[11][1] == 29327);
    CHECK(sc_v[12][0] == 29325);
    CHECK(sc_v[12][1] == 29326);
    CHECK(sc_v[13][0] == 29325);
    CHECK(sc_v[13][1] == 29462);
    CHECK(sc_v[14][0] == 29326);
    CHECK(sc_v[14][1] == 29327);
    CHECK(sc_v[15][0] == 29326);
    CHECK(sc_v[15][1] == 29462);
    CHECK(sc_v[16][0] == 29326);
    CHECK(sc_v[16][1] == 29463);
    CHECK(sc_v[17][0] == 29327);
    CHECK(sc_v[17][1] == 29463);
    CHECK(sc_v[18][0] == 29462);
    CHECK(sc_v[18][1] == 29463);
    CHECK(sc_v[19][0] == 29189);
    CHECK(sc_v[19][1] == 29190);
    CHECK(sc_v[19][2] == 29326);
    CHECK(sc_v[20][0] == 29189);
    CHECK(sc_v[20][1] == 29325);
    CHECK(sc_v[20][2] == 29326);
    CHECK(sc_v[21][0] == 29190);
    CHECK(sc_v[21][1] == 29326);
    CHECK(sc_v[21][2] == 29327);
    CHECK(sc_v[22][0] == 29325);
    CHECK(sc_v[22][1] == 29326);
    CHECK(sc_v[22][2] == 29462);
    CHECK(sc_v[23][0] == 29326);
    CHECK(sc_v[23][1] == 29327);
    CHECK(sc_v[23][2] == 29463);
    CHECK(sc_v[24][0] == 29326);
    CHECK(sc_v[24][1] == 29462);
    CHECK(sc_v[24][2] == 29463);

    t = m.tuple_from_id(PV, 5589);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 1871);
    CHECK(sc_v[1][0] == 3336);
    CHECK(sc_v[2][0] == 5589);
    CHECK(sc_v[3][0] == 9630);
    CHECK(sc_v[4][0] == 20645);
    CHECK(sc_v[5][0] == 23153);
    CHECK(sc_v[6][0] == 23236);
    CHECK(sc_v[7][0] == 1871);
    CHECK(sc_v[7][1] == 5589);
    CHECK(sc_v[8][0] == 1871);
    CHECK(sc_v[8][1] == 9630);
    CHECK(sc_v[9][0] == 1871);
    CHECK(sc_v[9][1] == 20645);
    CHECK(sc_v[10][0] == 3336);
    CHECK(sc_v[10][1] == 5589);
    CHECK(sc_v[11][0] == 3336);
    CHECK(sc_v[11][1] == 20645);
    CHECK(sc_v[12][0] == 3336);
    CHECK(sc_v[12][1] == 23153);
    CHECK(sc_v[13][0] == 5589);
    CHECK(sc_v[13][1] == 9630);
    CHECK(sc_v[14][0] == 5589);
    CHECK(sc_v[14][1] == 20645);
    CHECK(sc_v[15][0] == 5589);
    CHECK(sc_v[15][1] == 23153);
    CHECK(sc_v[16][0] == 5589);
    CHECK(sc_v[16][1] == 23236);
    CHECK(sc_v[17][0] == 9630);
    CHECK(sc_v[17][1] == 23236);
    CHECK(sc_v[18][0] == 23153);
    CHECK(sc_v[18][1] == 23236);
    CHECK(sc_v[19][0] == 1871);
    CHECK(sc_v[19][1] == 5589);
    CHECK(sc_v[19][2] == 9630);
    CHECK(sc_v[20][0] == 1871);
    CHECK(sc_v[20][1] == 5589);
    CHECK(sc_v[20][2] == 20645);
    CHECK(sc_v[21][0] == 3336);
    CHECK(sc_v[21][1] == 5589);
    CHECK(sc_v[21][2] == 20645);
    CHECK(sc_v[22][0] == 3336);
    CHECK(sc_v[22][1] == 5589);
    CHECK(sc_v[22][2] == 23153);
    CHECK(sc_v[23][0] == 5589);
    CHECK(sc_v[23][1] == 9630);
    CHECK(sc_v[23][2] == 23236);
    CHECK(sc_v[24][0] == 5589);
    CHECK(sc_v[24][1] == 23153);
    CHECK(sc_v[24][2] == 23236);

    t = m.edge_tuple_from_vids(17254,19017);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 2809);
    CHECK(sc_e[1][0] == 17254);
    CHECK(sc_e[2][0] == 19017);
    CHECK(sc_e[3][0] == 26829);
    CHECK(sc_e[4][0] == 2809);
    CHECK(sc_e[4][1] == 17254);
    CHECK(sc_e[5][0] == 2809);
    CHECK(sc_e[5][1] == 19017);
    CHECK(sc_e[6][0] == 17254);
    CHECK(sc_e[6][1] == 19017);
    CHECK(sc_e[7][0] == 17254);
    CHECK(sc_e[7][1] == 26829);
    CHECK(sc_e[8][0] == 19017);
    CHECK(sc_e[8][1] == 26829);
    CHECK(sc_e[9][0] == 2809);
    CHECK(sc_e[9][1] == 17254);
    CHECK(sc_e[9][2] == 19017);
    CHECK(sc_e[10][0] == 17254);
    CHECK(sc_e[10][1] == 19017);
    CHECK(sc_e[10][2] == 26829);

    t = m.edge_tuple_from_vids(14034,14035);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 13936);
    CHECK(sc_e[1][0] == 14034);
    CHECK(sc_e[2][0] == 14035);
    CHECK(sc_e[3][0] == 14133);
    CHECK(sc_e[4][0] == 13936);
    CHECK(sc_e[4][1] == 14034);
    CHECK(sc_e[5][0] == 13936);
    CHECK(sc_e[5][1] == 14035);
    CHECK(sc_e[6][0] == 14034);
    CHECK(sc_e[6][1] == 14035);
    CHECK(sc_e[7][0] == 14034);
    CHECK(sc_e[7][1] == 14133);
    CHECK(sc_e[8][0] == 14035);
    CHECK(sc_e[8][1] == 14133);
    CHECK(sc_e[9][0] == 13936);
    CHECK(sc_e[9][1] == 14034);
    CHECK(sc_e[9][2] == 14035);
    CHECK(sc_e[10][0] == 14034);
    CHECK(sc_e[10][1] == 14035);
    CHECK(sc_e[10][2] == 14133);

    t = m.edge_tuple_from_vids(8396,8504);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 8396);
    CHECK(sc_e[1][0] == 8397);
    CHECK(sc_e[2][0] == 8503);
    CHECK(sc_e[3][0] == 8504);
    CHECK(sc_e[4][0] == 8396);
    CHECK(sc_e[4][1] == 8397);
    CHECK(sc_e[5][0] == 8396);
    CHECK(sc_e[5][1] == 8503);
    CHECK(sc_e[6][0] == 8396);
    CHECK(sc_e[6][1] == 8504);
    CHECK(sc_e[7][0] == 8397);
    CHECK(sc_e[7][1] == 8504);
    CHECK(sc_e[8][0] == 8503);
    CHECK(sc_e[8][1] == 8504);
    CHECK(sc_e[9][0] == 8396);
    CHECK(sc_e[9][1] == 8397);
    CHECK(sc_e[9][2] == 8504);
    CHECK(sc_e[10][0] == 8396);
    CHECK(sc_e[10][1] == 8503);
    CHECK(sc_e[10][2] == 8504);

    t = m.edge_tuple_from_vids(6086,6216);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 6085);
    CHECK(sc_e[1][0] == 6086);
    CHECK(sc_e[2][0] == 6216);
    CHECK(sc_e[3][0] == 6217);
    CHECK(sc_e[4][0] == 6085);
    CHECK(sc_e[4][1] == 6086);
    CHECK(sc_e[5][0] == 6085);
    CHECK(sc_e[5][1] == 6216);
    CHECK(sc_e[6][0] == 6086);
    CHECK(sc_e[6][1] == 6216);
    CHECK(sc_e[7][0] == 6086);
    CHECK(sc_e[7][1] == 6217);
    CHECK(sc_e[8][0] == 6216);
    CHECK(sc_e[8][1] == 6217);
    CHECK(sc_e[9][0] == 6085);
    CHECK(sc_e[9][1] == 6086);
    CHECK(sc_e[9][2] == 6216);
    CHECK(sc_e[10][0] == 6086);
    CHECK(sc_e[10][1] == 6216);
    CHECK(sc_e[10][2] == 6217);

    t = m.edge_tuple_from_vids(833,953);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 833);
    CHECK(sc_e[1][0] == 834);
    CHECK(sc_e[2][0] == 952);
    CHECK(sc_e[3][0] == 953);
    CHECK(sc_e[4][0] == 833);
    CHECK(sc_e[4][1] == 834);
    CHECK(sc_e[5][0] == 833);
    CHECK(sc_e[5][1] == 952);
    CHECK(sc_e[6][0] == 833);
    CHECK(sc_e[6][1] == 953);
    CHECK(sc_e[7][0] == 834);
    CHECK(sc_e[7][1] == 953);
    CHECK(sc_e[8][0] == 952);
    CHECK(sc_e[8][1] == 953);
    CHECK(sc_e[9][0] == 833);
    CHECK(sc_e[9][1] == 834);
    CHECK(sc_e[9][2] == 953);
    CHECK(sc_e[10][0] == 833);
    CHECK(sc_e[10][1] == 952);
    CHECK(sc_e[10][2] == 953);

    t = m.face_tuple_from_vids(33685, 33695, 34987);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 33685);
    CHECK(sc_f[1][0] == 33695);
    CHECK(sc_f[2][0] == 34987);
    CHECK(sc_f[3][0] == 33685);
    CHECK(sc_f[3][1] == 33695);
    CHECK(sc_f[4][0] == 33685);
    CHECK(sc_f[4][1] == 34987);
    CHECK(sc_f[5][0] == 33695);
    CHECK(sc_f[5][1] == 34987);
    CHECK(sc_f[6][0] == 33685);
    CHECK(sc_f[6][1] == 33695);
    CHECK(sc_f[6][2] == 34987);

    t = m.face_tuple_from_vids(2413, 16174, 16956);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2413);
    CHECK(sc_f[1][0] == 16174);
    CHECK(sc_f[2][0] == 16956);
    CHECK(sc_f[3][0] == 2413);
    CHECK(sc_f[3][1] == 16174);
    CHECK(sc_f[4][0] == 2413);
    CHECK(sc_f[4][1] == 16956);
    CHECK(sc_f[5][0] == 16174);
    CHECK(sc_f[5][1] == 16956);
    CHECK(sc_f[6][0] == 2413);
    CHECK(sc_f[6][1] == 16174);
    CHECK(sc_f[6][2] == 16956);

    t = m.face_tuple_from_vids(13458, 29160, 29297);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13458);
    CHECK(sc_f[1][0] == 29160);
    CHECK(sc_f[2][0] == 29297);
    CHECK(sc_f[3][0] == 13458);
    CHECK(sc_f[3][1] == 29160);
    CHECK(sc_f[4][0] == 13458);
    CHECK(sc_f[4][1] == 29297);
    CHECK(sc_f[5][0] == 29160);
    CHECK(sc_f[5][1] == 29297);
    CHECK(sc_f[6][0] == 13458);
    CHECK(sc_f[6][1] == 29160);
    CHECK(sc_f[6][2] == 29297);

    t = m.face_tuple_from_vids(264, 265, 7321);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 264);
    CHECK(sc_f[1][0] == 265);
    CHECK(sc_f[2][0] == 7321);
    CHECK(sc_f[3][0] == 264);
    CHECK(sc_f[3][1] == 265);
    CHECK(sc_f[4][0] == 264);
    CHECK(sc_f[4][1] == 7321);
    CHECK(sc_f[5][0] == 265);
    CHECK(sc_f[5][1] == 7321);
    CHECK(sc_f[6][0] == 264);
    CHECK(sc_f[6][1] == 265);
    CHECK(sc_f[6][2] == 7321);

    t = m.face_tuple_from_vids(13176, 23781, 25315);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13176);
    CHECK(sc_f[1][0] == 23781);
    CHECK(sc_f[2][0] == 25315);
    CHECK(sc_f[3][0] == 13176);
    CHECK(sc_f[3][1] == 23781);
    CHECK(sc_f[4][0] == 13176);
    CHECK(sc_f[4][1] == 25315);
    CHECK(sc_f[5][0] == 23781);
    CHECK(sc_f[5][1] == 25315);
    CHECK(sc_f[6][0] == 13176);
    CHECK(sc_f[6][1] == 23781);
    CHECK(sc_f[6][2] == 25315);

}
TEST_CASE("link_bunny", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 21662);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 5489);
    CHECK(sc_v[1][0] == 15194);
    CHECK(sc_v[2][0] == 21661);
    CHECK(sc_v[3][0] == 21663);
    CHECK(sc_v[4][0] == 22451);
    CHECK(sc_v[5][0] == 22549);
    CHECK(sc_v[6][0] == 5489);
    CHECK(sc_v[6][1] == 15194);
    CHECK(sc_v[7][0] == 5489);
    CHECK(sc_v[7][1] == 21663);
    CHECK(sc_v[8][0] == 15194);
    CHECK(sc_v[8][1] == 21661);
    CHECK(sc_v[9][0] == 21661);
    CHECK(sc_v[9][1] == 22451);
    CHECK(sc_v[10][0] == 21663);
    CHECK(sc_v[10][1] == 22549);
    CHECK(sc_v[11][0] == 22451);
    CHECK(sc_v[11][1] == 22549);

    t = m.tuple_from_id(PV, 27289);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 19128);
    CHECK(sc_v[1][0] == 27402);
    CHECK(sc_v[2][0] == 28869);
    CHECK(sc_v[3][0] == 29425);
    CHECK(sc_v[4][0] == 29688);
    CHECK(sc_v[5][0] == 29763);
    CHECK(sc_v[6][0] == 19128);
    CHECK(sc_v[6][1] == 29688);
    CHECK(sc_v[7][0] == 19128);
    CHECK(sc_v[7][1] == 29763);
    CHECK(sc_v[8][0] == 27402);
    CHECK(sc_v[8][1] == 28869);
    CHECK(sc_v[9][0] == 27402);
    CHECK(sc_v[9][1] == 29688);
    CHECK(sc_v[10][0] == 28869);
    CHECK(sc_v[10][1] == 29425);
    CHECK(sc_v[11][0] == 29425);
    CHECK(sc_v[11][1] == 29763);

    t = m.tuple_from_id(PV, 20366);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 12891);
    CHECK(sc_v[1][0] == 14685);
    CHECK(sc_v[2][0] == 20365);
    CHECK(sc_v[3][0] == 20372);
    CHECK(sc_v[4][0] == 21138);
    CHECK(sc_v[5][0] == 12891);
    CHECK(sc_v[5][1] == 14685);
    CHECK(sc_v[6][0] == 12891);
    CHECK(sc_v[6][1] == 20372);
    CHECK(sc_v[7][0] == 14685);
    CHECK(sc_v[7][1] == 20365);
    CHECK(sc_v[8][0] == 20365);
    CHECK(sc_v[8][1] == 21138);
    CHECK(sc_v[9][0] == 20372);
    CHECK(sc_v[9][1] == 21138);

    t = m.tuple_from_id(PV, 29326);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 29189);
    CHECK(sc_v[1][0] == 29190);
    CHECK(sc_v[2][0] == 29325);
    CHECK(sc_v[3][0] == 29327);
    CHECK(sc_v[4][0] == 29462);
    CHECK(sc_v[5][0] == 29463);
    CHECK(sc_v[6][0] == 29189);
    CHECK(sc_v[6][1] == 29190);
    CHECK(sc_v[7][0] == 29189);
    CHECK(sc_v[7][1] == 29325);
    CHECK(sc_v[8][0] == 29190);
    CHECK(sc_v[8][1] == 29327);
    CHECK(sc_v[9][0] == 29325);
    CHECK(sc_v[9][1] == 29462);
    CHECK(sc_v[10][0] == 29327);
    CHECK(sc_v[10][1] == 29463);
    CHECK(sc_v[11][0] == 29462);
    CHECK(sc_v[11][1] == 29463);

    t = m.tuple_from_id(PV, 5589);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 1871);
    CHECK(sc_v[1][0] == 3336);
    CHECK(sc_v[2][0] == 9630);
    CHECK(sc_v[3][0] == 20645);
    CHECK(sc_v[4][0] == 23153);
    CHECK(sc_v[5][0] == 23236);
    CHECK(sc_v[6][0] == 1871);
    CHECK(sc_v[6][1] == 9630);
    CHECK(sc_v[7][0] == 1871);
    CHECK(sc_v[7][1] == 20645);
    CHECK(sc_v[8][0] == 3336);
    CHECK(sc_v[8][1] == 20645);
    CHECK(sc_v[9][0] == 3336);
    CHECK(sc_v[9][1] == 23153);
    CHECK(sc_v[10][0] == 9630);
    CHECK(sc_v[10][1] == 23236);
    CHECK(sc_v[11][0] == 23153);
    CHECK(sc_v[11][1] == 23236);

    t = m.edge_tuple_from_vids(17254,19017);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 2809);
    CHECK(sc_e[1][0] == 26829);

    t = m.edge_tuple_from_vids(14034,14035);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 13936);
    CHECK(sc_e[1][0] == 14133);

    t = m.edge_tuple_from_vids(8396,8504);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 8397);
    CHECK(sc_e[1][0] == 8503);

    t = m.edge_tuple_from_vids(6086,6216);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 6085);
    CHECK(sc_e[1][0] == 6217);

    t = m.edge_tuple_from_vids(833,953);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 834);
    CHECK(sc_e[1][0] == 952);

    t = m.face_tuple_from_vids(33685, 33695, 34987);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(2413, 16174, 16956);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(13458, 29160, 29297);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(264, 265, 7321);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(13176, 23781, 25315);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_bunny", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 21662);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 21662);

    t = m.tuple_from_id(PV, 27289);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 27289);

    t = m.tuple_from_id(PV, 20366);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 20366);

    t = m.tuple_from_id(PV, 29326);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 29326);

    t = m.tuple_from_id(PV, 5589);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 5589);

    t = m.edge_tuple_from_vids(17254,19017);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 17254);
    CHECK(sc_e[1][0] == 19017);
    CHECK(sc_e[2][0] == 17254);
    CHECK(sc_e[2][1] == 19017);

    t = m.edge_tuple_from_vids(14034,14035);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 14034);
    CHECK(sc_e[1][0] == 14035);
    CHECK(sc_e[2][0] == 14034);
    CHECK(sc_e[2][1] == 14035);

    t = m.edge_tuple_from_vids(8396,8504);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 8396);
    CHECK(sc_e[1][0] == 8504);
    CHECK(sc_e[2][0] == 8396);
    CHECK(sc_e[2][1] == 8504);

    t = m.edge_tuple_from_vids(6086,6216);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 6086);
    CHECK(sc_e[1][0] == 6216);
    CHECK(sc_e[2][0] == 6086);
    CHECK(sc_e[2][1] == 6216);

    t = m.edge_tuple_from_vids(833,953);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 833);
    CHECK(sc_e[1][0] == 953);
    CHECK(sc_e[2][0] == 833);
    CHECK(sc_e[2][1] == 953);

    t = m.face_tuple_from_vids(33685, 33695, 34987);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 33685);
    CHECK(sc_f[1][0] == 33695);
    CHECK(sc_f[2][0] == 34987);
    CHECK(sc_f[3][0] == 33685);
    CHECK(sc_f[3][1] == 33695);
    CHECK(sc_f[4][0] == 33685);
    CHECK(sc_f[4][1] == 34987);
    CHECK(sc_f[5][0] == 33695);
    CHECK(sc_f[5][1] == 34987);
    CHECK(sc_f[6][0] == 33685);
    CHECK(sc_f[6][1] == 33695);
    CHECK(sc_f[6][2] == 34987);

    t = m.face_tuple_from_vids(2413, 16174, 16956);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 2413);
    CHECK(sc_f[1][0] == 16174);
    CHECK(sc_f[2][0] == 16956);
    CHECK(sc_f[3][0] == 2413);
    CHECK(sc_f[3][1] == 16174);
    CHECK(sc_f[4][0] == 2413);
    CHECK(sc_f[4][1] == 16956);
    CHECK(sc_f[5][0] == 16174);
    CHECK(sc_f[5][1] == 16956);
    CHECK(sc_f[6][0] == 2413);
    CHECK(sc_f[6][1] == 16174);
    CHECK(sc_f[6][2] == 16956);

    t = m.face_tuple_from_vids(13458, 29160, 29297);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13458);
    CHECK(sc_f[1][0] == 29160);
    CHECK(sc_f[2][0] == 29297);
    CHECK(sc_f[3][0] == 13458);
    CHECK(sc_f[3][1] == 29160);
    CHECK(sc_f[4][0] == 13458);
    CHECK(sc_f[4][1] == 29297);
    CHECK(sc_f[5][0] == 29160);
    CHECK(sc_f[5][1] == 29297);
    CHECK(sc_f[6][0] == 13458);
    CHECK(sc_f[6][1] == 29160);
    CHECK(sc_f[6][2] == 29297);

    t = m.face_tuple_from_vids(264, 265, 7321);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 264);
    CHECK(sc_f[1][0] == 265);
    CHECK(sc_f[2][0] == 7321);
    CHECK(sc_f[3][0] == 264);
    CHECK(sc_f[3][1] == 265);
    CHECK(sc_f[4][0] == 264);
    CHECK(sc_f[4][1] == 7321);
    CHECK(sc_f[5][0] == 265);
    CHECK(sc_f[5][1] == 7321);
    CHECK(sc_f[6][0] == 264);
    CHECK(sc_f[6][1] == 265);
    CHECK(sc_f[6][2] == 7321);

    t = m.face_tuple_from_vids(13176, 23781, 25315);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13176);
    CHECK(sc_f[1][0] == 23781);
    CHECK(sc_f[2][0] == 25315);
    CHECK(sc_f[3][0] == 13176);
    CHECK(sc_f[3][1] == 23781);
    CHECK(sc_f[4][0] == 13176);
    CHECK(sc_f[4][1] == 25315);
    CHECK(sc_f[5][0] == 23781);
    CHECK(sc_f[5][1] == 25315);
    CHECK(sc_f[6][0] == 13176);
    CHECK(sc_f[6][1] == 23781);
    CHECK(sc_f[6][2] == 25315);

}
TEST_CASE("top_coface_simplex_bunny", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/bunny.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 21662);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 5489);
    CHECK(sc_v[0][1] == 15194);
    CHECK(sc_v[0][2] == 21662);
    CHECK(sc_v[1][0] == 5489);
    CHECK(sc_v[1][1] == 21662);
    CHECK(sc_v[1][2] == 21663);
    CHECK(sc_v[2][0] == 15194);
    CHECK(sc_v[2][1] == 21661);
    CHECK(sc_v[2][2] == 21662);
    CHECK(sc_v[3][0] == 21661);
    CHECK(sc_v[3][1] == 21662);
    CHECK(sc_v[3][2] == 22451);
    CHECK(sc_v[4][0] == 21662);
    CHECK(sc_v[4][1] == 21663);
    CHECK(sc_v[4][2] == 22549);
    CHECK(sc_v[5][0] == 21662);
    CHECK(sc_v[5][1] == 22451);
    CHECK(sc_v[5][2] == 22549);

    t = m.tuple_from_id(PV, 27289);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 19128);
    CHECK(sc_v[0][1] == 27289);
    CHECK(sc_v[0][2] == 29688);
    CHECK(sc_v[1][0] == 19128);
    CHECK(sc_v[1][1] == 27289);
    CHECK(sc_v[1][2] == 29763);
    CHECK(sc_v[2][0] == 27289);
    CHECK(sc_v[2][1] == 27402);
    CHECK(sc_v[2][2] == 28869);
    CHECK(sc_v[3][0] == 27289);
    CHECK(sc_v[3][1] == 27402);
    CHECK(sc_v[3][2] == 29688);
    CHECK(sc_v[4][0] == 27289);
    CHECK(sc_v[4][1] == 28869);
    CHECK(sc_v[4][2] == 29425);
    CHECK(sc_v[5][0] == 27289);
    CHECK(sc_v[5][1] == 29425);
    CHECK(sc_v[5][2] == 29763);

    t = m.tuple_from_id(PV, 20366);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 12891);
    CHECK(sc_v[0][1] == 14685);
    CHECK(sc_v[0][2] == 20366);
    CHECK(sc_v[1][0] == 12891);
    CHECK(sc_v[1][1] == 20366);
    CHECK(sc_v[1][2] == 20372);
    CHECK(sc_v[2][0] == 14685);
    CHECK(sc_v[2][1] == 20365);
    CHECK(sc_v[2][2] == 20366);
    CHECK(sc_v[3][0] == 20365);
    CHECK(sc_v[3][1] == 20366);
    CHECK(sc_v[3][2] == 21138);
    CHECK(sc_v[4][0] == 20366);
    CHECK(sc_v[4][1] == 20372);
    CHECK(sc_v[4][2] == 21138);

    t = m.tuple_from_id(PV, 29326);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 29189);
    CHECK(sc_v[0][1] == 29190);
    CHECK(sc_v[0][2] == 29326);
    CHECK(sc_v[1][0] == 29189);
    CHECK(sc_v[1][1] == 29325);
    CHECK(sc_v[1][2] == 29326);
    CHECK(sc_v[2][0] == 29190);
    CHECK(sc_v[2][1] == 29326);
    CHECK(sc_v[2][2] == 29327);
    CHECK(sc_v[3][0] == 29325);
    CHECK(sc_v[3][1] == 29326);
    CHECK(sc_v[3][2] == 29462);
    CHECK(sc_v[4][0] == 29326);
    CHECK(sc_v[4][1] == 29327);
    CHECK(sc_v[4][2] == 29463);
    CHECK(sc_v[5][0] == 29326);
    CHECK(sc_v[5][1] == 29462);
    CHECK(sc_v[5][2] == 29463);

    t = m.tuple_from_id(PV, 5589);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 1871);
    CHECK(sc_v[0][1] == 5589);
    CHECK(sc_v[0][2] == 9630);
    CHECK(sc_v[1][0] == 1871);
    CHECK(sc_v[1][1] == 5589);
    CHECK(sc_v[1][2] == 20645);
    CHECK(sc_v[2][0] == 3336);
    CHECK(sc_v[2][1] == 5589);
    CHECK(sc_v[2][2] == 20645);
    CHECK(sc_v[3][0] == 3336);
    CHECK(sc_v[3][1] == 5589);
    CHECK(sc_v[3][2] == 23153);
    CHECK(sc_v[4][0] == 5589);
    CHECK(sc_v[4][1] == 9630);
    CHECK(sc_v[4][2] == 23236);
    CHECK(sc_v[5][0] == 5589);
    CHECK(sc_v[5][1] == 23153);
    CHECK(sc_v[5][2] == 23236);

    t = m.edge_tuple_from_vids(17254,19017);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 2809);
    CHECK(sc_e[0][1] == 17254);
    CHECK(sc_e[0][2] == 19017);
    CHECK(sc_e[1][0] == 17254);
    CHECK(sc_e[1][1] == 19017);
    CHECK(sc_e[1][2] == 26829);

    t = m.edge_tuple_from_vids(14034,14035);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 13936);
    CHECK(sc_e[0][1] == 14034);
    CHECK(sc_e[0][2] == 14035);
    CHECK(sc_e[1][0] == 14034);
    CHECK(sc_e[1][1] == 14035);
    CHECK(sc_e[1][2] == 14133);

    t = m.edge_tuple_from_vids(8396,8504);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 8396);
    CHECK(sc_e[0][1] == 8397);
    CHECK(sc_e[0][2] == 8504);
    CHECK(sc_e[1][0] == 8396);
    CHECK(sc_e[1][1] == 8503);
    CHECK(sc_e[1][2] == 8504);

    t = m.edge_tuple_from_vids(6086,6216);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 6085);
    CHECK(sc_e[0][1] == 6086);
    CHECK(sc_e[0][2] == 6216);
    CHECK(sc_e[1][0] == 6086);
    CHECK(sc_e[1][1] == 6216);
    CHECK(sc_e[1][2] == 6217);

    t = m.edge_tuple_from_vids(833,953);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 833);
    CHECK(sc_e[0][1] == 834);
    CHECK(sc_e[0][2] == 953);
    CHECK(sc_e[1][0] == 833);
    CHECK(sc_e[1][1] == 952);
    CHECK(sc_e[1][2] == 953);

    t = m.face_tuple_from_vids(33685, 33695, 34987);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 33685);
    CHECK(sc_f[0][1] == 33695);
    CHECK(sc_f[0][2] == 34987);

    t = m.face_tuple_from_vids(2413, 16174, 16956);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 2413);
    CHECK(sc_f[0][1] == 16174);
    CHECK(sc_f[0][2] == 16956);

    t = m.face_tuple_from_vids(13458, 29160, 29297);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13458);
    CHECK(sc_f[0][1] == 29160);
    CHECK(sc_f[0][2] == 29297);

    t = m.face_tuple_from_vids(264, 265, 7321);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 264);
    CHECK(sc_f[0][1] == 265);
    CHECK(sc_f[0][2] == 7321);

    t = m.face_tuple_from_vids(13176, 23781, 25315);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13176);
    CHECK(sc_f[0][1] == 23781);
    CHECK(sc_f[0][2] == 25315);

}
TEST_CASE("open_star_Octocat", "[simplicial_complex][open_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 8810);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 8810);
    CHECK(sc_v[1][0] == 7364);
    CHECK(sc_v[1][1] == 8810);
    CHECK(sc_v[2][0] == 8599);
    CHECK(sc_v[2][1] == 8810);
    CHECK(sc_v[3][0] == 8601);
    CHECK(sc_v[3][1] == 8810);
    CHECK(sc_v[4][0] == 8602);
    CHECK(sc_v[4][1] == 8810);
    CHECK(sc_v[5][0] == 8761);
    CHECK(sc_v[5][1] == 8810);
    CHECK(sc_v[6][0] == 8809);
    CHECK(sc_v[6][1] == 8810);
    CHECK(sc_v[7][0] == 7364);
    CHECK(sc_v[7][1] == 8601);
    CHECK(sc_v[7][2] == 8810);
    CHECK(sc_v[8][0] == 7364);
    CHECK(sc_v[8][1] == 8602);
    CHECK(sc_v[8][2] == 8810);
    CHECK(sc_v[9][0] == 8599);
    CHECK(sc_v[9][1] == 8601);
    CHECK(sc_v[9][2] == 8810);
    CHECK(sc_v[10][0] == 8599);
    CHECK(sc_v[10][1] == 8761);
    CHECK(sc_v[10][2] == 8810);
    CHECK(sc_v[11][0] == 8602);
    CHECK(sc_v[11][1] == 8809);
    CHECK(sc_v[11][2] == 8810);
    CHECK(sc_v[12][0] == 8761);
    CHECK(sc_v[12][1] == 8809);
    CHECK(sc_v[12][2] == 8810);

    t = m.tuple_from_id(PV, 7967);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 7967);
    CHECK(sc_v[1][0] == 7959);
    CHECK(sc_v[1][1] == 7967);
    CHECK(sc_v[2][0] == 7962);
    CHECK(sc_v[2][1] == 7967);
    CHECK(sc_v[3][0] == 7966);
    CHECK(sc_v[3][1] == 7967);
    CHECK(sc_v[4][0] == 7967);
    CHECK(sc_v[4][1] == 7981);
    CHECK(sc_v[5][0] == 7967);
    CHECK(sc_v[5][1] == 7982);
    CHECK(sc_v[6][0] == 7959);
    CHECK(sc_v[6][1] == 7962);
    CHECK(sc_v[6][2] == 7967);
    CHECK(sc_v[7][0] == 7959);
    CHECK(sc_v[7][1] == 7966);
    CHECK(sc_v[7][2] == 7967);
    CHECK(sc_v[8][0] == 7962);
    CHECK(sc_v[8][1] == 7967);
    CHECK(sc_v[8][2] == 7982);
    CHECK(sc_v[9][0] == 7966);
    CHECK(sc_v[9][1] == 7967);
    CHECK(sc_v[9][2] == 7981);
    CHECK(sc_v[10][0] == 7967);
    CHECK(sc_v[10][1] == 7981);
    CHECK(sc_v[10][2] == 7982);

    t = m.tuple_from_id(PV, 5080);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 5080);
    CHECK(sc_v[1][0] == 5036);
    CHECK(sc_v[1][1] == 5080);
    CHECK(sc_v[2][0] == 5062);
    CHECK(sc_v[2][1] == 5080);
    CHECK(sc_v[3][0] == 5063);
    CHECK(sc_v[3][1] == 5080);
    CHECK(sc_v[4][0] == 5072);
    CHECK(sc_v[4][1] == 5080);
    CHECK(sc_v[5][0] == 5080);
    CHECK(sc_v[5][1] == 5081);
    CHECK(sc_v[6][0] == 5080);
    CHECK(sc_v[6][1] == 5085);
    CHECK(sc_v[7][0] == 5036);
    CHECK(sc_v[7][1] == 5062);
    CHECK(sc_v[7][2] == 5080);
    CHECK(sc_v[8][0] == 5036);
    CHECK(sc_v[8][1] == 5063);
    CHECK(sc_v[8][2] == 5080);
    CHECK(sc_v[9][0] == 5062);
    CHECK(sc_v[9][1] == 5080);
    CHECK(sc_v[9][2] == 5085);
    CHECK(sc_v[10][0] == 5063);
    CHECK(sc_v[10][1] == 5072);
    CHECK(sc_v[10][2] == 5080);
    CHECK(sc_v[11][0] == 5072);
    CHECK(sc_v[11][1] == 5080);
    CHECK(sc_v[11][2] == 5081);
    CHECK(sc_v[12][0] == 5080);
    CHECK(sc_v[12][1] == 5081);
    CHECK(sc_v[12][2] == 5085);

    t = m.tuple_from_id(PV, 12845);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 11);
    CHECK(sc_v[0][0] == 12845);
    CHECK(sc_v[1][0] == 12438);
    CHECK(sc_v[1][1] == 12845);
    CHECK(sc_v[2][0] == 12844);
    CHECK(sc_v[2][1] == 12845);
    CHECK(sc_v[3][0] == 12845);
    CHECK(sc_v[3][1] == 12846);
    CHECK(sc_v[4][0] == 12845);
    CHECK(sc_v[4][1] == 13117);
    CHECK(sc_v[5][0] == 12845);
    CHECK(sc_v[5][1] == 13118);
    CHECK(sc_v[6][0] == 12438);
    CHECK(sc_v[6][1] == 12844);
    CHECK(sc_v[6][2] == 12845);
    CHECK(sc_v[7][0] == 12438);
    CHECK(sc_v[7][1] == 12845);
    CHECK(sc_v[7][2] == 12846);
    CHECK(sc_v[8][0] == 12844);
    CHECK(sc_v[8][1] == 12845);
    CHECK(sc_v[8][2] == 13117);
    CHECK(sc_v[9][0] == 12845);
    CHECK(sc_v[9][1] == 12846);
    CHECK(sc_v[9][2] == 13118);
    CHECK(sc_v[10][0] == 12845);
    CHECK(sc_v[10][1] == 13117);
    CHECK(sc_v[10][2] == 13118);

    t = m.tuple_from_id(PV, 16815);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 13);
    CHECK(sc_v[0][0] == 16815);
    CHECK(sc_v[1][0] == 16762);
    CHECK(sc_v[1][1] == 16815);
    CHECK(sc_v[2][0] == 16784);
    CHECK(sc_v[2][1] == 16815);
    CHECK(sc_v[3][0] == 16785);
    CHECK(sc_v[3][1] == 16815);
    CHECK(sc_v[4][0] == 16815);
    CHECK(sc_v[4][1] == 16816);
    CHECK(sc_v[5][0] == 16815);
    CHECK(sc_v[5][1] == 16835);
    CHECK(sc_v[6][0] == 16815);
    CHECK(sc_v[6][1] == 16934);
    CHECK(sc_v[7][0] == 16762);
    CHECK(sc_v[7][1] == 16784);
    CHECK(sc_v[7][2] == 16815);
    CHECK(sc_v[8][0] == 16762);
    CHECK(sc_v[8][1] == 16785);
    CHECK(sc_v[8][2] == 16815);
    CHECK(sc_v[9][0] == 16784);
    CHECK(sc_v[9][1] == 16815);
    CHECK(sc_v[9][2] == 16835);
    CHECK(sc_v[10][0] == 16785);
    CHECK(sc_v[10][1] == 16815);
    CHECK(sc_v[10][2] == 16816);
    CHECK(sc_v[11][0] == 16815);
    CHECK(sc_v[11][1] == 16816);
    CHECK(sc_v[11][2] == 16934);
    CHECK(sc_v[12][0] == 16815);
    CHECK(sc_v[12][1] == 16835);
    CHECK(sc_v[12][2] == 16934);

    t = m.edge_tuple_from_vids(7414,8960);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 7414);
    CHECK(sc_e[0][1] == 8960);
    CHECK(sc_e[1][0] == 7414);
    CHECK(sc_e[1][1] == 8655);
    CHECK(sc_e[1][2] == 8960);
    CHECK(sc_e[2][0] == 7414);
    CHECK(sc_e[2][1] == 8656);
    CHECK(sc_e[2][2] == 8960);

    t = m.edge_tuple_from_vids(7014,7084);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 7014);
    CHECK(sc_e[0][1] == 7084);
    CHECK(sc_e[1][0] == 7014);
    CHECK(sc_e[1][1] == 7083);
    CHECK(sc_e[1][2] == 7084);
    CHECK(sc_e[2][0] == 7014);
    CHECK(sc_e[2][1] == 7084);
    CHECK(sc_e[2][2] == 7085);

    t = m.edge_tuple_from_vids(13755,13880);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 13755);
    CHECK(sc_e[0][1] == 13880);
    CHECK(sc_e[1][0] == 13755);
    CHECK(sc_e[1][1] == 13756);
    CHECK(sc_e[1][2] == 13880);
    CHECK(sc_e[2][0] == 13755);
    CHECK(sc_e[2][1] == 13880);
    CHECK(sc_e[2][2] == 14468);

    t = m.edge_tuple_from_vids(8582,8712);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 8582);
    CHECK(sc_e[0][1] == 8712);
    CHECK(sc_e[1][0] == 8582);
    CHECK(sc_e[1][1] == 8583);
    CHECK(sc_e[1][2] == 8712);
    CHECK(sc_e[2][0] == 8582);
    CHECK(sc_e[2][1] == 8712);
    CHECK(sc_e[2][2] == 8742);

    t = m.edge_tuple_from_vids(10591,10592);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 10591);
    CHECK(sc_e[0][1] == 10592);
    CHECK(sc_e[1][0] == 10571);
    CHECK(sc_e[1][1] == 10591);
    CHECK(sc_e[1][2] == 10592);
    CHECK(sc_e[2][0] == 10591);
    CHECK(sc_e[2][1] == 10592);
    CHECK(sc_e[2][2] == 10593);

    t = m.face_tuple_from_vids(7792, 9683, 9684);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 7792);
    CHECK(sc_f[0][1] == 9683);
    CHECK(sc_f[0][2] == 9684);

    t = m.face_tuple_from_vids(15138, 16615, 16803);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 15138);
    CHECK(sc_f[0][1] == 16615);
    CHECK(sc_f[0][2] == 16803);

    t = m.face_tuple_from_vids(13204, 13222, 13223);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13204);
    CHECK(sc_f[0][1] == 13222);
    CHECK(sc_f[0][2] == 13223);

    t = m.face_tuple_from_vids(9833, 9904, 9905);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 9833);
    CHECK(sc_f[0][1] == 9904);
    CHECK(sc_f[0][2] == 9905);

    t = m.face_tuple_from_vids(4123, 4130, 4153);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::open_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4123);
    CHECK(sc_f[0][1] == 4130);
    CHECK(sc_f[0][2] == 4153);

}
TEST_CASE("closed_star_Octocat", "[simplicial_complex][closed_star][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 8810);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 7364);
    CHECK(sc_v[1][0] == 8599);
    CHECK(sc_v[2][0] == 8601);
    CHECK(sc_v[3][0] == 8602);
    CHECK(sc_v[4][0] == 8761);
    CHECK(sc_v[5][0] == 8809);
    CHECK(sc_v[6][0] == 8810);
    CHECK(sc_v[7][0] == 7364);
    CHECK(sc_v[7][1] == 8601);
    CHECK(sc_v[8][0] == 7364);
    CHECK(sc_v[8][1] == 8602);
    CHECK(sc_v[9][0] == 7364);
    CHECK(sc_v[9][1] == 8810);
    CHECK(sc_v[10][0] == 8599);
    CHECK(sc_v[10][1] == 8601);
    CHECK(sc_v[11][0] == 8599);
    CHECK(sc_v[11][1] == 8761);
    CHECK(sc_v[12][0] == 8599);
    CHECK(sc_v[12][1] == 8810);
    CHECK(sc_v[13][0] == 8601);
    CHECK(sc_v[13][1] == 8810);
    CHECK(sc_v[14][0] == 8602);
    CHECK(sc_v[14][1] == 8809);
    CHECK(sc_v[15][0] == 8602);
    CHECK(sc_v[15][1] == 8810);
    CHECK(sc_v[16][0] == 8761);
    CHECK(sc_v[16][1] == 8809);
    CHECK(sc_v[17][0] == 8761);
    CHECK(sc_v[17][1] == 8810);
    CHECK(sc_v[18][0] == 8809);
    CHECK(sc_v[18][1] == 8810);
    CHECK(sc_v[19][0] == 7364);
    CHECK(sc_v[19][1] == 8601);
    CHECK(sc_v[19][2] == 8810);
    CHECK(sc_v[20][0] == 7364);
    CHECK(sc_v[20][1] == 8602);
    CHECK(sc_v[20][2] == 8810);
    CHECK(sc_v[21][0] == 8599);
    CHECK(sc_v[21][1] == 8601);
    CHECK(sc_v[21][2] == 8810);
    CHECK(sc_v[22][0] == 8599);
    CHECK(sc_v[22][1] == 8761);
    CHECK(sc_v[22][2] == 8810);
    CHECK(sc_v[23][0] == 8602);
    CHECK(sc_v[23][1] == 8809);
    CHECK(sc_v[23][2] == 8810);
    CHECK(sc_v[24][0] == 8761);
    CHECK(sc_v[24][1] == 8809);
    CHECK(sc_v[24][2] == 8810);

    t = m.tuple_from_id(PV, 7967);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 21);
    CHECK(sc_v[0][0] == 7959);
    CHECK(sc_v[1][0] == 7962);
    CHECK(sc_v[2][0] == 7966);
    CHECK(sc_v[3][0] == 7967);
    CHECK(sc_v[4][0] == 7981);
    CHECK(sc_v[5][0] == 7982);
    CHECK(sc_v[6][0] == 7959);
    CHECK(sc_v[6][1] == 7962);
    CHECK(sc_v[7][0] == 7959);
    CHECK(sc_v[7][1] == 7966);
    CHECK(sc_v[8][0] == 7959);
    CHECK(sc_v[8][1] == 7967);
    CHECK(sc_v[9][0] == 7962);
    CHECK(sc_v[9][1] == 7967);
    CHECK(sc_v[10][0] == 7962);
    CHECK(sc_v[10][1] == 7982);
    CHECK(sc_v[11][0] == 7966);
    CHECK(sc_v[11][1] == 7967);
    CHECK(sc_v[12][0] == 7966);
    CHECK(sc_v[12][1] == 7981);
    CHECK(sc_v[13][0] == 7967);
    CHECK(sc_v[13][1] == 7981);
    CHECK(sc_v[14][0] == 7967);
    CHECK(sc_v[14][1] == 7982);
    CHECK(sc_v[15][0] == 7981);
    CHECK(sc_v[15][1] == 7982);
    CHECK(sc_v[16][0] == 7959);
    CHECK(sc_v[16][1] == 7962);
    CHECK(sc_v[16][2] == 7967);
    CHECK(sc_v[17][0] == 7959);
    CHECK(sc_v[17][1] == 7966);
    CHECK(sc_v[17][2] == 7967);
    CHECK(sc_v[18][0] == 7962);
    CHECK(sc_v[18][1] == 7967);
    CHECK(sc_v[18][2] == 7982);
    CHECK(sc_v[19][0] == 7966);
    CHECK(sc_v[19][1] == 7967);
    CHECK(sc_v[19][2] == 7981);
    CHECK(sc_v[20][0] == 7967);
    CHECK(sc_v[20][1] == 7981);
    CHECK(sc_v[20][2] == 7982);

    t = m.tuple_from_id(PV, 5080);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 5036);
    CHECK(sc_v[1][0] == 5062);
    CHECK(sc_v[2][0] == 5063);
    CHECK(sc_v[3][0] == 5072);
    CHECK(sc_v[4][0] == 5080);
    CHECK(sc_v[5][0] == 5081);
    CHECK(sc_v[6][0] == 5085);
    CHECK(sc_v[7][0] == 5036);
    CHECK(sc_v[7][1] == 5062);
    CHECK(sc_v[8][0] == 5036);
    CHECK(sc_v[8][1] == 5063);
    CHECK(sc_v[9][0] == 5036);
    CHECK(sc_v[9][1] == 5080);
    CHECK(sc_v[10][0] == 5062);
    CHECK(sc_v[10][1] == 5080);
    CHECK(sc_v[11][0] == 5062);
    CHECK(sc_v[11][1] == 5085);
    CHECK(sc_v[12][0] == 5063);
    CHECK(sc_v[12][1] == 5072);
    CHECK(sc_v[13][0] == 5063);
    CHECK(sc_v[13][1] == 5080);
    CHECK(sc_v[14][0] == 5072);
    CHECK(sc_v[14][1] == 5080);
    CHECK(sc_v[15][0] == 5072);
    CHECK(sc_v[15][1] == 5081);
    CHECK(sc_v[16][0] == 5080);
    CHECK(sc_v[16][1] == 5081);
    CHECK(sc_v[17][0] == 5080);
    CHECK(sc_v[17][1] == 5085);
    CHECK(sc_v[18][0] == 5081);
    CHECK(sc_v[18][1] == 5085);
    CHECK(sc_v[19][0] == 5036);
    CHECK(sc_v[19][1] == 5062);
    CHECK(sc_v[19][2] == 5080);
    CHECK(sc_v[20][0] == 5036);
    CHECK(sc_v[20][1] == 5063);
    CHECK(sc_v[20][2] == 5080);
    CHECK(sc_v[21][0] == 5062);
    CHECK(sc_v[21][1] == 5080);
    CHECK(sc_v[21][2] == 5085);
    CHECK(sc_v[22][0] == 5063);
    CHECK(sc_v[22][1] == 5072);
    CHECK(sc_v[22][2] == 5080);
    CHECK(sc_v[23][0] == 5072);
    CHECK(sc_v[23][1] == 5080);
    CHECK(sc_v[23][2] == 5081);
    CHECK(sc_v[24][0] == 5080);
    CHECK(sc_v[24][1] == 5081);
    CHECK(sc_v[24][2] == 5085);

    t = m.tuple_from_id(PV, 12845);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 21);
    CHECK(sc_v[0][0] == 12438);
    CHECK(sc_v[1][0] == 12844);
    CHECK(sc_v[2][0] == 12845);
    CHECK(sc_v[3][0] == 12846);
    CHECK(sc_v[4][0] == 13117);
    CHECK(sc_v[5][0] == 13118);
    CHECK(sc_v[6][0] == 12438);
    CHECK(sc_v[6][1] == 12844);
    CHECK(sc_v[7][0] == 12438);
    CHECK(sc_v[7][1] == 12845);
    CHECK(sc_v[8][0] == 12438);
    CHECK(sc_v[8][1] == 12846);
    CHECK(sc_v[9][0] == 12844);
    CHECK(sc_v[9][1] == 12845);
    CHECK(sc_v[10][0] == 12844);
    CHECK(sc_v[10][1] == 13117);
    CHECK(sc_v[11][0] == 12845);
    CHECK(sc_v[11][1] == 12846);
    CHECK(sc_v[12][0] == 12845);
    CHECK(sc_v[12][1] == 13117);
    CHECK(sc_v[13][0] == 12845);
    CHECK(sc_v[13][1] == 13118);
    CHECK(sc_v[14][0] == 12846);
    CHECK(sc_v[14][1] == 13118);
    CHECK(sc_v[15][0] == 13117);
    CHECK(sc_v[15][1] == 13118);
    CHECK(sc_v[16][0] == 12438);
    CHECK(sc_v[16][1] == 12844);
    CHECK(sc_v[16][2] == 12845);
    CHECK(sc_v[17][0] == 12438);
    CHECK(sc_v[17][1] == 12845);
    CHECK(sc_v[17][2] == 12846);
    CHECK(sc_v[18][0] == 12844);
    CHECK(sc_v[18][1] == 12845);
    CHECK(sc_v[18][2] == 13117);
    CHECK(sc_v[19][0] == 12845);
    CHECK(sc_v[19][1] == 12846);
    CHECK(sc_v[19][2] == 13118);
    CHECK(sc_v[20][0] == 12845);
    CHECK(sc_v[20][1] == 13117);
    CHECK(sc_v[20][2] == 13118);

    t = m.tuple_from_id(PV, 16815);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 25);
    CHECK(sc_v[0][0] == 16762);
    CHECK(sc_v[1][0] == 16784);
    CHECK(sc_v[2][0] == 16785);
    CHECK(sc_v[3][0] == 16815);
    CHECK(sc_v[4][0] == 16816);
    CHECK(sc_v[5][0] == 16835);
    CHECK(sc_v[6][0] == 16934);
    CHECK(sc_v[7][0] == 16762);
    CHECK(sc_v[7][1] == 16784);
    CHECK(sc_v[8][0] == 16762);
    CHECK(sc_v[8][1] == 16785);
    CHECK(sc_v[9][0] == 16762);
    CHECK(sc_v[9][1] == 16815);
    CHECK(sc_v[10][0] == 16784);
    CHECK(sc_v[10][1] == 16815);
    CHECK(sc_v[11][0] == 16784);
    CHECK(sc_v[11][1] == 16835);
    CHECK(sc_v[12][0] == 16785);
    CHECK(sc_v[12][1] == 16815);
    CHECK(sc_v[13][0] == 16785);
    CHECK(sc_v[13][1] == 16816);
    CHECK(sc_v[14][0] == 16815);
    CHECK(sc_v[14][1] == 16816);
    CHECK(sc_v[15][0] == 16815);
    CHECK(sc_v[15][1] == 16835);
    CHECK(sc_v[16][0] == 16815);
    CHECK(sc_v[16][1] == 16934);
    CHECK(sc_v[17][0] == 16816);
    CHECK(sc_v[17][1] == 16934);
    CHECK(sc_v[18][0] == 16835);
    CHECK(sc_v[18][1] == 16934);
    CHECK(sc_v[19][0] == 16762);
    CHECK(sc_v[19][1] == 16784);
    CHECK(sc_v[19][2] == 16815);
    CHECK(sc_v[20][0] == 16762);
    CHECK(sc_v[20][1] == 16785);
    CHECK(sc_v[20][2] == 16815);
    CHECK(sc_v[21][0] == 16784);
    CHECK(sc_v[21][1] == 16815);
    CHECK(sc_v[21][2] == 16835);
    CHECK(sc_v[22][0] == 16785);
    CHECK(sc_v[22][1] == 16815);
    CHECK(sc_v[22][2] == 16816);
    CHECK(sc_v[23][0] == 16815);
    CHECK(sc_v[23][1] == 16816);
    CHECK(sc_v[23][2] == 16934);
    CHECK(sc_v[24][0] == 16815);
    CHECK(sc_v[24][1] == 16835);
    CHECK(sc_v[24][2] == 16934);

    t = m.edge_tuple_from_vids(7414,8960);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 7414);
    CHECK(sc_e[1][0] == 8655);
    CHECK(sc_e[2][0] == 8656);
    CHECK(sc_e[3][0] == 8960);
    CHECK(sc_e[4][0] == 7414);
    CHECK(sc_e[4][1] == 8655);
    CHECK(sc_e[5][0] == 7414);
    CHECK(sc_e[5][1] == 8656);
    CHECK(sc_e[6][0] == 7414);
    CHECK(sc_e[6][1] == 8960);
    CHECK(sc_e[7][0] == 8655);
    CHECK(sc_e[7][1] == 8960);
    CHECK(sc_e[8][0] == 8656);
    CHECK(sc_e[8][1] == 8960);
    CHECK(sc_e[9][0] == 7414);
    CHECK(sc_e[9][1] == 8655);
    CHECK(sc_e[9][2] == 8960);
    CHECK(sc_e[10][0] == 7414);
    CHECK(sc_e[10][1] == 8656);
    CHECK(sc_e[10][2] == 8960);

    t = m.edge_tuple_from_vids(7014,7084);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 7014);
    CHECK(sc_e[1][0] == 7083);
    CHECK(sc_e[2][0] == 7084);
    CHECK(sc_e[3][0] == 7085);
    CHECK(sc_e[4][0] == 7014);
    CHECK(sc_e[4][1] == 7083);
    CHECK(sc_e[5][0] == 7014);
    CHECK(sc_e[5][1] == 7084);
    CHECK(sc_e[6][0] == 7014);
    CHECK(sc_e[6][1] == 7085);
    CHECK(sc_e[7][0] == 7083);
    CHECK(sc_e[7][1] == 7084);
    CHECK(sc_e[8][0] == 7084);
    CHECK(sc_e[8][1] == 7085);
    CHECK(sc_e[9][0] == 7014);
    CHECK(sc_e[9][1] == 7083);
    CHECK(sc_e[9][2] == 7084);
    CHECK(sc_e[10][0] == 7014);
    CHECK(sc_e[10][1] == 7084);
    CHECK(sc_e[10][2] == 7085);

    t = m.edge_tuple_from_vids(13755,13880);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 13755);
    CHECK(sc_e[1][0] == 13756);
    CHECK(sc_e[2][0] == 13880);
    CHECK(sc_e[3][0] == 14468);
    CHECK(sc_e[4][0] == 13755);
    CHECK(sc_e[4][1] == 13756);
    CHECK(sc_e[5][0] == 13755);
    CHECK(sc_e[5][1] == 13880);
    CHECK(sc_e[6][0] == 13755);
    CHECK(sc_e[6][1] == 14468);
    CHECK(sc_e[7][0] == 13756);
    CHECK(sc_e[7][1] == 13880);
    CHECK(sc_e[8][0] == 13880);
    CHECK(sc_e[8][1] == 14468);
    CHECK(sc_e[9][0] == 13755);
    CHECK(sc_e[9][1] == 13756);
    CHECK(sc_e[9][2] == 13880);
    CHECK(sc_e[10][0] == 13755);
    CHECK(sc_e[10][1] == 13880);
    CHECK(sc_e[10][2] == 14468);

    t = m.edge_tuple_from_vids(8582,8712);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 8582);
    CHECK(sc_e[1][0] == 8583);
    CHECK(sc_e[2][0] == 8712);
    CHECK(sc_e[3][0] == 8742);
    CHECK(sc_e[4][0] == 8582);
    CHECK(sc_e[4][1] == 8583);
    CHECK(sc_e[5][0] == 8582);
    CHECK(sc_e[5][1] == 8712);
    CHECK(sc_e[6][0] == 8582);
    CHECK(sc_e[6][1] == 8742);
    CHECK(sc_e[7][0] == 8583);
    CHECK(sc_e[7][1] == 8712);
    CHECK(sc_e[8][0] == 8712);
    CHECK(sc_e[8][1] == 8742);
    CHECK(sc_e[9][0] == 8582);
    CHECK(sc_e[9][1] == 8583);
    CHECK(sc_e[9][2] == 8712);
    CHECK(sc_e[10][0] == 8582);
    CHECK(sc_e[10][1] == 8712);
    CHECK(sc_e[10][2] == 8742);

    t = m.edge_tuple_from_vids(10591,10592);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 11);
    CHECK(sc_e[0][0] == 10571);
    CHECK(sc_e[1][0] == 10591);
    CHECK(sc_e[2][0] == 10592);
    CHECK(sc_e[3][0] == 10593);
    CHECK(sc_e[4][0] == 10571);
    CHECK(sc_e[4][1] == 10591);
    CHECK(sc_e[5][0] == 10571);
    CHECK(sc_e[5][1] == 10592);
    CHECK(sc_e[6][0] == 10591);
    CHECK(sc_e[6][1] == 10592);
    CHECK(sc_e[7][0] == 10591);
    CHECK(sc_e[7][1] == 10593);
    CHECK(sc_e[8][0] == 10592);
    CHECK(sc_e[8][1] == 10593);
    CHECK(sc_e[9][0] == 10571);
    CHECK(sc_e[9][1] == 10591);
    CHECK(sc_e[9][2] == 10592);
    CHECK(sc_e[10][0] == 10591);
    CHECK(sc_e[10][1] == 10592);
    CHECK(sc_e[10][2] == 10593);

    t = m.face_tuple_from_vids(7792, 9683, 9684);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 7792);
    CHECK(sc_f[1][0] == 9683);
    CHECK(sc_f[2][0] == 9684);
    CHECK(sc_f[3][0] == 7792);
    CHECK(sc_f[3][1] == 9683);
    CHECK(sc_f[4][0] == 7792);
    CHECK(sc_f[4][1] == 9684);
    CHECK(sc_f[5][0] == 9683);
    CHECK(sc_f[5][1] == 9684);
    CHECK(sc_f[6][0] == 7792);
    CHECK(sc_f[6][1] == 9683);
    CHECK(sc_f[6][2] == 9684);

    t = m.face_tuple_from_vids(15138, 16615, 16803);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 15138);
    CHECK(sc_f[1][0] == 16615);
    CHECK(sc_f[2][0] == 16803);
    CHECK(sc_f[3][0] == 15138);
    CHECK(sc_f[3][1] == 16615);
    CHECK(sc_f[4][0] == 15138);
    CHECK(sc_f[4][1] == 16803);
    CHECK(sc_f[5][0] == 16615);
    CHECK(sc_f[5][1] == 16803);
    CHECK(sc_f[6][0] == 15138);
    CHECK(sc_f[6][1] == 16615);
    CHECK(sc_f[6][2] == 16803);

    t = m.face_tuple_from_vids(13204, 13222, 13223);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13204);
    CHECK(sc_f[1][0] == 13222);
    CHECK(sc_f[2][0] == 13223);
    CHECK(sc_f[3][0] == 13204);
    CHECK(sc_f[3][1] == 13222);
    CHECK(sc_f[4][0] == 13204);
    CHECK(sc_f[4][1] == 13223);
    CHECK(sc_f[5][0] == 13222);
    CHECK(sc_f[5][1] == 13223);
    CHECK(sc_f[6][0] == 13204);
    CHECK(sc_f[6][1] == 13222);
    CHECK(sc_f[6][2] == 13223);

    t = m.face_tuple_from_vids(9833, 9904, 9905);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 9833);
    CHECK(sc_f[1][0] == 9904);
    CHECK(sc_f[2][0] == 9905);
    CHECK(sc_f[3][0] == 9833);
    CHECK(sc_f[3][1] == 9904);
    CHECK(sc_f[4][0] == 9833);
    CHECK(sc_f[4][1] == 9905);
    CHECK(sc_f[5][0] == 9904);
    CHECK(sc_f[5][1] == 9905);
    CHECK(sc_f[6][0] == 9833);
    CHECK(sc_f[6][1] == 9904);
    CHECK(sc_f[6][2] == 9905);

    t = m.face_tuple_from_vids(4123, 4130, 4153);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::closed_star(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4123);
    CHECK(sc_f[1][0] == 4130);
    CHECK(sc_f[2][0] == 4153);
    CHECK(sc_f[3][0] == 4123);
    CHECK(sc_f[3][1] == 4130);
    CHECK(sc_f[4][0] == 4123);
    CHECK(sc_f[4][1] == 4153);
    CHECK(sc_f[5][0] == 4130);
    CHECK(sc_f[5][1] == 4153);
    CHECK(sc_f[6][0] == 4123);
    CHECK(sc_f[6][1] == 4130);
    CHECK(sc_f[6][2] == 4153);

}
TEST_CASE("link_Octocat", "[simplicial_complex][link][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 8810);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 7364);
    CHECK(sc_v[1][0] == 8599);
    CHECK(sc_v[2][0] == 8601);
    CHECK(sc_v[3][0] == 8602);
    CHECK(sc_v[4][0] == 8761);
    CHECK(sc_v[5][0] == 8809);
    CHECK(sc_v[6][0] == 7364);
    CHECK(sc_v[6][1] == 8601);
    CHECK(sc_v[7][0] == 7364);
    CHECK(sc_v[7][1] == 8602);
    CHECK(sc_v[8][0] == 8599);
    CHECK(sc_v[8][1] == 8601);
    CHECK(sc_v[9][0] == 8599);
    CHECK(sc_v[9][1] == 8761);
    CHECK(sc_v[10][0] == 8602);
    CHECK(sc_v[10][1] == 8809);
    CHECK(sc_v[11][0] == 8761);
    CHECK(sc_v[11][1] == 8809);

    t = m.tuple_from_id(PV, 7967);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 7959);
    CHECK(sc_v[1][0] == 7962);
    CHECK(sc_v[2][0] == 7966);
    CHECK(sc_v[3][0] == 7981);
    CHECK(sc_v[4][0] == 7982);
    CHECK(sc_v[5][0] == 7959);
    CHECK(sc_v[5][1] == 7962);
    CHECK(sc_v[6][0] == 7959);
    CHECK(sc_v[6][1] == 7966);
    CHECK(sc_v[7][0] == 7962);
    CHECK(sc_v[7][1] == 7982);
    CHECK(sc_v[8][0] == 7966);
    CHECK(sc_v[8][1] == 7981);
    CHECK(sc_v[9][0] == 7981);
    CHECK(sc_v[9][1] == 7982);

    t = m.tuple_from_id(PV, 5080);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 5036);
    CHECK(sc_v[1][0] == 5062);
    CHECK(sc_v[2][0] == 5063);
    CHECK(sc_v[3][0] == 5072);
    CHECK(sc_v[4][0] == 5081);
    CHECK(sc_v[5][0] == 5085);
    CHECK(sc_v[6][0] == 5036);
    CHECK(sc_v[6][1] == 5062);
    CHECK(sc_v[7][0] == 5036);
    CHECK(sc_v[7][1] == 5063);
    CHECK(sc_v[8][0] == 5062);
    CHECK(sc_v[8][1] == 5085);
    CHECK(sc_v[9][0] == 5063);
    CHECK(sc_v[9][1] == 5072);
    CHECK(sc_v[10][0] == 5072);
    CHECK(sc_v[10][1] == 5081);
    CHECK(sc_v[11][0] == 5081);
    CHECK(sc_v[11][1] == 5085);

    t = m.tuple_from_id(PV, 12845);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 10);
    CHECK(sc_v[0][0] == 12438);
    CHECK(sc_v[1][0] == 12844);
    CHECK(sc_v[2][0] == 12846);
    CHECK(sc_v[3][0] == 13117);
    CHECK(sc_v[4][0] == 13118);
    CHECK(sc_v[5][0] == 12438);
    CHECK(sc_v[5][1] == 12844);
    CHECK(sc_v[6][0] == 12438);
    CHECK(sc_v[6][1] == 12846);
    CHECK(sc_v[7][0] == 12844);
    CHECK(sc_v[7][1] == 13117);
    CHECK(sc_v[8][0] == 12846);
    CHECK(sc_v[8][1] == 13118);
    CHECK(sc_v[9][0] == 13117);
    CHECK(sc_v[9][1] == 13118);

    t = m.tuple_from_id(PV, 16815);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 16762);
    CHECK(sc_v[1][0] == 16784);
    CHECK(sc_v[2][0] == 16785);
    CHECK(sc_v[3][0] == 16816);
    CHECK(sc_v[4][0] == 16835);
    CHECK(sc_v[5][0] == 16934);
    CHECK(sc_v[6][0] == 16762);
    CHECK(sc_v[6][1] == 16784);
    CHECK(sc_v[7][0] == 16762);
    CHECK(sc_v[7][1] == 16785);
    CHECK(sc_v[8][0] == 16784);
    CHECK(sc_v[8][1] == 16835);
    CHECK(sc_v[9][0] == 16785);
    CHECK(sc_v[9][1] == 16816);
    CHECK(sc_v[10][0] == 16816);
    CHECK(sc_v[10][1] == 16934);
    CHECK(sc_v[11][0] == 16835);
    CHECK(sc_v[11][1] == 16934);

    t = m.edge_tuple_from_vids(7414,8960);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 8655);
    CHECK(sc_e[1][0] == 8656);

    t = m.edge_tuple_from_vids(7014,7084);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 7083);
    CHECK(sc_e[1][0] == 7085);

    t = m.edge_tuple_from_vids(13755,13880);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 13756);
    CHECK(sc_e[1][0] == 14468);

    t = m.edge_tuple_from_vids(8582,8712);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 8583);
    CHECK(sc_e[1][0] == 8742);

    t = m.edge_tuple_from_vids(10591,10592);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 10571);
    CHECK(sc_e[1][0] == 10593);

    t = m.face_tuple_from_vids(7792, 9683, 9684);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(15138, 16615, 16803);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(13204, 13222, 13223);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(9833, 9904, 9905);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

    t = m.face_tuple_from_vids(4123, 4130, 4153);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::link(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 0);

}
TEST_CASE("simplex_with_boundary_Octocat", "[simplicial_complex][simplex_with_boundary][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 8810);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 8810);

    t = m.tuple_from_id(PV, 7967);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 7967);

    t = m.tuple_from_id(PV, 5080);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 5080);

    t = m.tuple_from_id(PV, 12845);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 12845);

    t = m.tuple_from_id(PV, 16815);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 1);
    CHECK(sc_v[0][0] == 16815);

    t = m.edge_tuple_from_vids(7414,8960);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 7414);
    CHECK(sc_e[1][0] == 8960);
    CHECK(sc_e[2][0] == 7414);
    CHECK(sc_e[2][1] == 8960);

    t = m.edge_tuple_from_vids(7014,7084);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 7014);
    CHECK(sc_e[1][0] == 7084);
    CHECK(sc_e[2][0] == 7014);
    CHECK(sc_e[2][1] == 7084);

    t = m.edge_tuple_from_vids(13755,13880);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 13755);
    CHECK(sc_e[1][0] == 13880);
    CHECK(sc_e[2][0] == 13755);
    CHECK(sc_e[2][1] == 13880);

    t = m.edge_tuple_from_vids(8582,8712);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 8582);
    CHECK(sc_e[1][0] == 8712);
    CHECK(sc_e[2][0] == 8582);
    CHECK(sc_e[2][1] == 8712);

    t = m.edge_tuple_from_vids(10591,10592);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 3);
    CHECK(sc_e[0][0] == 10591);
    CHECK(sc_e[1][0] == 10592);
    CHECK(sc_e[2][0] == 10591);
    CHECK(sc_e[2][1] == 10592);

    t = m.face_tuple_from_vids(7792, 9683, 9684);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 7792);
    CHECK(sc_f[1][0] == 9683);
    CHECK(sc_f[2][0] == 9684);
    CHECK(sc_f[3][0] == 7792);
    CHECK(sc_f[3][1] == 9683);
    CHECK(sc_f[4][0] == 7792);
    CHECK(sc_f[4][1] == 9684);
    CHECK(sc_f[5][0] == 9683);
    CHECK(sc_f[5][1] == 9684);
    CHECK(sc_f[6][0] == 7792);
    CHECK(sc_f[6][1] == 9683);
    CHECK(sc_f[6][2] == 9684);

    t = m.face_tuple_from_vids(15138, 16615, 16803);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 15138);
    CHECK(sc_f[1][0] == 16615);
    CHECK(sc_f[2][0] == 16803);
    CHECK(sc_f[3][0] == 15138);
    CHECK(sc_f[3][1] == 16615);
    CHECK(sc_f[4][0] == 15138);
    CHECK(sc_f[4][1] == 16803);
    CHECK(sc_f[5][0] == 16615);
    CHECK(sc_f[5][1] == 16803);
    CHECK(sc_f[6][0] == 15138);
    CHECK(sc_f[6][1] == 16615);
    CHECK(sc_f[6][2] == 16803);

    t = m.face_tuple_from_vids(13204, 13222, 13223);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 13204);
    CHECK(sc_f[1][0] == 13222);
    CHECK(sc_f[2][0] == 13223);
    CHECK(sc_f[3][0] == 13204);
    CHECK(sc_f[3][1] == 13222);
    CHECK(sc_f[4][0] == 13204);
    CHECK(sc_f[4][1] == 13223);
    CHECK(sc_f[5][0] == 13222);
    CHECK(sc_f[5][1] == 13223);
    CHECK(sc_f[6][0] == 13204);
    CHECK(sc_f[6][1] == 13222);
    CHECK(sc_f[6][2] == 13223);

    t = m.face_tuple_from_vids(9833, 9904, 9905);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 9833);
    CHECK(sc_f[1][0] == 9904);
    CHECK(sc_f[2][0] == 9905);
    CHECK(sc_f[3][0] == 9833);
    CHECK(sc_f[3][1] == 9904);
    CHECK(sc_f[4][0] == 9833);
    CHECK(sc_f[4][1] == 9905);
    CHECK(sc_f[5][0] == 9904);
    CHECK(sc_f[5][1] == 9905);
    CHECK(sc_f[6][0] == 9833);
    CHECK(sc_f[6][1] == 9904);
    CHECK(sc_f[6][2] == 9905);

    t = m.face_tuple_from_vids(4123, 4130, 4153);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::simplex_with_boundary(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 7);
    CHECK(sc_f[0][0] == 4123);
    CHECK(sc_f[1][0] == 4130);
    CHECK(sc_f[2][0] == 4153);
    CHECK(sc_f[3][0] == 4123);
    CHECK(sc_f[3][1] == 4130);
    CHECK(sc_f[4][0] == 4123);
    CHECK(sc_f[4][1] == 4153);
    CHECK(sc_f[5][0] == 4130);
    CHECK(sc_f[5][1] == 4153);
    CHECK(sc_f[6][0] == 4123);
    CHECK(sc_f[6][1] == 4130);
    CHECK(sc_f[6][2] == 4153);

}
TEST_CASE("top_coface_simplex_Octocat", "[simplicial_complex][top_coface_simplex][2D][auto_generated]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/Octocat.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v, sc_e, sc_f;
    t = m.tuple_from_id(PV, 8810);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 7364);
    CHECK(sc_v[0][1] == 8601);
    CHECK(sc_v[0][2] == 8810);
    CHECK(sc_v[1][0] == 7364);
    CHECK(sc_v[1][1] == 8602);
    CHECK(sc_v[1][2] == 8810);
    CHECK(sc_v[2][0] == 8599);
    CHECK(sc_v[2][1] == 8601);
    CHECK(sc_v[2][2] == 8810);
    CHECK(sc_v[3][0] == 8599);
    CHECK(sc_v[3][1] == 8761);
    CHECK(sc_v[3][2] == 8810);
    CHECK(sc_v[4][0] == 8602);
    CHECK(sc_v[4][1] == 8809);
    CHECK(sc_v[4][2] == 8810);
    CHECK(sc_v[5][0] == 8761);
    CHECK(sc_v[5][1] == 8809);
    CHECK(sc_v[5][2] == 8810);

    t = m.tuple_from_id(PV, 7967);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 7959);
    CHECK(sc_v[0][1] == 7962);
    CHECK(sc_v[0][2] == 7967);
    CHECK(sc_v[1][0] == 7959);
    CHECK(sc_v[1][1] == 7966);
    CHECK(sc_v[1][2] == 7967);
    CHECK(sc_v[2][0] == 7962);
    CHECK(sc_v[2][1] == 7967);
    CHECK(sc_v[2][2] == 7982);
    CHECK(sc_v[3][0] == 7966);
    CHECK(sc_v[3][1] == 7967);
    CHECK(sc_v[3][2] == 7981);
    CHECK(sc_v[4][0] == 7967);
    CHECK(sc_v[4][1] == 7981);
    CHECK(sc_v[4][2] == 7982);

    t = m.tuple_from_id(PV, 5080);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 5036);
    CHECK(sc_v[0][1] == 5062);
    CHECK(sc_v[0][2] == 5080);
    CHECK(sc_v[1][0] == 5036);
    CHECK(sc_v[1][1] == 5063);
    CHECK(sc_v[1][2] == 5080);
    CHECK(sc_v[2][0] == 5062);
    CHECK(sc_v[2][1] == 5080);
    CHECK(sc_v[2][2] == 5085);
    CHECK(sc_v[3][0] == 5063);
    CHECK(sc_v[3][1] == 5072);
    CHECK(sc_v[3][2] == 5080);
    CHECK(sc_v[4][0] == 5072);
    CHECK(sc_v[4][1] == 5080);
    CHECK(sc_v[4][2] == 5081);
    CHECK(sc_v[5][0] == 5080);
    CHECK(sc_v[5][1] == 5081);
    CHECK(sc_v[5][2] == 5085);

    t = m.tuple_from_id(PV, 12845);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 5);
    CHECK(sc_v[0][0] == 12438);
    CHECK(sc_v[0][1] == 12844);
    CHECK(sc_v[0][2] == 12845);
    CHECK(sc_v[1][0] == 12438);
    CHECK(sc_v[1][1] == 12845);
    CHECK(sc_v[1][2] == 12846);
    CHECK(sc_v[2][0] == 12844);
    CHECK(sc_v[2][1] == 12845);
    CHECK(sc_v[2][2] == 13117);
    CHECK(sc_v[3][0] == 12845);
    CHECK(sc_v[3][1] == 12846);
    CHECK(sc_v[3][2] == 13118);
    CHECK(sc_v[4][0] == 12845);
    CHECK(sc_v[4][1] == 13117);
    CHECK(sc_v[4][2] == 13118);

    t = m.tuple_from_id(PV, 16815);
    sc_v = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 6);
    CHECK(sc_v[0][0] == 16762);
    CHECK(sc_v[0][1] == 16784);
    CHECK(sc_v[0][2] == 16815);
    CHECK(sc_v[1][0] == 16762);
    CHECK(sc_v[1][1] == 16785);
    CHECK(sc_v[1][2] == 16815);
    CHECK(sc_v[2][0] == 16784);
    CHECK(sc_v[2][1] == 16815);
    CHECK(sc_v[2][2] == 16835);
    CHECK(sc_v[3][0] == 16785);
    CHECK(sc_v[3][1] == 16815);
    CHECK(sc_v[3][2] == 16816);
    CHECK(sc_v[4][0] == 16815);
    CHECK(sc_v[4][1] == 16816);
    CHECK(sc_v[4][2] == 16934);
    CHECK(sc_v[5][0] == 16815);
    CHECK(sc_v[5][1] == 16835);
    CHECK(sc_v[5][2] == 16934);

    t = m.edge_tuple_from_vids(7414,8960);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 7414);
    CHECK(sc_e[0][1] == 8655);
    CHECK(sc_e[0][2] == 8960);
    CHECK(sc_e[1][0] == 7414);
    CHECK(sc_e[1][1] == 8656);
    CHECK(sc_e[1][2] == 8960);

    t = m.edge_tuple_from_vids(7014,7084);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 7014);
    CHECK(sc_e[0][1] == 7083);
    CHECK(sc_e[0][2] == 7084);
    CHECK(sc_e[1][0] == 7014);
    CHECK(sc_e[1][1] == 7084);
    CHECK(sc_e[1][2] == 7085);

    t = m.edge_tuple_from_vids(13755,13880);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 13755);
    CHECK(sc_e[0][1] == 13756);
    CHECK(sc_e[0][2] == 13880);
    CHECK(sc_e[1][0] == 13755);
    CHECK(sc_e[1][1] == 13880);
    CHECK(sc_e[1][2] == 14468);

    t = m.edge_tuple_from_vids(8582,8712);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 8582);
    CHECK(sc_e[0][1] == 8583);
    CHECK(sc_e[0][2] == 8712);
    CHECK(sc_e[1][0] == 8582);
    CHECK(sc_e[1][1] == 8712);
    CHECK(sc_e[1][2] == 8742);

    t = m.edge_tuple_from_vids(10591,10592);
    sc_e = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PE, t)).get_simplex_vector());
    REQUIRE(sc_e.size() == 2);
    CHECK(sc_e[0][0] == 10571);
    CHECK(sc_e[0][1] == 10591);
    CHECK(sc_e[0][2] == 10592);
    CHECK(sc_e[1][0] == 10591);
    CHECK(sc_e[1][1] == 10592);
    CHECK(sc_e[1][2] == 10593);

    t = m.face_tuple_from_vids(7792, 9683, 9684);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 7792);
    CHECK(sc_f[0][1] == 9683);
    CHECK(sc_f[0][2] == 9684);

    t = m.face_tuple_from_vids(15138, 16615, 16803);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 15138);
    CHECK(sc_f[0][1] == 16615);
    CHECK(sc_f[0][2] == 16803);

    t = m.face_tuple_from_vids(13204, 13222, 13223);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 13204);
    CHECK(sc_f[0][1] == 13222);
    CHECK(sc_f[0][2] == 13223);

    t = m.face_tuple_from_vids(9833, 9904, 9905);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 9833);
    CHECK(sc_f[0][1] == 9904);
    CHECK(sc_f[0][2] == 9905);

    t = m.face_tuple_from_vids(4123, 4130, 4153);
    sc_f = m.get_sorted_simplicial_complex(SimplicialComplex::top_coface_simplex(m, Simplex(PF, t)).get_simplex_vector());
    REQUIRE(sc_f.size() == 1);
    CHECK(sc_f[0][0] == 4123);
    CHECK(sc_f[0][1] == 4130);
    CHECK(sc_f[0][2] == 4153);

}
